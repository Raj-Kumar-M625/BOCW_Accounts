@model Presentation.Models.Vendor.VendorPaymentViewModel

@{
    var UserName = ViewBag.UserName;
    ViewData["Title"] = "TransactionHistory";
    var Id = ViewBag.Id;
    var vlist = ViewBag.BillDetails;
    var ilist = ViewBag.BillItem;
    var billpayments = ViewBag.PaymentDetails;
    var PayDate = @Model.PaymentDate.ToString("dd-MM-yyyy");

}


<div class="mt-1">
    <div class="col-md mt-lg-3">
            <input type="checkbox" id="title1" class="accordioncollapse" checked="checked" />
            <label for="title1" class="labelclass">Transaction Details</label>
            <div class="content">

                <div class=" d-flex flex-row justify-content-start">
                    <div class=" col-md-3">
                        <label class="control-label">Payment Reference No</label>

                        <input asp-for="PaymentReferenceNo" class="form-control" readonly />
                    </div>

                    <div class="form-group col-md-3">
                        <label class="control-label">Payment Date</label>

                        <input class="form-control" asp-for="@PayDate" readonly />

                    </div>
                    <div class="form-group col-md-3">
                        <label class="control-label">Payable  Amount</label>


                        <input class="form-control" asp-for="PaidAmount" readonly />

                    </div>
                    <div class="form-group col-md-3">
                        <label class="control-label">Created By</label>

                        <input class="form-control" asp-for="CreatedBy" readonly />

                    </div>
                </div>
            </div>
            <br />
            <input type="checkbox" id="title2" class="accordioncollapse"  checked/>
            <label for="title2" class="labelclass">List of Bills</label>
            <div class="content">
                <table id="tbltrANSACTIONS" class="table  table-bordered ">
                <caption hidden>Transaction Details</caption>
                    <tr>
                    <th>Bill Ref No</th>
                    <th>Bill Date</th>
                    <th>Due Date</th>
                    <th>₹ Total Bill With GST </th>
                    <th>₹ GST</th>
                    <th>₹ TDS </th>
                    <th>₹ GST-TDS </th>
                    <th>₹ Payable </th>
                    <th>₹ Balance </th>
                    <th>₹ Net Payable </th>
                        
                    </tr>

                    <tbody>
                        @for (int i = 0; i < billpayments.Count; i++)
                        {
                            <tr class="trow">
                                <td>
                                @billpayments[i].Bill.BillReferenceNo
                                </td>

                                <td>
                                @billpayments[i].Bill.BillDate.ToString("dd-MM-yyyy")
                                </td>
                                <td>
                                @billpayments[i].Bill.BillDueDate.ToString("dd-MM-yyyy")
                                </td>                              
                                <td class="amount">

                                @billpayments[i].Bill.TotalBillAmount
                                </td>
                                <td class="amount">
                                @billpayments[i].Bill.GSTAmount
                                </td>
                                <td class="amount">

                                @billpayments[i].Bill.TDS.ToString("0.00")
                                </td>
                                <td class="amount">
                                @billpayments[i].Bill.GSTTDS
                                </td>
                                <td class="amount">
                                @billpayments[i].Bill.NetPayable
                                </td>
                                <td class="amount">
                                @billpayments[i].Bill.BalanceAmount
                                </td>
                            <td class="amount">
                                @billpayments[i].PaymentAmount.ToString("0.00")
                            </td>
                            </tr>

                        }
                    </tbody>
                </table>

            </div>
            <br />

        
    </div>
</div>

<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
<script type="text/javascript" src="https://ajax.cdnjs.com/ajax/libs/json2/20110223/json2.js"></script>
<script type="text/javascript">

    //Load Total Payable column
    $("#tblAddPayments ").on('input', '.text1', function () {
        var getvalue = 0;
        var totalp = 0;
        var totalb1 = 0;
        var totalb2 = 0;
        var totalb = 0;


        $("#tblAddPayments .trow").each(function () {
            var tvalue = ($(this).find("td:eq(9)").text());
            totalp += parseInt(tvalue);
            var tvalue2 = ($(this).find("td:eq(10)").text());
            if (parseInt(tvalue2) == 0) {
                totalb1 += parseInt(tvalue);
            }
            else {
                totalb2 += parseInt(tvalue2);
            }
            if (totalb1 > 0) {
                totalb = totalb2 + totalb1;
            }
            else {
                totalb = totalb2;
            }
        });


        //get net payble and append it to total payable
        $("#tblAddPayments .text1").each(function () {
            var totalamt = $(this).val();
            if ($.isNumeric(totalamt)) {
                getvalue += parseFloat(totalamt);
            }
        });
        $("#totalpayable").val(getvalue);
        if (totalb == 0) {
            if (getvalue == totalp) {
                $("#balance").val(totalp)
            }
            else {
                totalremaing = 0;
                $("#balance").val(totalremaing);
            }
        }
        else {
            if (getvalue == totalb) {
                totalremaing = 0;
                $("#balance").val(totalremaing);
            }
            else {
                $("#balance").val(totalb);
            }

        }

    });

    //Load Remaining Payable Column

    $("#title2").click(function () {
        var balancevalue = 0;
        var txt = 0;
        var txt2 = 0;
        var txt3 = 0;
        var tds = 0;
        var gsttds = 0;
        var total = "";
        $("#tblAddPayments .trow").each(function () {
            var tvalue = ($(this).find("td:eq(7)").text());

            var totalp = parseFloat(tvalue);
            $(this).find("td:eq(7)").text(totalp)

            var tvalue2 = ($(this).find("td:eq(8)").text());
            var totalb = parseFloat(tvalue2);
            $(this).find("td:eq(8)").text(totalb)
        });

        $("#tblAddPayments .trow").each(function () {
            var tvalue = ($(this).find("td:eq(7)").text());

            var totalp = parseInt(tvalue);
            tds += parseInt(totalp);

            var tvalue2 = ($(this).find("td:eq(8)").text());
            var totalb = parseInt(tvalue2);
            gsttds += parseInt(totalb);


        });
        $("#payabledeuction").val(tds + gsttds);
    @*
            $(".balancepayable").each(function() {
            var total1 = $(this).val();

            $(".payable").each(function() {

            total = $(this).val();

            });
            if (total1 == 0) {

            txt2 += parseInt(total);
            }
            else {
            txt +=parseInt(total1);
            }
            });*@

            $("#tblAddPayments .payable").each(function () {

                var total = $(this).val();

                if ($.isNumeric(total)) {

                    balancevalue += parseInt(total);

                }
            });

        if (txt == 0) {
            $("#balance").val(parseFloat(balancevalue));
        }
        else {
            $("#balance").val(parseFloat(txt + txt2));
        }





    });


    $('td').on('input', '.text1', function () {

        var $row = jQuery(this).closest('tr');

        var $columnA = $row.find('td:eq(9)').text();
        var colA = parseFloat($columnA);

        var $columnB = $row.find('td:eq(10)').text();

        var colB = parseFloat($columnB);



        var $columnC = $row.find("td:eq(11) input[type='number']").val();
        var colC = parseFloat($columnC);

        if (colB == 0) {
            if (colC > colA) {
                swal.fire({
                    title: 'Net payable cannot be greater than the payable amount',
                    icon: 'warning',
                    confirmButtonText: 'Ok',
                }).then((result) => {
                    $(this).val("0.00");
                    $("#balance").val("");
                    $("#totalpayable").val("");
                })
            }

        }
        else {
            if (colC > colB) {
                swal.fire({
                    title: 'Net payable cannot be greater than the balance amount',
                    icon: 'warning',
                    confirmButtonText: 'Ok',
                }).then((result) => {
                    $(this).val("0.00");
                    $("#balance").val("");
                    $("#totalpayable").val("");
                })

            }

        }


    });
    @*
        $('td').on("change", function() {
        var $row = jQuery(this).closest('tr');

        var Id=$row.find('td:eq(0)').text();

        @foreach(var m in Model)
        {
        var balance = @m.BalanceAmount;
        }



        var $columnA = $row.find('td:eq(9)').text();
        var colA = parseInt($columnA);

        var $columnB = $row.find('td:eq(10)').text();
        var colB = parseInt($columnB);

        var $columnC = $row.find("td:eq(11) input[type='text']").val();
        var colC = parseInt($columnC);
        if (isNaN(colC)) {
        $row.find("td:eq(10)").text(cell1);
        }
        if (colB == 0) {
        if (isNaN(colC)) {
        colC = 0;
        }
        $row.find("td:eq(10)").text(colA - colC);
        var colD = $row.find("td:eq(10)").text();
        if (isNaN(colD)) {
        $row.find("td:eq(10)").text(cell1);
        }
        }
        else {
        if (colB == colA) {
        $row.find("td:eq(10)").text(colA - colC);
        }
        else {
        $row.find("td:eq(10)").text(colB - colC);
        }
        var colD = $row.find("td:eq(10)").text();
        if (isNaN(colD)) {
        $row.find("td:eq(10)").text(cell1);
        }
        }

        });*@



</script>