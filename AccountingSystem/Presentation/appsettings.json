{
  "BackendHttps": {
    "APIURL": "https://localhost:5003"
  },
  "ConnectionStrings": {
    //Local
    //"AccountingConnectionString": "Server=DELL-KARTIK\\KARTIK;Database=BOCW_COAS;Trusted_Connection=True;MultipleActiveResultSets=True",
    //"AccountingIdentityConnectionString": "Server=DELL-KARTIK\\KARTIK;Database=BOCW_COAS_Identity;Trusted_Connection=True;MultipleActiveResultSets=True"

    ////Local
    //"AccountingConnectionString": "Server=DESKTOP-0L3A0I7;Database=Dev_Accounts;Trusted_Connection=True;MultipleActiveResultSets=True",
    //"AccountingIdentityConnectionString": "Server=DESKTOP-0L3A0I7;Database=Dev_Accounts;Trusted_Connection=True;MultipleActiveResultSets=True"

     //UAT_Server
    "AccountingConnectionString": "Server=13.126.250.206,1433;Database=Dev_Accounts;User Id=sa;Password=Micro@321;MultipleActiveResultSets=True",
    "AccountingIdentityConnectionString": "Server=13.126.250.206,1433;Database=Dev_Accounts;User Id=sa;Password=Micro@321;MultipleActiveResultSets=True"

    //Others
    //"COASConnectionString": "Data Source=.; Integrated Security=False; Initial Catalog=BOCW_COAS; user id=sa; password=Cool@2019; Connect Timeout=30; Encrypt=False; TrustServerCertificate=True; ApplicationIntent=ReadWrite; MultiSubnetFailover=False; MultipleActiveResultSets=True"
    //"DefaultConnection": "Server=host.docker.internal,1433;Database=DynamicFormAPICore;User Id=sa;Password=Cool@2020;MultipleActiveResultSets=True"
  },
  "EmailSettings": {
    "ApiKey": "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",
    "FromName": "UAT_BOCW_COAS",
    "FromAddress": "swethamu@epicmindsit.com",
    "IsEnabled": false
  },
  "JwtSettings": {
    "Key": "F669CD9E3B1A847DE5977582F8FD4",
    "Issuer": "BOCW.COAS",
    "Audience": "BOCW.User",
    "DurationInMinutes": 60
  },
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft": "Warning",
      "Microsoft.Hosting.Lifetime": "Information"
    }
  },
  "AllowedHosts": "*",
  "Serilog": {
    "MinimumLevel": {
      "Default": "Information",
      "Override": {
        "Microsoft": "Warning",
        "System": "Warning",
        "System.Net.Http.HttpClient": "Warning"
      }
    },
    "WriteTo": [
      {
        "Name": "Console"
      },
      {
        "Name": "Logger",
        "Args": {
          "configureLogger": {
            "Filter": [
              {
                "Name": "ByIncludingOnly",
                "Args": {
                  "expression": "Contains(SourceContext, 'AspNetCoreSerilogDemo.TestLogApi') and (@Level = 'Error' or @Level = 'Fatal' or @Level = 'Warning')"
                }
              }
            ],
            "WriteTo": [
              {
                "Name": "File",
                "Args": {
                  "path": "Logs/Error/applog_.log",
                  "outputTemplate": "{Timestamp:o} [Thread:{ThreadId}] [{Level:u3}] ({SourceContext}) {Message}{NewLine}{Exception}",
                  "rollingInterval": "Day",
                  "retainedFileCountLimit": 7
                }
              }
            ]
          }
        }
      },
      {
        "Name": "Logger",
        "Args": {
          "configureLogger": {
            "Filter": [
              {
                "Name": "ByIncludingOnly",
                "Args": {
                  "expression": "Contains(SourceContext, 'AspNetCoreSerilogDemo.TestLogApi') and @Level = 'Information'"
                }
              }
            ],
            "WriteTo": [
              {
                "Name": "File",
                "Args": {
                  "path": "Logs/Info/applog_.log",
                  "outputTemplate": "{Timestamp:o} [{Level:u3}] ({SourceContext}) {Message}{NewLine}{Exception}",
                  "rollingInterval": "Day",
                  "retainedFileCountLimit": 7
                }
              }
            ]
          }
        }
      }
    ],
    "Enrich": [ "FromLogContext", "WithMachineName", "WithThreadId", "WithThreadName" ],
    "Properties": {
      "Application": "AspNetCoreSerilogDemo"
    }
  },
  "NotificationProvider": "sweetAlert",
  "SysConfig": {
    "SessionExpiryTimeInSeconds": 6000, //Set session time in seconds
    "SessionExpiryNoticeTimeInSeconds": 60 //Time in seconds, notification will appear before session expires.
  },
  "TaskScheduleTimeOfDay": "01:00:00",
  "BaseURL": "http://ec2-52-201-109-83.compute-1.amazonaws.com",
  "CessAPI": "api/cess/BocwAccounts/getCessTransactionList",
  "CessUpdateAPI": "api/cess/BocwAccounts/UpdateCessTransaction",
  "APIVersion": "1.0",
  "UserId": "1"
}
