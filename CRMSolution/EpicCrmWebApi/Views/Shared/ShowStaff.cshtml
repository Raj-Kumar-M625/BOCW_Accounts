@{
    bool gradesEnabled = ViewBag.GradesEnabled;
    bool AllowAssociation = ViewBag.IsSuperAdmin;
    IEnumerable<DomainEntities.CodeTableEx> grades = (List<DomainEntities.CodeTableEx>)ViewBag.Grade;
    IEnumerable<DomainEntities.CodeTableEx> departments = (List<DomainEntities.CodeTableEx>)ViewBag.Department;
    IEnumerable<DomainEntities.CodeTableEx> designations = (List<DomainEntities.CodeTableEx>)ViewBag.Designation;
    IEnumerable<DomainEntities.OfficeHierarchy> officeHierarchy = (IEnumerable<DomainEntities.OfficeHierarchy>)ViewBag.OfficeHierarchy;
    System.Text.StringBuilder sb = new System.Text.StringBuilder();
}

@{
    string t = $"Field Staff";
    Html.RenderPartial("_CodeSnippetPageHeader", t);
}


<div class="well" id="idSearchWell">
    <div class="row">
        <div class="col-sm-2">
            <div class="form-group">
                <label>Zone</label>
                <select class="form-control" id="selZone">
                    <option value="All">All</option>
                </select>
            </div>
        </div>
        <div class="col-sm-2">
            <div class="form-group">
                <label>Area</label>
                <select class="form-control" id="selArea">
                    <option value="All">All</option>
                </select>
            </div>
        </div>
        <div class="col-sm-2">
            <div class="form-group">
                <label>Territory</label>
                <select class="form-control" id="selTerritory">
                    <option value="All">All</option>
                </select>
            </div>
        </div>
        <div class="col-sm-2">
            <div class="form-group">
                <label>HQ</label>
                <select class="form-control" id="selHQ">
                    <option value="All">All</option>
                </select>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-2">
            <div class="form-group">
                <label>Employee Code</label>
                <input type="text" class="form-control" id="EmployeeCode" />
            </div>
        </div>
        <div class="col-sm-2">
            <div class="form-group">
                <label>Name</label>
                <input type="text" class="form-control" id="Name" />
            </div>
        </div>
        <div class="col-sm-2">
            <div class="form-group">
                <label>Phone</label>
                <input type="text" class="form-control" id="Phone" />
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-2">
            <div class="form-group">
                <label>Department</label>
                <select class="form-control" id="Department">
                    <option value="0">All</option>
                    @foreach (var o in departments)
                    {
                        <option value="@o.Code">@o.CodeName</option>
                    }
                </select>
            </div>
        </div>

        <div class="col-sm-2">
            <div class="form-group">
                <label>Designation</label>
                <select class="form-control" id="Designation">
                    <option value="0">All</option>
                    @foreach (var o in designations)
                    {
                        <option value="@o.Code">@o.CodeName</option>
                    }
                </select>
            </div>
        </div>

        @if (gradesEnabled)
        {
            <div class="col-sm-2">
                <div class="form-group">
                    <label>Grade</label>
                    <select class="form-control" id="Grade">
                        <option value="0">Select Grade</option>
                        @foreach (var g in grades)
                        {
                            <option value="@g.Code">@g.Code</option>
                        }
                    </select>
                </div>
            </div>
        }

        <div class="col-sm-2">
            <div class="form-group">
                <label>Status</label>
                <select class="form-control" id="Status">
                    <option value="2">All</option>
                    <option value="1">Current</option>
                    <option value="0">Resigned</option>
                </select>
            </div>
        </div>
        @if (AllowAssociation)
        {
            <div class="col-sm-2">
                <div class="form-group">
                    <label>Association</label>
                    <select class="form-control" id="Association">
                        <option value="2">All</option>
                        <option value="1">Associated</option>
                        <option value="0">Not Associated</option>
                    </select>
                </div>
            </div>
        }
        <div class="col-sm-2">
            <div class="form-group">
                <label>&nbsp;</label>
                <input type="button" id="btnSearch" value="Search" class="form-control btn-success" />
            </div>
        </div>
    </div>
</div>
<div id="dataArea">
</div>

<script type="text/javascript">
    // Office Hierarchy object
        @Html.Raw("var OfficeHierarchy =[];")

        @foreach(var oh in officeHierarchy)
        {
            sb.AppendLine("var joh = { };");

            sb.AppendLine($"joh.ZoneCode = '{oh.ZoneCode}';");
            sb.AppendLine($"joh.ZoneName = '{oh.ZoneName}';");
            sb.AppendLine($"joh.AreaCode = '{oh.AreaCode}'; ");
            sb.AppendLine($"joh.AreaName = '{oh.AreaName}';");
            sb.AppendLine($"joh.TerritoryCode = '{oh.TerritoryCode}'; ");
            sb.AppendLine($"joh.TerritoryName = '{oh.TerritoryName}'; ");
            sb.AppendLine($"joh.HQCode = '{oh.HQCode}'; ");
            sb.AppendLine($"joh.HQName = '{oh.HQName}';");
            sb.AppendLine("OfficeHierarchy.push(joh);");
        }
    @Html.Raw(sb.ToString());

</script>

@section scripts{
    <script>
        $(document).ready(
            function () {
                ShowSearch();
                $("#btnSearch").off('click').on('click', btnSearchClicked);
                $("#showSearch").off('click').on('click', ShowSearch);

                // once user changes selection boxes, clear results area;
                $('Select').change(function () { ClearResults(); });
                $('input').change(function () { ClearResults(); });

                // zone/Area/Territory/HQ changed
                $('#selZone').change(function () { ZonesSelectionChanged(); })
                $('#selArea').change(function () { AreasSelectionChanged(); })
                $('#selTerritory').change(function () { TerritoriesSelectionChanged(); })

                sessionStorage.setItem("CRM", "");
                //if page reloaded then populate the existing search criteria
                GetSearchValues();

            });

        function GetSearchValues() {
            if (sessionStorage.length > 0) {
                var saveCheck = sessionStorage.getItem('saved');
                if (saveCheck == null || saveCheck == "") {
                    return;
                }

                //EmployeeCode
                var code = sessionStorage.getItem('EmployeeCode');
                if (code != null) {
                    $('#EmployeeCode').val(code);
                }
                //Name
                var name = sessionStorage.getItem('Name');
                if (name != null) {
                    $('#Name').val(name);
                }
                //Phone
                var phone = sessionStorage.getItem('Phone');
                if (phone != null) {
                    $('#Phone').val(phone);
                }
               
                //Grade
                var grade = sessionStorage.getItem('Grade');
                if (grade != null) {
                    $('#Grade').val(grade);
                }
                //Status
                var status = sessionStorage.getItem('Status');
                if (status != null) {
                    $('#Status').val(status);
                }
                // Adding to list the sales person who are not assigned to any hqCode or area
                var association = sessionStorage.getItem('Association');
                if (association != null) {
                    $('#Association').val(association);
                }
                //Department
                var dept = sessionStorage.getItem('Department');
                if (dept != null) {
                    $('#Department').val(dept);
                }

                var desig = sessionStorage.getItem('Designation');
                if (desig != null) {
                    $('#Designation').val(desig);
                }

                //Get the results based on search criteria
                btnSearchClicked();
            }
        }

        // Search button
        var btnSearchClicked = function (event) {
            DisableSearchButton();
            //save search criteria values
            SaveSearchCriteria();

            var searchCriteria = CaptureSearchCriteria();
            //alert(JSON.stringify(searchCriteria));

            //$('#dataArea').html('<p>Please wait...</p>');
            $('#dataArea').html(waitImage);
            $.ajax('GetSearchSalesPersons', {
                cache: false,
                type: "Get",
                contentType: "application/json",
                data: searchCriteria,
                success: function (data, textStatus, jqXHR) {
                    $('#dataArea').html(data);
                    // hide the area that shows order line items on this page itself;
                    $(".orderDetailRow").hide();
                    // reset the json object that hold flags about showing order items inline.
                    openCustomerBlocks = {};

                    if (document.getElementById("downloadLinkArea") != null) {
                        // create link to download the data as excel
                        // do some text replacements - remove links etc.
                        var dataToSave = data.replace(/<a.*\">/g, "").replace(/<\/a>/g, "");
                        // Checked check box to be turned into 'Yes'
                        dataToSave = dataToSave.replace(/<input checked=\"checked\" class=\"check-box\" disabled=\"disabled\" type=\"checkbox\" \/>/g, "Yes");

                        // now create html and remove header row from downloadable data
                        var $dataAsHtml = $(dataToSave);
                        $dataAsHtml.find("#dataTableHeader").remove();
                        // remove all rows that are there to show order details inline
                        // it will be there only for orders;
                        $dataAsHtml.find(".orderDetailRow").remove();
                        dataToSave = $('<div>').append($dataAsHtml).html();

                        var blob = new Blob([dataToSave], { type: "application/x-msexcel" });
                        var url = URL.createObjectURL(blob);

                        var a = document.createElement('a');
                        a.download = "DownloadReport.xls";
                        a.href = url;
                        a.textContent = "Download as Excel";

                        document.getElementById("downloadLinkArea").appendChild(a);
                    }
                    $(".customerRow").hide();
                    $(".editInPopup").off('click').on('click', editPopupLinkClicked);
                    $(".addInPopup").off('click').on('click', addPopupLinkClicked);

                    EnableSearchButton();

                    if ($("#staffDataTable").length) {
                        HideSearch();
                        $("#staffDataTable").DataTable();
                    }

                    //$('div#staffDataTable_filter label input').addClass('form-control');
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert("An error occured while getting data matching your search criteria.")
                    EnableSearchButton();
                }
            });
        }

        function CaptureSearchCriteria() {
            var searchCriteria = {};
            searchCriteria.EmployeeCode = $("#EmployeeCode").val();
            searchCriteria.Name = $("#Name").val();
            searchCriteria.Phone = $("#Phone").val();
            searchCriteria.Grade = $("#Grade").val();
            searchCriteria.Status = $("#Status").val();
            searchCriteria.Association = $("#Association").val();
            searchCriteria.Department = $("#Department").val();
            searchCriteria.Designation = $("#Designation").val();
            searchCriteria.Zone = $("#selZone").val();
            searchCriteria.Area = $("#selArea").val();
            searchCriteria.Territory = $("#selTerritory").val();
            searchCriteria.HQ = $("#selHQ").val();
            return searchCriteria;
        }

        function SaveSearchCriteria() {
            sessionStorage.setItem("saved", "saved");
            sessionStorage.setItem("CRM", "");
            sessionStorage.setItem("EmployeeCode", $('#EmployeeCode').val());
            sessionStorage.setItem("Name", $('#Name').val());
            sessionStorage.setItem("Phone", $('#Phone').val());
            sessionStorage.setItem("Grade", $('#Grade').val());
            sessionStorage.setItem("Status", $('#Status').val());
            sessionStorage.setItem("Association", $('#Association').val());
            sessionStorage.setItem("Department", $('#Department').val());
            sessionStorage.setItem("Designation", $("#Designation").val());
            sessionStorage.setItem("Zone", $('#selZone').val());
            sessionStorage.setItem("Area", $('#selArea').val());
            sessionStorage.setItem("Territory", $('#selTerritory').val());
            sessionStorage.setItem("HQCode", $('#selHQ').val());
        }

        function DisableSearchButton() {
            $("#btnSearch").hide();
        }

        function EnableSearchButton() {
            $("#btnSearch").show();
        }

        function HideSearch() {
            $("#idSearchWell").hide();
            $("#showSearch").show();
        }

        function ShowSearch() {
            $("#idSearchWell").show("slow");
            $("#showSearch").hide();
        }

        function ClearResults() {
            $('#dataArea').html('');
        }

        function associationCloseAnchorClicked(rowGuid) {
            // remove all siblings of rowGuid that were added in associationAnchorClicked
            $('#' + rowGuid).parent().find('tr').each(function (i, e) {
                if ($(e).prop('id') == undefined || $(e).prop('id') != rowGuid)
                {
                    $(e).remove();
                }
            });

            $('#' + rowGuid).hide();

            // show original results table
            $('div#staffDataTable_wrapper').fadeIn("slow");
        };

        function associationAnchorClicked(parentRowGuid, rowGuid, targetGuid, staffCode) {
                // hide complete result table
                $('div#staffDataTable_wrapper').fadeOut("slow", "linear");

                // copy parent row data and remove links in that
                $parentRowData = $('tr#' + parentRowGuid).clone();
                $parentRowData.find('td').each(function (i, e) {
                    $(e).find('a').each(function (i2, e2) {
                        $(e).html($(e2).text());
                    });
                });

                // append header and row to results area
                $('#' + rowGuid).parent().prepend($parentRowData);
                $('#' + rowGuid).parent().prepend($('tr#' + parentRowGuid).parent().parent().find('thead tr').clone());

                $('#' + rowGuid).fadeIn("slow");
                $('#' + rowGuid).find("td:first-child")
                    .html("Associations for " + staffCode +
                    "<br/> <br/> <a href onclick=\"associationCloseAnchorClicked('" + rowGuid + "');return false;\">Back to Results</a>");

                //$('#' + targetGuid).html('<p>Please wait</p>');
                $('#' + targetGuid).html(waitImage);


                $.ajax('/Admin/GetStaffAssociations', {
                    cache: false,
                    type: "Get",
                    contentType: "application/json",
                    data: { 'staffCode': staffCode },
                    success: function (data, textStatus, jqXHR) {
                        $('#' + targetGuid).html(data);
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        alert("An error occured while getting Association data.")
                    }
                });
        }

        function CustomersForAreaClicked(staffCode, areaCode) {
            $.ajax('/Admin/GetCustomersForAreaPlusStaffCode', {
                cache: false,
                type: "Get",
                contentType: "application/json",
                data: { 'staffCode': staffCode, 'areaCode': areaCode },
                success: function (data, textStatus, jqXHR) {
                    var myWindow = window.open("", "", "width=500,height=300,titlebar=no,menubar=no,scrollbars=yes");
                    myWindow.document.write(data);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert("An error occured while getting Customer data.")
                }
            });
        }

        function ProductsForAreaClicked(staffCode, areaCode) {
            $.ajax('/Admin/GetAvailableProductsForArea', {
                cache: false,
                type: "Get",
                contentType: "application/json",
                data: { 'staffCode': staffCode, 'areaCode': areaCode },
                success: function (data, textStatus, jqXHR) {
                    var myWindow = window.open("", "", "width=500,height=300,titlebar=no,menubar=no,scrollbars=yes");
                    myWindow.document.write(data);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert("An error occured while getting Product data.")
                }
            });
        }

        $(document).ready(
            function () {
                var selectedObj = {};
                for (i = 0; i < OfficeHierarchy.length; i++) {
                    var o = OfficeHierarchy[i];
                    selectedObj[o.ZoneName] = o.ZoneCode;
                }
                Object.keys(selectedObj).sort().forEach(function (element) {
                    var opt = new Option(element, selectedObj[element]);
                    $('#selZone').append(opt);
                });
            });

        function ZonesSelectionChanged() {
            $('#selArea option:not(:first-child)').remove();
            $('#selTerritory option:not(:first-child)').remove();
            $('#selHQ option:not(:first-child)').remove();

            // get current value of Zone
            var selectedZone = $("#selZone").val();
            FillAreasForZone(selectedZone);
        }

        function FillAreasForZone(z) {
            var selectedObj = {};
            for (i = 0; i < OfficeHierarchy.length; i++) {
                var o = OfficeHierarchy[i];
                if (o.ZoneCode == z) {
                    // use Area Name as key so we can sort by name
                    selectedObj[o.AreaName] = o.AreaCode;
                }
            }
            Object.keys(selectedObj).sort().forEach(function (element) {
                var opt = new Option(element, selectedObj[element]);
                $('#selArea').append(opt);
            });
        }

        function AreasSelectionChanged() {
            $('#selTerritory option:not(:first-child)').remove();
            $('#selHQ option:not(:first-child)').remove();
            var selectedZone = $("#selZone").val();
            var selectedArea = $("#selArea").val();
            FillTerritories(selectedZone, selectedArea);
        }

        // zone and area
        function FillTerritories(zo, ar) {
            var selectedObj = {};
            for (i = 0; i < OfficeHierarchy.length; i++) {
                var o = OfficeHierarchy[i];
                if (o.ZoneCode == zo && o.AreaCode == ar) {
                    selectedObj[o.TerritoryName] = o.TerritoryCode;
                }
            }
            Object.keys(selectedObj).sort().forEach(function (element) {
                var opt = new Option(element, selectedObj[element]);
                $('#selTerritory').append(opt);
            });
        }

        function TerritoriesSelectionChanged() {
            $('#selHQ option:not(:first-child)').remove();
            var selectedZone = $("#selZone").val();
            var selectedArea = $("#selArea").val();
            var selectedTerritory = $("#selTerritory").val();
            FillHQ(selectedZone, selectedArea, selectedTerritory);
        }

        // zone, area, tr
        function FillHQ(zo, ar, tr) {
            var selectedObj = {};
            for (i = 0; i < OfficeHierarchy.length; i++) {
                var o = OfficeHierarchy[i];
                if (o.ZoneCode == zo && o.AreaCode == ar && o.TerritoryCode == tr) {
                    selectedObj[o.HQName] = o.HQCode;
                }
            }
            Object.keys(selectedObj).sort().forEach(function (element) {
                var opt = new Option(element, selectedObj[element]);
                $('#selHQ').append(opt);
            });
        }
    </script>
}


