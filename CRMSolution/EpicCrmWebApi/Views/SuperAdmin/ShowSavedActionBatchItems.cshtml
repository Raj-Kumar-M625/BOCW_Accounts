@model IEnumerable<DomainEntities.SqliteActionDisplayData>

@{
    ViewBag.Title = "Saved Action Batch Items";
    string pageTitle = String.Format("Saved Action Batch Items [Batch Id:{0}; Employee Name: {1}]", ViewBag.BatchId, ViewBag.EmpName);
}

<h2>@pageTitle</h2>

<table class="table">
    <tr>
        <th>&nbsp;</th>
        <th>
            @Html.DisplayNameFor(model => model.At)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ActivityTrackingType)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ContactCount)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LocationCount)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Latitude)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Longitude)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.AtBusiness)
        </th>
        <th>@Html.DisplayNameFor(model => model.MNC)</th>
        <th>@Html.DisplayNameFor(model => model.MCC)</th>
        <th>@Html.DisplayNameFor(model => model.LAC)</th>
        <th>@Html.DisplayNameFor(model => model.CellId)</th>

        <th>
            @Html.DisplayNameFor(model => model.DerivedLocSource)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DerivedLatitude)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DerivedLongitude)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.ActivityAmount)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ClientCode)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ClientName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ClientPhone)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ClientType)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ActivityType)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Comments)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.IsProcessed)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TrackingId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ActivityId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ImageCount)
        </th>

        <th>@Html.DisplayNameFor(model => model.PhoneDbId)</th>
        <th>
            @Html.DisplayNameFor(model => model.IMEI)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PhoneModel)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PhoneOS)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.InstrumentId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.AppVersion)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LocationTaskStatus)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LocationException)
        </th>
    </tr>

    @foreach (var item in Model)
    {
        string guidForAdditionalRow = Guid.NewGuid().ToString();
        string guidForAdditionalCellHead = Guid.NewGuid().ToString();
        string guidForAdditionalCell = Guid.NewGuid().ToString();

        string guidForLocationRow = Guid.NewGuid().ToString();
        string guidForLocationCellHead = Guid.NewGuid().ToString();
        string guidForLocationCell = Guid.NewGuid().ToString();

        string activityImage = $"ActivityType_{item.ActivityTrackingType:00}.png";

        <tr>
            <td>
                <img height="40" width="40" src="~/Content/img/ActivityImages/@activityImage" />
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.At)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ActivityTrackingType)
            </td>
            <td>
                @if (item.ContactCount > 0)
                {
                    <a href="" title="Show Contacts" onclick="additionalAnchorClicked('@guidForAdditionalRow', '@guidForAdditionalCell', '@guidForAdditionalCellHead', '@item.Id', 'Contacts'); return false;">@item.ContactCount</a>
                }
                else
                {
                    @Html.DisplayFor(modelItem => item.ContactCount)
                }
            </td>

            <td>
                @if (item.LocationCount > 0)
                {
                    <a href="" title="Show Locations" onclick="additionalAnchorClicked('@guidForLocationRow', '@guidForLocationCell', '@guidForLocationCellHead', '@item.Id', 'Locations'); return false;">@item.LocationCount</a>
                }
                else
                {
                    @Html.DisplayFor(modelItem => item.LocationCount)
                }
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.Latitude, "DecimalCoordinates")
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Longitude, "DecimalCoordinates")
            </td>
            <td>
                @Html.CheckBoxFor(modelItem => item.AtBusiness)
            </td>
            <td>@Html.DisplayFor(modelItem => item.MNC)</td>
            <td>@Html.DisplayFor(modelItem => item.MCC)</td>
            <td>@Html.DisplayFor(modelItem => item.LAC)</td>
            <td>@Html.DisplayFor(modelItem => item.CellId)</td>

            <td>
                @Html.DisplayFor(modelItem => item.DerivedLocSource)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DerivedLatitude, "DecimalCoordinates")
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DerivedLongitude, "DecimalCoordinates")
            </td>


            <td>
                @Html.DisplayFor(modelItem => item.ActivityAmount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ClientCode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ClientName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ClientPhone)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ClientType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ActivityType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Comments)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsProcessed)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TrackingId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ActivityId)
            </td>
            <td>
                @if (item.ImageCount == 0)
                {
                    @Html.DisplayFor(modelItem => item.ImageCount)
                }
                else
                {
                    <a href="" onclick="DisplayImage(@item.Id, @item.ImageCount);return false;">@item.ImageCount</a>
                }
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.PhoneDbId)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.IMEI)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.PhoneModel)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PhoneOS)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.InstrumentId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AppVersion)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LocationTaskStatus)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LocationException)
            </td>
        </tr>
        <tr id="@guidForAdditionalRow" style="display:none;">
            <td style="border-top:none;font-weight:bold;" id="@guidForAdditionalCellHead"></td>
            <td style="border-top:none;" id="@guidForAdditionalCell" colspan="15">&nsbp;</td>
        </tr>
        <tr id="@guidForLocationRow" style="display:none;">
            <td style="border-top:none;font-weight:bold;" id="@guidForLocationCellHead"></td>
            <td style="border-top:none;" id="@guidForLocationCell" colspan="15">&nsbp;</td>
        </tr>
    }
</table>


<div id="imageDisplayArea">

</div>

@section scripts{
    <script>
        $(document).ready(
            function () {
                $("#imageDisplayArea").hide();
            }
        );

        var isProcessing = false;
        function DisplayImage(id, imageCount) {
            if (isProcessing) {
                return;
            }
            isProcessing = true;

            var imagesRetrieved = 0;

            $("#imageDisplayArea").show();
            $('#imageDisplayArea').html('<p>Please wait...</p>');

            for (i = imageCount; i > 0; i--) {
                var xhr = new XMLHttpRequest();
                xhr.onreadystatechange = function () {
                    if (this.readyState == 4 && this.status == 200) {
                        var reader = new window.FileReader();
                        reader.readAsDataURL(this.response);
                        reader.onloadend = function () {
                            imagesRetrieved++;
                            $('#imageDisplayArea').append('<img style="margin-left:20px;" height="300px" width="auto" src="' + reader.result + '"/>');
                            if (imagesRetrieved == imageCount) // last image processed
                            {
                                $('#imageDisplayArea p').remove();
                                isProcessing = false;
                            }
                        }
                    }
                }
                xhr.open('GET', '/Admin/ActivityImageData?Id=' + id + '&imageItem=' + i);
                xhr.responseType = 'blob';
                xhr.send();
            }
        }

        var openContactBlocks = {};
        function additionalAnchorClicked(rowGuid, targetGuid, targetGuidHead, actionId, displayStringHead) {
            if (openContactBlocks[rowGuid] === undefined || openContactBlocks[rowGuid] === '') // never opened or closed after open
            {
                openContactBlocks[rowGuid] = displayStringHead;  // first time click
                $('#' + rowGuid).show();
                $('#' + targetGuidHead).html('<p>' + displayStringHead + '</p>');
                $('#' + targetGuid).html('<p>Please wait</p>');
                var uri = '/SuperAdmin/ShowSavedAction' + displayStringHead;
                $.ajax(uri, {
                    cache: false,
                    type: "Get",
                    contentType: "application/json",
                    data: { 'actionId': actionId },
                    success: function (data, textStatus, jqXHR) {
                        $('#' + targetGuid).html(data);
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        alert("An error occured while getting data.")
                    }
                });
            }
            else // already open - close it now;
            {
                $('#' + rowGuid).hide();
                openContactBlocks[rowGuid] = '';
            }
        }
    </script>
}