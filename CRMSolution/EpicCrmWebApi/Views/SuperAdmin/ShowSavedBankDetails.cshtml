@model IEnumerable<EpicCrmWebApi.SqliteBankDetailDisplayData>

@{
    ViewBag.Title = "Saved Bank Detail Batch Items";
    string pageTitle = String.Format("Saved Bank Detail Batch Items [Batch Id:{0}; Employee Name: {1}]", ViewBag.BatchId, ViewBag.EmpName);
}

<h2>@pageTitle</h2>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.IsNewEntity)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.EntityId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.EntityName)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.ImageCount)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.IsSelfAccount)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.AccountHolderName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.AccountHolderPAN)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.BankName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.BankAccount)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.BankIFSC)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.BankBranch)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.TimeStamp)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.IsProcessed)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.EntityBankDetailId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PhoneDbId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ParentReferenceId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ActivityId)
        </th>
    </tr>

@foreach (var item in Model) {
    string guidForImage = Guid.NewGuid().ToString();
    string imageDisplayWaitArea = Guid.NewGuid().ToString();
    string imageDisplayArea = Guid.NewGuid().ToString();

    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.IsNewEntity)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.EntityId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.EntityName)
        </td>

        <td>
            @if (item.ImageCount > 0)
                {
                <a href="" onclick="displayImage(@item.Id, @item.ImageCount, '@guidForImage', '@imageDisplayWaitArea', '@imageDisplayArea');return false;">@item.ImageCount</a>
            }
            else
            {
                @Html.DisplayFor(modelItem => item.ImageCount)
            }
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.IsSelfAccount)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.AccountHolderName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.AccountHolderPAN)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.BankName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.BankAccount)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.BankIFSC)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.BankBranch)
        </td>

        <td>
            @Html.DisplayFor(modelItem => item.TimeStamp, "DatetimeShort")
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.IsProcessed)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.EntityBankDetailId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PhoneDbId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ParentReferenceId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ActivityId)
        </td>
    </tr>
    <tr id="@imageDisplayWaitArea" style="display:none;">
        <td colspan="18">
            <span id="">Getting Image...Please wait</span>
        </td>
    </tr>
    <tr id="@imageDisplayArea" style="display:none;">
        <td id="@guidForImage" colspan="18"></td>
    </tr>
}

</table>
<script>
    var isProcessing = {};
    var openAssociationBlocks = {};

    function displayImage(id, imageCount, displayImage, imageDisplayWaitArea, imageDisplayArea) {
        if (openAssociationBlocks[displayImage] === undefined || openAssociationBlocks[displayImage] === '') // never opened or closed after open
        {
            if (isProcessing[displayImage] === 'image' || isProcessing[displayImage] === undefined) {

                isProcessing[displayImage] = '';

                var imagesRetrieved = 0;
                $('#' + imageDisplayArea).show();
                $('#' + imageDisplayWaitArea).show();
                $('#' + displayImage).html('<span></span>');

                for (i = imageCount; i > 0; i--) {
                    var xhr = new XMLHttpRequest();
                    xhr.onreadystatechange = function () {
                        if (this.readyState == 4 && this.status == 200) {
                            var reader = new window.FileReader();
                            reader.readAsDataURL(this.response);
                            reader.onloadend = function () {
                                imagesRetrieved++;
                                $('#' + displayImage).append('<img style="margin-left:20px;" height="300px" width="auto" src="' + reader.result + '"/>');
                                if (imagesRetrieved == imageCount) // last image processed
                                {
                                    $('#' + imageDisplayArea).show();
                                    isProcessing[displayImage] = 'image';
                                    $('#' + imageDisplayWaitArea).hide();
                                }
                            }
                        }
                    }
                    xhr.open('GET', '/SuperAdmin/SqliteBankDetailImageData?Id=' + id + '&imageItem=' + i);
                    xhr.responseType = 'blob';
                    xhr.send();
                }
                openAssociationBlocks[displayImage] = 'displaying';
            } else {
                return;
            }
        } else {
            $('#' + imageDisplayArea).hide();
            $('#' + imageDisplayWaitArea).hide();
            openAssociationBlocks[displayImage] = '';
        }
    }
</script>
