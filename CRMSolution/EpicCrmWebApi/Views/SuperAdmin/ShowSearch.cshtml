@model EpicCrmWebApi.ModelFilter


@{
    ViewBag.Title = "Search";
    string reportType = ViewBag.ReportType;
    string searchButtonText = (string)ViewBag.SearchButtonText;
    IEnumerable<DomainEntities.OfficeHierarchy> officeHierarchy = (IEnumerable<DomainEntities.OfficeHierarchy>)ViewBag.OfficeHierarchy;
    System.Text.StringBuilder sb = new System.Text.StringBuilder();
}
<h2>Specify the @ViewBag.ReportType criteria and click @searchButtonText</h2>

@* https://www.w3schools.com/Bootstrap/bootstrap_scrollspy.asp
    http://www.eyecon.ro/bootstrap-datepicker/
    https://tarruda.github.io/bootstrap-datetimepicker/
*@
<div class="well">
    <div class="row">
        <div class="col-sm-3">
            <div class="form-group">
                <label>Zone</label>
                <select class="form-control" id="selZone">
                    <option value="All">All</option>
                    @foreach (var o in Model.Zones.OrderBy(x => x.CodeName))
                    {
                        <option value="@o.Code">@o.CodeName (@o.Code)</option>
                    }
                </select>
            </div>
        </div>
        <div class="col-sm-3">
            <div class="form-group">
                <label>Area</label>
                <select class="form-control" id="selArea">
                    <option value="All">All</option>
                </select>
            </div>
        </div>
        <div class="col-sm-3">
            <div class="form-group">
                <label>Territory</label>
                <select class="form-control" id="selTerritory">
                    <option value="All">All</option>
                </select>
            </div>
        </div>
        <div class="col-sm-3">
            <div class="form-group">
                <label>HQ</label>
                <select class="form-control" id="selHQ">
                    <option value="All">All</option>
                </select>
            </div>
        </div>

    </div>
    <div class="row">
        <div class="col-sm-2">
            <div class="form-group">
                <label>&nbsp;</label>
                <input type="button" id="btnSearch" value="@searchButtonText" class="form-control btn-success" />
            </div>
        </div>
    </div>
</div>

<div id="dataArea">
</div>

<script type="text/javascript">
    // Office Hierarchy object
        @Html.Raw("var OfficeHierarchy =[];")

        @foreach(var oh in officeHierarchy)
        {
            sb.AppendLine("var joh = { };");

            sb.AppendLine($"joh.ZoneCode = '{oh.ZoneCode}';");
            sb.AppendLine($"joh.ZoneName = '{oh.ZoneName}';");
            sb.AppendLine($"joh.AreaCode = '{oh.AreaCode}'; ");
            sb.AppendLine($"joh.AreaName = '{oh.AreaName}';");
            sb.AppendLine($"joh.TerritoryCode = '{oh.TerritoryCode}'; ");
            sb.AppendLine($"joh.TerritoryName = '{oh.TerritoryName}'; ");
            sb.AppendLine($"joh.HQCode = '{oh.HQCode}'; ");
            sb.AppendLine($"joh.HQName = '{oh.HQName}';");
            sb.AppendLine("OfficeHierarchy.push(joh);");
        }
    @Html.Raw(sb.ToString());


</script>


@section scripts{
    <script>

            $(document).ready(
                function () {

                    $("#btnSearch").off('click').on('click', btnSearchClicked);

                    // once user changes selection boxes, clear results area;
                    $('Select').change(function () { ClearResults(); });

                    // zone/Area/Territory/HQ changed
                    $('#selZone').change(function () { ZoneSelectionChanged(); })
                    $('#selArea').change(function () { AreaSelectionChanged(); })
                    $('#selTerritory').change(function () { TerritorySelectionChanged(); })
                }
            );

            function ClearResults()
            {
                $('#dataArea').html('');
            }

            // Search button
            var btnSearchClicked = function (event) {
                DisableSearchButton();

                var searchCriteria = CaptureSearchCriteria();
                //alert(JSON.stringify(searchCriteria));

                $('#dataArea').html('<p>Please wait...</p>');

                $.ajax('/SuperAdmin/GetSearchResult', {
                    cache: false,
                    type: "Get",
                    contentType: "application/json",
                    data: searchCriteria,
                    success: function (data, textStatus, jqXHR)
                    {
                        $('#dataArea').html(data);
                        EnableSearchButton();
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        alert("An error occured while getting data matching your search criteria.")
                        EnableSearchButton();
                    }
                });
            }

            function DisableSearchButton()
            {
                $("#btnSearch").hide();
            }

            function EnableSearchButton()
            {
                $("#btnSearch").show();
            }

            function CaptureSearchCriteria() {
                var searchCriteria = {};
                searchCriteria.Zone = $("#selZone").val();
                searchCriteria.Area = $("#selArea").val();
                searchCriteria.Territory = $("#selTerritory").val();
                searchCriteria.HQ = $("#selHQ").val();
                searchCriteria.ReportType = '@ViewBag.ReportType';
                return searchCriteria;
            }

            function ZoneSelectionChanged()
            {
                $('#selArea option:not(:first-child)').remove();
                $('#selTerritory option:not(:first-child)').remove();
                $('#selHQ option:not(:first-child)').remove();

                // get current value of Zone
                var selectedZone = $("#selZone").val();
                FillAreasForZone(selectedZone);
            }

            function FillAreasForZone(z)
            {
                var selectedObj = {};
                for(i= 0; i < OfficeHierarchy.length; i++)
                {
                    var o = OfficeHierarchy[i];
                    if (o.ZoneCode == z) {
                        // use Area Name as key so we can sort by name
                        selectedObj[o.AreaName] = o.AreaCode;
                    }
                }
                Object.keys(selectedObj).sort().forEach(function (element) {
                    //var opt = new Option(element, selectedObj[element]);
                    var opt = new Option(element + ' (' + selectedObj[element] + ')', selectedObj[element]);
                    $('#selArea').append(opt);
                });
            }

            function AreaSelectionChanged()
            {
                $('#selTerritory option:not(:first-child)').remove();
                $('#selHQ option:not(:first-child)').remove();
                var selectedZone = $("#selZone").val();
                var selectedArea = $("#selArea").val();
                FillTerritories(selectedZone, selectedArea);
            }

            // zone and area
            function FillTerritories(zo, ar) {
                var selectedObj = {};
                for (i = 0; i < OfficeHierarchy.length; i++) {
                    var o = OfficeHierarchy[i];
                    if (o.ZoneCode == zo && o.AreaCode == ar) {
                        selectedObj[o.TerritoryName] = o.TerritoryCode;
                    }
                }
                Object.keys(selectedObj).sort().forEach(function (element) {
                    //var opt = new Option(element, selectedObj[element]);
                    var opt = new Option(element + ' (' + selectedObj[element] + ')', selectedObj[element]);
                    $('#selTerritory').append(opt);
                });
            }

            function TerritorySelectionChanged()
            {
                $('#selHQ option:not(:first-child)').remove();
                var selectedZone = $("#selZone").val();
                var selectedArea = $("#selArea").val();
                var selectedTerritory = $("#selTerritory").val();
                FillHQ(selectedZone, selectedArea, selectedTerritory);
            }

            // zone, area, tr
            function FillHQ(zo, ar, tr) {
                var selectedObj = {};
                for (i = 0; i < OfficeHierarchy.length; i++) {
                    var o = OfficeHierarchy[i];
                    if (o.ZoneCode == zo && o.AreaCode == ar && o.TerritoryCode == tr ) {
                        selectedObj[o.HQName] = o.HQCode;
                    }
                }
                Object.keys(selectedObj).sort().forEach(function (element) {
                    var opt = new Option(element + ' (' + selectedObj[element] + ')', selectedObj[element]);
                    $('#selHQ').append(opt);
                });
            }

    </script>
}
