@model IEnumerable<EpicCrmWebApi.SqliteEntityDisplayData>

@{
    ViewBag.Title = "Saved Entity Batch Items";
    string pageTitle = String.Format("Saved Entity Batch Items [Batch Id:{0}; Employee Name: {1}]", ViewBag.BatchId, ViewBag.EmpName);
}

<h2>@pageTitle</h2>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.IsProcessed)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.NumberOfContacts)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.NumberOfCrops)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.NumberOfImages)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.NumberOfLocations)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.AtBusiness)
        </th>
        <!--<th>
            @Html.DisplayNameFor(model => model.Consent)--> <!-- Swetha made the changes on 26-11-->
        <!--</th>-->
        <th>
            @Html.DisplayNameFor(model => model.EntityType)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.EntityName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Address)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.City)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.State)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Pincode)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LandSize)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.UniqueIdType)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.UniqueId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TaxId)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.FatherHusbandName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TerritoryCode)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TerritoryName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.HQCode)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.HQName)
        </th>
        @*<th>
            @Html.DisplayNameFor(model => model.MajorCrop)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LastCrop)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.WaterSource)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SoilType)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SowingType)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SowingDate)
        </th>*@

        <th>
            @Html.DisplayNameFor(model => model.TimeStamp)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Latitude)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Longitude)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.MNC)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.MCC)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LAC)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CellId)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.DerivedLocSource)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DerivedLatitude)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DerivedLongitude)
        </th>


        <th>
            @Html.DisplayNameFor(model => model.PhoneDbId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.EntityId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DateCreated)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DateUpdated)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.BatchId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.EmployeeId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LocationTaskStatus)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LocationException)
        </th>
    </tr>

    @foreach (var item in Model)
    {
        string guidForAdditionalRow = Guid.NewGuid().ToString();
        string guidForAdditionalCellHead = Guid.NewGuid().ToString();
        string guidForAdditionalCell = Guid.NewGuid().ToString();
        string guidForImage = Guid.NewGuid().ToString();
        string imageDisplayWaitArea = Guid.NewGuid().ToString();
        string imageDisplayArea = Guid.NewGuid().ToString();

        string guidForLocationRow = Guid.NewGuid().ToString();
        string guidForLocationCellHead = Guid.NewGuid().ToString();
        string guidForLocationCell = Guid.NewGuid().ToString();

<tr>
    <td>
        @Html.DisplayFor(modelItem => item.IsProcessed)
    </td>
    <td>
        @*@Html.DisplayFor(modelItem => item.NumberOfContacts)*@
        @if (item.NumberOfContacts > 0)
        {
            <a href="" title="Show Contacts" onclick="additionalAnchorClicked('@guidForAdditionalRow', '@guidForAdditionalCell', '@guidForAdditionalCellHead', '@item.Id', 'Contacts'); return false;">@item.NumberOfContacts</a>
        }
        else
        {
            @Html.DisplayFor(modelItem => item.NumberOfContacts)
        }
    </td>
    <td>
        @*@Html.DisplayFor(modelItem => item.NumberOfCrops)*@
        @if (item.NumberOfCrops > 0)
        {
            <a href="" title="Show Crops" onclick="additionalAnchorClicked('@guidForAdditionalRow', '@guidForAdditionalCell', '@guidForAdditionalCellHead', '@item.Id', 'Crops'); return false;">@item.NumberOfCrops</a>
        }
        else
        {
            @Html.DisplayFor(modelItem => item.NumberOfCrops)
        }
    </td>
    <td>
        @if (item.NumberOfImages > 0)
        {
            <a href="" onclick="displayImage(@item.Id, @item.NumberOfImages, '@guidForImage', '@imageDisplayWaitArea', '@imageDisplayArea');return false;">@item.NumberOfImages</a>
        }
        else
        {
            @Html.DisplayFor(modelItem => item.NumberOfImages)
        }
    </td>

    <td>
        @if (item.NumberOfLocations > 0)
        {
            <a href="" title="Show Locations" onclick="additionalAnchorClicked('@guidForLocationRow', '@guidForLocationCell', '@guidForLocationCellHead', '@item.Id', 'Locations'); return false;">@item.NumberOfLocations</a>
        }
        else
        {
            @Html.DisplayFor(modelItem => item.NumberOfLocations)
        }
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.AtBusiness)
    </td>
    <!--<td>
        @Html.DisplayFor(modelItem => item.Consent)-->   <!-- Swetha amde changes on 26-11-->
    <!--</td>-->
    <td>
        @Html.DisplayFor(modelItem => item.EntityType)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.EntityName)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Address)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.City)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.State)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Pincode)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.LandSize)
    </td>

    <td>
        @Html.DisplayFor(modelItem => item.UniqueIdType)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.UniqueId)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.TaxId)
    </td>

    <td>
        @Html.DisplayFor(modelItem => item.FatherHusbandName)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.TerritoryCode)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.TerritoryName)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.HQCode)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.HQName)
    </td>
    @*<td>
            @Html.DisplayFor(modelItem => item.MajorCrop)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LastCrop)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.WaterSource)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SoilType)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SowingType)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SowingDate)
        </td>*@

    <td>
        @Html.DisplayFor(modelItem => item.TimeStamp)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Latitude)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Longitude)
    </td>


    <td>
        @Html.DisplayFor(modelItem => item.MNC)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.MCC)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.LAC)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.CellId)
    </td>

    <td>
        @Html.DisplayFor(modelItem => item.DerivedLocSource)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.DerivedLatitude, "DecimalCoordinates")
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.DerivedLongitude, "DecimalCoordinates")
    </td>

    <td>
        @Html.DisplayFor(modelItem => item.PhoneDbId)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.EntityId)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.DateCreated)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.DateUpdated)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.BatchId)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.EmployeeId)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.LocationTaskStatus)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.LocationException)
    </td>
</tr>
        <tr class="customerRow" id="@guidForAdditionalRow" style="display:none;">
            <td style="border-top:none;font-weight:bold;" id="@guidForAdditionalCellHead"></td>
            <td style="border-top:none;" id="@guidForAdditionalCell" colspan="30">&nsbp;</td>
        </tr>
        <tr id="@guidForLocationRow" style="display:none;">
            <td style="border-top:none;font-weight:bold;" id="@guidForLocationCellHead"></td>
            <td style="border-top:none;" id="@guidForLocationCell" colspan="15">&nsbp;</td>
        </tr>

        <tr id="@imageDisplayWaitArea" style="display:none;">
            <td colspan="31">
                <span id="">Getting Image...Please wait</span>
            </td>
        </tr>
        <tr id="@imageDisplayArea" style="display:none;">
            <td id="@guidForImage" colspan="31"></td>
        </tr>
    }

</table>
<script>
    var isProcessing = {};
    var openAssociationBlocks = {};
    function additionalAnchorClicked(rowGuid, targetGuid, targetGuidHead, entityId, displayStringHead) {
        if (openAssociationBlocks[rowGuid] === undefined || openAssociationBlocks[rowGuid] === '' || openAssociationBlocks[rowGuid] !== displayStringHead) // never opened or closed after open
        {
            openAssociationBlocks[rowGuid] = displayStringHead;  // first time click
            $('#' + rowGuid).show();
            $('#' + targetGuidHead).html('<p>' + displayStringHead + '</p>');
            $('#' + targetGuid).html('<p>Please wait</p>');
            var uri = '/SuperAdmin/ShowSavedEntity' + displayStringHead;
            $.ajax(uri, {
                cache: false,
                type: "Get",
                contentType: "application/json",
                data: { 'entityId': entityId },
                success: function (data, textStatus, jqXHR) {
                    $('#' + targetGuid).html(data);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert("An error occured while getting data.")
                }
            });
        }
        else // already open - close it now;
        {
            $('#' + rowGuid).hide();
            openAssociationBlocks[rowGuid] = '';
        }
    }
    function displayImage(id, imageCount, displayImage, imageDisplayWaitArea, imageDisplayArea) {
        if (openAssociationBlocks[displayImage] === undefined || openAssociationBlocks[displayImage] === '') // never opened or closed after open
        {
            if (isProcessing[displayImage] === 'image' || isProcessing[displayImage] === undefined) {

                isProcessing[displayImage] = '';

                var imagesRetrieved = 0;
                $('#' + imageDisplayArea).show();
                $('#' + imageDisplayWaitArea).show();
                $('#' + displayImage).html('<span></span>');

                for (i = imageCount; i > 0; i--) {
                    var xhr = new XMLHttpRequest();
                    xhr.onreadystatechange = function () {
                        if (this.readyState == 4 && this.status == 200) {
                            var reader = new window.FileReader();
                            reader.readAsDataURL(this.response);
                            reader.onloadend = function () {
                                imagesRetrieved++;
                                $('#' + displayImage).append('<img style="margin-left:20px;" height="300px" width="auto" src="' + reader.result + '"/>');
                                if (imagesRetrieved == imageCount) // last image processed
                                {
                                    $('#' + imageDisplayArea).show();
                                    isProcessing[displayImage] = 'image';
                                    $('#' + imageDisplayWaitArea).hide();
                                }
                            }
                        }
                    }
                    xhr.open('GET', '/SuperAdmin/SqliteEntityImageData?Id=' + id + '&imageItem=' + i);
                    xhr.responseType = 'blob';
                    xhr.send();
                }
                openAssociationBlocks[displayImage] = 'displaying';
            } else {
                return;
            }
        } else {
            $('#' + imageDisplayArea).hide();
            $('#' + imageDisplayWaitArea).hide();
            openAssociationBlocks[displayImage] = '';
        }
    }
</script>
