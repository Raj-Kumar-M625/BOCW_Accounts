@model IEnumerable<EpicCrmWebApi.VendorSTRModel>
@{
    int itemCount = Model.Count();

    string guidForSTRRow = Guid.NewGuid().ToString();
}

<div>
    <h3>
        <a href="" title="Refresh Search Result" onclick="btnSearchClicked();return false;">
            <img height="25" width="25" src="~/Content/img/refresh.png" />
        </a>&nbsp;STR Details (@itemCount)
    </h3>
</div>

@if (itemCount > 0)
{
<table class="table table-bordered table-striped table-condensed" id="dataTable">
    <tr>
        <th style="column-width:45px;" id="downloadLinkArea" class="removeFromDownload">&nbsp;</th>
        <th class="removeFromDownload checkboxCell" >All<input class='check-box allRecMark' type='checkbox' /></th>

        <th>@Html.DisplayNameFor(model => model.STRDate)</th>
        <th>@Html.DisplayNameFor(model => model.STRNumber)</th>
        <th>@Html.DisplayNameFor(model => model.VehicleNumber)</th>
        <th>@Html.DisplayNameFor(model => model.VendorName)</th>
        <th>@Html.DisplayNameFor(model => model.ShedOdo)</th>
        <th>@Html.DisplayNameFor(model => model.StartOdo)</th>
        <th>@Html.DisplayNameFor(model => model.EndOdo)</th>
        <th>@Html.DisplayNameFor(model => model.SiloToShedKms)</th>
        <th>@Html.DisplayNameFor(model => model.TotalRunningKms)</th>
        <th>@Html.DisplayNameFor(model => model.CostPerKm)</th>
        <th>@Html.DisplayNameFor(model => model.TransportationCharges)</th>
        <th>@Html.DisplayNameFor(model => model.VehicleCapacity)</th>
        @*<th>@Html.DisplayNameFor(model => model.GrossWeight)</th>*@
        <th>@Html.DisplayNameFor(model => model.NetWeight)</th>
        <th>@Html.DisplayNameFor(model => model.LoadedWeight)</th>
        <th>@Html.DisplayNameFor(model => model.ExtraTonnage)</th>
        <th>@Html.DisplayNameFor(model => model.CostPerExtraTon)</th>
        <th>@Html.DisplayNameFor(model => model.ExtraTonCharges)</th>
        <th>@Html.DisplayNameFor(model => model.TollCharges)</th>
        <th>@Html.DisplayNameFor(model => model.WeighmentCharges)</th>
        <th>@Html.DisplayNameFor(model => model.NumberOfBags)</th>
        <th>@Html.DisplayNameFor(model => model.HamaliRatePerBag)</th>
        <th>@Html.DisplayNameFor(model => model.HamaliCharges)</th>
        <th>@Html.DisplayNameFor(model => model.Others)</th>
        <th>@Html.DisplayNameFor(model => model.NetPayableAmount)</th>
        <th>@Html.DisplayNameFor(model => model.PaymentStatus)</th>
        <th>@Html.DisplayNameFor(model => model.PaymentReference)</th>
        <th>@Html.DisplayNameFor(model => model.Comments)</th>
        <th>@Html.DisplayNameFor(model => model.AccountNumber)</th>
        <th>@Html.DisplayNameFor(model => model.AccountName)</th>
        <th>@Html.DisplayNameFor(model => model.BankName)</th>
        <th>@Html.DisplayNameFor(model => model.BankBranch)</th>
        <th>@Html.DisplayNameFor(model => model.IFSC)</th>
    </tr>
    @foreach (var item in Model)
    {
        string guidForRow = Guid.NewGuid().ToString();

        <tr id="@guidForRow">
            <td class="removeFromDownload">
            </td>

            <td class="removeFromDownload checkboxCell">
                <input class='check-box oneRecMark' type='checkbox' data-id="@item.STRTagId" />
            </td>

            <td>@Html.DisplayFor(modelItem => item.STRDate, "DatetimeDate")</td>
            <td>@Html.DisplayFor(modelItem => item.STRNumber)</td>
            <td>@Html.DisplayFor(modelItem => item.VehicleNumber)</td>
            <td>@Html.DisplayFor(modelItem => item.VendorName)</td>
            <td>@Html.DisplayFor(modelItem => item.ShedOdo)</td>
            <td>@Html.DisplayFor(modelItem => item.StartOdo)</td>
            <td>@Html.DisplayFor(modelItem => item.EndOdo)</td>
            <td>@Html.DisplayFor(modelItem => item.SiloToShedKms)</td>
            <td>@Html.DisplayFor(modelItem => item.TotalRunningKms)</td>
            <td>@Html.DisplayFor(modelItem => item.CostPerKm)</td>
            <td>@Html.DisplayFor(modelItem => item.TransportationCharges)</td>
            <td>@Html.DisplayFor(modelItem => item.VehicleCapacity)</td>
            @*<td>@Html.DisplayFor(modelItem => item.GrossWeight)</td>*@
            <td>@Html.DisplayFor(modelItem => item.NetWeight)</td>
            <td>@Html.DisplayFor(modelItem => item.LoadedWeight)</td>
            <td>@Html.DisplayFor(modelItem => item.ExtraTonnage)</td>
            <td>@Html.DisplayFor(modelItem => item.CostPerExtraTon)</td>
            <td>@Html.DisplayFor(modelItem => item.ExtraTonCharges)</td>
            <td>@Html.DisplayFor(modelItem => item.TollCharges)</td>
            <td>@Html.DisplayFor(modelItem => item.WeighmentCharges)</td>
            <td>@Html.DisplayFor(modelItem => item.NumberOfBags)</td>
            <td>@Html.DisplayFor(modelItem => item.HamaliRatePerBag)</td>
            <td>@Html.DisplayFor(modelItem => item.HamaliCharges)</td>
            <td>@Html.DisplayFor(modelItem => item.Others)</td>
            <td>@Html.DisplayFor(modelItem => item.NetPayableAmount)</td>
            <td>@Html.DisplayFor(modelItem => item.PaymentStatus)</td>
            <td>@Html.DisplayFor(modelItem => item.PaymentReference)</td>
            <td>@Html.DisplayFor(modelItem => item.Comments)</td>
            <td>@Html.DisplayFor(modelItem => item.AccountNumber)</td>
            <td>@Html.DisplayFor(modelItem => item.AccountName)</td>
            <td>@Html.DisplayFor(modelItem => item.BankName)</td>
            <td>@Html.DisplayFor(modelItem => item.BankBranch)</td>
            <td>@Html.DisplayFor(modelItem => item.IFSC)</td>

        </tr>
    }

        <tr class="buttonActions" id="idApproveBtnRow">
            <td colspan='34'>
                <input style='width:200px;' type='button' id='btnShowMarked' value='Show Selected' title='Show checked rows' class='form-control btn-warning' />
                <input style='width:200px;' type='button' id='btnShowUnMarked' value='Show Un-selected' title='Show un-selected rows' class='form-control btn-warning' />
                <input style='width:200px;' type='button' id='btnShowAll' value='Show All' title='Show all rows' class='form-control btn-warning' />
                <input style='width:200px;' type='button' id='btnPay' value='Proceed to Payment &gt;&gt;' class='form-control btn-success' />
                <span class="removeFromDownload" style="font-size:13px;color:#333;font-family:Arial,sans-serif;">* You can review the payments on next screen, before it's final.</span>
            </td>
        </tr>

</table>


}

<script>
    var status = $("#selSTRPaymentStatus").val();
    if (status == "Paid") {
        $("#idApproveBtnRow").hide();
    }
    // if there are no rows with check box, then hide action button row
    if ($("input.oneRecMark").length == 0)
    {
        $(".buttonActions").hide();
        //$("input.allRecMark").hide();
        $(".checkboxCell").each(function (index, element) {
            $(element).remove();
        });
    }
    else
    {
        $("input.allRecMark").click(function () {
            $("input.oneRecMark").prop('checked', $(this).prop('checked'));
        });
    }

    $('input#btnPay').click(payButtonClicked);
    $('input#btnShowMarked').click(showMarkedRowsClicked);
    $('input#btnShowUnMarked').click(showUnMarkedRowsClicked);
    $('input#btnShowAll').click(showAllRowsClicked);

    $('input#btnPay').css('display', 'inline');
    $('input#btnShowMarked').css('display', 'inline');
    $('input#btnShowUnMarked').css('display', 'inline');
    $('input#btnShowAll').css('display', 'inline');

    function payButtonClicked() {
        $('input#btnPay').hide();
        var selectedSTR = [];

        $("input.oneRecMark").each(function (index, element) {
            if ($(element).is(':checked')) {
                //var v = $(element).parent().parent().find('td:nth-child(' + colNumForDWSNumber + ')').text().trim();

                @*each check box has id stored as data-id attribute*@
                var v = $(element).attr('data-id');
                //alert(v);

                // store in array only if it does not exist
                if (/^[0-9]+$/.test(v) && selectedSTR.indexOf(v) === -1) {
                    selectedSTR.push(v);
                }
            }
        });

        if (selectedSTR.length == 0) {
            alert('Please mark STR for payment and try again.');
            $('input#btnPay').show();
            return;
        }

        var transmitData = { strTagIds: selectedSTR};

        showGlass();
        showWaitMessage();

        $.ajax('/Admin/MakeSTRPayment', {
            traditional: true,
            cache: false,
            type: "Get",
            contentType: "application/json",
            data: transmitData,
            success: function (data, textStatus, jqXHR) {
                    // clear message and uncheck all check boxes;
                    $("input.allRecMark").prop('checked', false);
                    $("input.oneRecMark").prop('checked', false);

                    SetCallbackFunction(btnSearchClicked);
                    ShowFormOnGlass(data);

                    $('input#btnPay').show();
            },
            error: function (jqXHR, textStatus, errorThrown) {
                alert("An error occured. Please refresh the page and try again.")
                hideGlass();
                $('input#btnPay').show();
            }
        });

        $('input#btnPay').show();
    }

    function showMarkedRowsClicked() {
        $("input.oneRecMark").each(function (index, element) {
            var trow = $(element).parent().parent();
            ($(element).is(':checked')) ? trow.show() : trow.hide();
        });
    }

    function showUnMarkedRowsClicked() {
        $("input.oneRecMark").each(function (index, element) {
            var trow = $(element).parent().parent();
            ($(element).is(':checked')) ? trow.hide() : trow.show();
        });
    }

    function showAllRowsClicked() {
        $("input.oneRecMark").each(function (index, element) {
            var trow = $(element).parent().parent();
            trow.show();
        });
    }

</script>