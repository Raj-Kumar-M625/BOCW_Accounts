@model IEnumerable<EpicCrmWebApi.StockInputTagModel>
@{
    IEnumerable<DomainEntities.OfficeHierarchy> officeHierarchy = (IEnumerable<DomainEntities.OfficeHierarchy>)ViewBag.OfficeHierarchy;
    int itemCount = Model.Count();

    ICollection<StockInputModel> modelItems = (ICollection<StockInputModel>)ViewBag.ModelItems;
}

<table class="table table-bordered table-striped table-condensed" id="dataTable">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.GRNNumber)</th>
            <th>@Html.DisplayNameFor(model => model.ReceiveDate)</th>
            <th>@Html.DisplayNameFor(model => model.VendorName)</th>
            <th>@Html.DisplayNameFor(model => model.VendorBillNo)</th>
            <th>@Html.DisplayNameFor(model => model.VendorBillDate)</th>
            <th>@Html.DisplayNameFor(model => model.TotalItemCount)</th>
            <th>@Html.DisplayNameFor(model => model.TotalAmount)</th>

            <th>Line #</th>
            <th>Item Type</th>
            <th>Item</th>
            <th>UOM</th>
            <th>Quantity</th>
            <th>Rate</th>
            <th>Amount</th>

            <th>@Html.DisplayNameFor(model => model.Status)</th>
            <th>@Html.DisplayNameFor(model => model.Notes)</th>

            <th>@Html.DisplayNameFor(model => model.ZoneCode)</th>
            <th>@Html.DisplayNameFor(model => model.AreaCode)</th>
            <th>@Html.DisplayNameFor(model => model.TerritoryCode)</th>
            <th>@Html.DisplayNameFor(model => model.HQCode)</th>

            <th>@Html.DisplayNameFor(model => model.CreatedBy)</th>
            <th>@Html.DisplayNameFor(model => model.DateCreated)</th>

            <th>@Html.DisplayNameFor(model => model.ReviewedBy)</th>
            <th>@Html.DisplayNameFor(model => model.ReviewDate)</th>
            <th>@Html.DisplayNameFor(model => model.ReviewNotes)</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {

            string ZoneName = officeHierarchy.Where(x => x.ZoneCode.Equals(item.ZoneCode, StringComparison.OrdinalIgnoreCase))
                                    .FirstOrDefault()?.ZoneName ?? item.ZoneCode;

            string AreaName = officeHierarchy.Where(x => x.AreaCode.Equals(item.AreaCode, StringComparison.OrdinalIgnoreCase))
                                    .FirstOrDefault()?.AreaName ?? item.AreaCode;

            string TerritoryName = officeHierarchy.Where(x => x.TerritoryCode.Equals(item.TerritoryCode, StringComparison.OrdinalIgnoreCase))
                                    .FirstOrDefault()?.TerritoryName ?? item.TerritoryCode;

            string HQName = officeHierarchy.Where(x => x.HQCode.Equals(item.HQCode, StringComparison.OrdinalIgnoreCase))
                                    .FirstOrDefault()?.HQName ?? item.HQCode;

            var detailList = modelItems?.Where(x => x.StockInputTagId == item.Id)
                .OrderBy(x=> x.LineNumber)
                .ToList();

            if (detailList == null)
            {
                detailList = new List<StockInputModel>();
            }

            int detailCount = detailList.Count;

            int j = 0;

            do
            {
                j++;
                StockInputModel ea = detailCount > 0 ? detailList[j - 1] : new StockInputModel();

                <tr>
                    <td>@Html.DisplayFor(modelItem => item.GRNNumber)</td>
                    <td>@Html.DisplayFor(modelItem => item.ReceiveDate, "DatetimeDate")</td>
                    <td>
                        @Html.DisplayFor(modelItem => item.VendorName)
                    </td>
                    <td>@Html.DisplayFor(modelItem => item.VendorBillNo)</td>
                    <td>@Html.DisplayFor(modelItem => item.VendorBillDate, "DatetimeDate")</td>
                    <td>@Html.DisplayFor(modelItem => item.TotalItemCount)</td>
                    <td>@Html.DisplayFor(modelItem => item.TotalAmount)</td>

                    <td>@Html.DisplayFor(modelItem => ea.LineNumber)</td>
                    <td>@Html.DisplayFor(modelItem => ea.Category)</td>
                    <td>@Html.DisplayFor(modelItem => ea.ItemCode)</td>
                    <td>@Html.DisplayFor(modelItem => ea.Unit)</td>
                    <td>@Html.DisplayFor(modelItem => ea.Quantity)</td>
                    <td>@Html.DisplayFor(modelItem => ea.Rate)</td>
                    <td>@Html.DisplayFor(modelItem => ea.Amount)</td>

                    <td>@Html.DisplayFor(modelItem => item.Status)</td>
                    <td>@Html.DisplayFor(modelItem => item.Notes)</td>

                    <td>@Html.DisplayFor(modelItem => ZoneName)</td>
                    <td>@Html.DisplayFor(modelItem => AreaName)</td>
                    <td>@Html.DisplayFor(modelItem => TerritoryName)</td>
                    <td>@Html.DisplayFor(modelItem => HQName)</td>

                    <td>@Html.DisplayFor(modelItem => item.CreatedBy)</td>
                    <td>@Html.DisplayFor(modelItem => item.DateCreated, "Datetime")</td>

                    <td>@Html.DisplayFor(modelItem => item.ReviewedBy)</td>
                    <td>@Html.DisplayFor(modelItem => item.ReviewDate, "MinimumDateTimeDate")</td>
                    <td>@Html.DisplayFor(modelItem => item.ReviewNotes)</td>
                </tr>
            } while (j < detailCount);
        }
    </tbody>
</table>




