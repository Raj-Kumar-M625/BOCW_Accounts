@{
    IEnumerable<DomainEntities.OfficeHierarchy> officeHierarchy = (IEnumerable<DomainEntities.OfficeHierarchy>)ViewBag.OfficeHierarchy;
    System.Text.StringBuilder sb = new System.Text.StringBuilder();
    //ViewBag.Title = "Approve DWS";

    IEnumerable<string> AvailableDWSStatus = ViewBag.AvailableDWSStatus;
    string SearchResultAction = ViewBag.SearchResultAction;
}
@{
    Html.RenderPartial("_CodeSnippetPageHeader", (string)ViewBag.Title);
}

<div class="well" id="idSearchWell">
    <div class="row">
        <div class="col-sm-2">
            <div class="form-group">
                <label>Zone</label>
                <select class="form-control" id="selZone">
                    <option value="All">All</option>
                </select>
            </div>
        </div>
        <div class="col-sm-2">
            <div class="form-group">
                <label>Area</label>
                <select class="form-control" id="selArea">
                    <option value="All">All</option>
                </select>
            </div>
        </div>
        <div class="col-sm-2">
            <div class="form-group">
                <label>Territory</label>
                <select class="form-control" id="selTerritory">
                    <option value="All">All</option>
                </select>
            </div>
        </div>
        <div class="col-sm-2">
            <div class="form-group">
                <label>HQ</label>
                <select class="form-control" id="selHQ">
                    <option value="All">All</option>
                </select>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-sm-2">
            <div class="form-group">
                <label>Client Name</label>
                <input type="text" class="form-control" id="clientName" />
            </div>
        </div>

        <div class="col-sm-2">
            <div class="form-group">
                <label>Agreement #</label>
                <input type="text" class="form-control" id="agreementNumber" />
            </div>
        </div>

        <div class="col-sm-2">
            <div class="form-group">
                <label>STR #</label>
                <input type="text" class="form-control" id="strNumber" />
            </div>
        </div>

        <div class="col-sm-2">
            <div class="form-group">
                <label>DWS #</label>
                <input type="text" class="form-control" id="dwsNumber" />
            </div>
        </div>

    </div>
    <div class="row">

        <div class="col-sm-2">
            <div class="form-group">
                <label>From (dd-mm-yyyy)</label>
                <div class="input-append date">
                    <input data-format="dd-MM-yyyy" type="text" class="form-control justDate" id="txtFromDate" autocomplete="off" />
                    <span class="add-on">
                        <i data-time-icon="icon-time" data-date-icon="icon-calendar">
                        </i>
                    </span>
                </div>
            </div>
        </div>
        <div class="col-sm-2">
            <div class="form-group">
                <label>To (dd-mm-yyyy)</label>
                <div class="input-append date">
                    <input data-format="dd-MM-yyyy" type="text" class="form-control justDate" id="txtToDate" autocomplete="off" />
                    <span class="add-on">
                        <i data-time-icon="icon-time" data-date-icon="icon-calendar">
                        </i>
                    </span>
                </div>
            </div>
        </div>

        <div class="col-sm-2">
            <div class="form-group">
                <label>DWS Status</label>
                <select class="form-control" id="selDWSStatus">
                    @foreach (var o in AvailableDWSStatus)
                    {
                        <option value="@o">@o</option>
                    }
                </select>
            </div>
        </div>

        <div class="col-sm-2">
            <div class="form-group">
                <label>&nbsp;</label>
                <input type="button" id="btnSearch" value="Search" class="form-control btn-success" />
            </div>
        </div>
    </div>
</div>
<div id="dataArea">
</div>


<script type="text/javascript">
    // Office Hierarchy object
        @Html.Raw("var OfficeHierarchy =[];")

        @foreach(var oh in officeHierarchy)
        {
            sb.AppendLine("var joh = { };");

            sb.AppendLine($"joh.ZoneCode = '{oh.ZoneCode}';");
            sb.AppendLine($"joh.ZoneName = '{oh.ZoneName}';");
            sb.AppendLine($"joh.AreaCode = '{oh.AreaCode}'; ");
            sb.AppendLine($"joh.AreaName = '{oh.AreaName}';");
            sb.AppendLine($"joh.TerritoryCode = '{oh.TerritoryCode}'; ");
            sb.AppendLine($"joh.TerritoryName = '{oh.TerritoryName}'; ");
            sb.AppendLine($"joh.HQCode = '{oh.HQCode}'; ");
            sb.AppendLine($"joh.HQName = '{oh.HQName}';");
            sb.AppendLine("OfficeHierarchy.push(joh);");
        }
    @Html.Raw(sb.ToString());

</script>


@section scripts{
<script src="/Scripts/jquery.datetimepicker.js"></script>
    <script>

        $(document).ready(
            function () {
                ShowSearch();
                $("#btnSearch").off('click').on('click', btnSearchClicked);
                $("#showSearch").off('click').on('click', ShowSearch);

                // once user changes selection boxes, clear results area;
                $('Select').change(function () { ClearResults(); });
                $('input').change(function () { ClearResults(); });

                $('.justDate').datetimepicker({ inline: false, format: 'd-m-Y', timepicker: false, yearStart: 2017, yearEnd: 2099 });

                $('.justDate').attr({ 'placeholder': 'dd-mm-yyyy' });

                // zone/Area/Territory/HQ changed
                $('#selZone').change(function () { ZonesSelectionChanged(); })
                $('#selArea').change(function () { AreasSelectionChanged(); })
                $('#selTerritory').change(function () { TerritoriesSelectionChanged(); })
                   
                var selectedObj = {};
                for (i = 0; i < OfficeHierarchy.length; i++) {
                    var o = OfficeHierarchy[i];
                    selectedObj[o.ZoneName] = o.ZoneCode;
                }
                Object.keys(selectedObj).sort().forEach(function (element) {
                    var opt = new Option(element, selectedObj[element]);
                    $('#selZone').append(opt);
                });
            });

        function CaptureSearchCriteria() {
            var searchCriteria = {};
            searchCriteria.Zone = $("#selZone").val();
            searchCriteria.Area = $("#selArea").val();
            searchCriteria.Territory = $("#selTerritory").val();
            searchCriteria.HQ = $("#selHQ").val();

            searchCriteria.ClientName = $("#clientName").val();
            searchCriteria.AgreementNumber = $("#agreementNumber").val();
            searchCriteria.STRNumber = $("#strNumber").val();
            searchCriteria.DWSNumber = $("#dwsNumber").val();

            searchCriteria.DateFrom = $("#txtFromDate").val();
            searchCriteria.DateTo = $("#txtToDate").val();
            searchCriteria.DWSStatus = $("#selDWSStatus").val();
            searchCriteria.Page = "DWSApprove";

            return searchCriteria;
        }

        // Search button
        var btnSearchClicked = function (event) {
            DisableSearchButton();

            var searchCriteria = CaptureSearchCriteria();
            //alert(JSON.stringify(searchCriteria));
            var agNum = searchCriteria.AgreementNumber;


            if (searchCriteria.ClientName == '' &&
                (agNum == '' || agNum == undefined) &&
                searchCriteria.STRNumber == '' &&
                (Number(searchCriteria.DWSNumber) == 0) &&

                searchCriteria.DWSStatus == '' &&
                searchCriteria.Zone == 'All' &&
                searchCriteria.Area == 'All' &&
                searchCriteria.Territory == 'All' &&
                searchCriteria.HQ == 'All' &&
                searchCriteria.DateFrom == '' &&
                searchCriteria.DateTo == ''
                )
            {
                $('#dataArea').html('<p>Please Enter Your Search Criteria...</p>');
                EnableSearchButton();
            }
            else
            {
                //alert(JSON.stringify(searchCriteria));
                //EnableSearchButton();

                $('#dataArea').html(waitImage);
                $.ajax('@SearchResultAction', {
                    cache: false,
                    type: "Get",
                    contentType: "application/json",
                    data: searchCriteria,
                    success: function (data, textStatus, jqXHR) {

                        $('#dataArea').html(data);

                        if (document.getElementById("downloadLinkArea") != null) {
                            // create link to download the data as excel
                            // do some text replacements - remove links etc.
                            var dataToSave = data.replace(/<a.*\">/g, "").replace(/<\/a>/g, "");
                            // Checked check box to be turned into 'Yes'
                            dataToSave = dataToSave.replace(/<input checked=\"checked\" class=\"check-box\" disabled=\"disabled\" type=\"checkbox\" \/>/g, "Yes");

                            // replace image tag
                            dataToSave = dataToSave.replace(/<img .*png\" \/>/g, "");

                            // now create html and remove header row from downloadable data
                            var $dataAsHtml = $(dataToSave);

                            $dataAsHtml.find("#dataTableHeader").remove();
                            $dataAsHtml.find("h3").remove();
                            $dataAsHtml.find("img").remove();
                            $dataAsHtml.find("#imageDisplayWaitArea").remove();
                            $dataAsHtml.find(".removeFromDownload").remove();

                            // remove all rows that are there to show order details inline
                            // it will be there only for orders;
                            //$dataAsHtml.find(".orderDetailRow").remove();
                            dataToSave = $('<div>').append($dataAsHtml).html();

                            var blob = new Blob([dataToSave], { type: "application/x-msexcel" });
                            var url = URL.createObjectURL(blob);

                            var m = document.createElement('img');
                            m.height = "25";
                            m.width = "25";
                            m.src = "/Content/img/download_3.png";

                            var a = document.createElement('a');
                            a.download = "DownloadReport.xls";
                            a.href = url;
                            a.title = "Download as Excel";
                            a.appendChild(m);

                            document.getElementById("downloadLinkArea").appendChild(a);
                        }

                        $(".editInPopup").off('click').on('click', { callback: btnSearchClicked }, editPopupLinkClicked);
                        $(".addInPopup").off('click').on('click', { callback: btnSearchClicked }, addPopupLinkClicked);
                        EnableSearchButton();

                        if ($("#dataTable").length) {
                            HideSearch();
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        alert("An error occured while getting data matching your search criteria.")
                        EnableSearchButton();
                    }
                });
            }
        }

        function DisableSearchButton() {
            $("#btnSearch").hide();
        }

        function EnableSearchButton() {
            $("#btnSearch").show();
        }

        function HideSearch() {
            $("#idSearchWell").hide();
            $("#showSearch").show();
        }

        function ShowSearch() {
            $("#idSearchWell").show("slow");
            $("#showSearch").hide();
        }

        function ClearResults() {
            $('#dataArea').html('');
        }


        function ZonesSelectionChanged() {
            $('#selArea option:not(:first-child)').remove();
            $('#selTerritory option:not(:first-child)').remove();
            $('#selHQ option:not(:first-child)').remove();

            // get current value of Zone
            var selectedZone = $("#selZone").val();
            FillAreasForZone(selectedZone);
        }

        function FillAreasForZone(z) {
            var selectedObj = {};
            for (i = 0; i < OfficeHierarchy.length; i++) {
                var o = OfficeHierarchy[i];
                if (o.ZoneCode == z) {
                    // use Area Name as key so we can sort by name
                    selectedObj[o.AreaName] = o.AreaCode;
                }
            }
            Object.keys(selectedObj).sort().forEach(function (element) {
                var opt = new Option(element, selectedObj[element]);
                $('#selArea').append(opt);
            });
        }

        function AreasSelectionChanged() {
            $('#selTerritory option:not(:first-child)').remove();
            $('#selHQ option:not(:first-child)').remove();
            var selectedZone = $("#selZone").val();
            var selectedArea = $("#selArea").val();
            FillTerritories(selectedZone, selectedArea);
        }

        // zone and area
        function FillTerritories(zo, ar) {
            var selectedObj = {};
            for (i = 0; i < OfficeHierarchy.length; i++) {
                var o = OfficeHierarchy[i];
                if (o.ZoneCode == zo && o.AreaCode == ar) {
                    selectedObj[o.TerritoryName] = o.TerritoryCode;
                }
            }
            Object.keys(selectedObj).sort().forEach(function (element) {
                var opt = new Option(element, selectedObj[element]);
                $('#selTerritory').append(opt);
            });
        }

        function TerritoriesSelectionChanged() {
            $('#selHQ option:not(:first-child)').remove();
            var selectedZone = $("#selZone").val();
            var selectedArea = $("#selArea").val();
            var selectedTerritory = $("#selTerritory").val();
            FillHQ(selectedZone, selectedArea, selectedTerritory);
        }

        // zone, area, tr
        function FillHQ(zo, ar, tr) {
            var selectedObj = {};
            for (i = 0; i < OfficeHierarchy.length; i++) {
                var o = OfficeHierarchy[i];
                if (o.ZoneCode == zo && o.AreaCode == ar && o.TerritoryCode == tr) {
                    selectedObj[o.HQName] = o.HQCode;
                }
            }
            Object.keys(selectedObj).sort().forEach(function (element) {
                var opt = new Option(element, selectedObj[element]);
                $('#selHQ').append(opt);
            });
        }

    </script>
}
