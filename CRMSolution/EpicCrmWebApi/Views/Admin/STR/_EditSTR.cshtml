@model STRModel
@{
    IEnumerable<DomainEntities.Transporter> vehicles = ViewBag.Vehicles;

    bool IsEditAllowed = ViewBag.IsEditAllowed;
    string caption = IsEditAllowed ? "Edit Load" : "View Load";
}

@using (Html.BeginForm("EditSTR", "Admin", FormMethod.Post, new { Id = "popupForm" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <span style="font-size:large;">@caption</span>

    <hr />
    @Html.ValidationSummary(false, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.STRTagId)
    @*@Html.HiddenFor(model => model.EmployeeCode)*@
    @Html.HiddenFor(model => model.StrTagCyclicCount)

        <div class="form-group">
            <div>
                @Html.LabelFor(model => model.STRNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.STRNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.STRNumber, "", new { @class = "text-danger" })
                </div>
            </div>
            <div>
                @Html.LabelFor(model => model.VehicleNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    <select class="form-control" id="idVehicleNumber" name="VehicleNumber">
                        <option value="">Select Vehicle</option>
                        @foreach (var o in vehicles)
                        {
                            if (o.VehicleNo.Equals(Model.VehicleNumber, StringComparison.OrdinalIgnoreCase))
                            {
                                <option value="@o.VehicleNo" selected>@o.VehicleNo (@o.CompanyName)</option>
                            }
                            else
                            {
                                <option value="@o.VehicleNo">@o.VehicleNo (@o.CompanyName)</option>
                            }
                        }
                    </select>
                </div>
            </div>
        </div>

    <div class="form-group">
        <div>
            @Html.LabelFor(model => model.EmployeeCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.EmployeeCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmployeeCode, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div>
            @Html.LabelFor(model => model.StartOdometer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.StartOdometer, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StartOdometer, "", new { @class = "text-danger" })
            </div>
        </div>
        <div>
            @Html.LabelFor(model => model.EndOdometer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.EndOdometer, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EndOdometer, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-5 col-md-4">
            @if (IsEditAllowed)
            {
                <input type="submit" value="Save" class="btn btn-success" id="popupSaveButton" />
            }
        </div>
    </div>
</div>
}

@{
    Html.RenderPartial("_CodeSnippetPopupCancelLink");
}

<script type="text/javascript">
    @Html.Raw("var IsEditAllowed = '" + IsEditAllowed.ToString() + "';");

    if (IsEditAllowed == 'False')
    {
        $("#popupForm Input").each(function (i, e) {
            $(e).attr("readonly", "true");
        });

        $("#popupForm textarea").each(function (i, e) {
            $(e).attr("readonly", "true");
        });

        $("#popupForm select").each(function (i, e) {
            $(e).attr("disabled", true);
        });

        $("input.justDate").datetimepicker({ datepicker: false, timepicker: false });
    }
</script>
