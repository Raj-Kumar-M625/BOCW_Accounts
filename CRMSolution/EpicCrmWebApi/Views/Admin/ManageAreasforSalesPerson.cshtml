@{
    ViewBag.Title = "Sales Person";
    IEnumerable<DomainEntities.SalesPerson> salesPersons = (List<DomainEntities.SalesPerson>)ViewBag.SalesPersons;
}
<h2>Sales Person Regional Assignment</h2>
@* https://www.w3schools.com/Bootstrap/bootstrap_scrollspy.asp
    http://www.eyecon.ro/bootstrap-datepicker/
    https://tarruda.github.io/bootstrap-datetimepicker/
*@

<div class="well">
    <div class="row">
        <div class="col-sm-2">
            <div class="form-group">
                <label>Employee Code</label>
                <input type="text" class="form-control" id="txtEmployeeCode" value="" />
            </div>
        </div>
        <div class="col-sm-2">
            <div class="form-group">
                <label>Employee Name</label>
                <input type="text" class="form-control" id="txtEmployeeName" value="" />
            </div>
        </div>
        <div class="col-sm-2">
            <div class="form-group">
                <label>&nbsp;</label>
                <input type="button" id="btnSearchName" value="Filter Employee Name" class="form-control btn-warning" onclick="LoadEmployeeName()" />
            </div>
        </div>
    </div>
</div>

<div class="well">
    <div class="row">
        <div class="col-sm-2">
            <div class="form-group">
                <label>Employee Name</label>
                <select class="form-control" id="selStaffCode">
                    <option value="0">Select</option>
                    @foreach (var o in salesPersons)
                    {
                        <option value="@o.StaffCode">@o.SalesPersonName (@o.StaffCode)</option>
                    }
                </select>
            </div>
        </div>
        <div class="col-sm-2">
            <div class="form-group">
                <label>Region</label>
                <select class="form-control" id="selLevel">
                    <option value="0">Select</option>
                    <option value="Zone">Zone</option>
                    <option value="AreaOffice">Area Office</option>
                    <option value="Territory">Territory</option>
                    <option value="HeadQuarter">Head Quarter</option>
                </select>
            </div>
        </div>

        <div class="col-sm-2">
            <div class="form-group">
                <label>&nbsp;</label>
                <input type="button" id="btnSearch" value="Search" class="form-control btn-success" />
            </div>
        </div>

    </div>

    <!-- div for filter -->
    <div class="row" id="idFilterRow">
        <div class="col-sm-2">
            <input name="tbFilterCriteria" id="idFilterCriteria" type="text" class="form-control" />
        </div>
        <div class="col-sm-2">
            <input type="button" id="btnFilter" value="Filter Available Regions" class="form-control btn-info" />
        </div>
        <div class="col-sm-2"></div>
    </div>
</div>

<div id="dataArea" class="row">
    <p>Please wait...</p>
</div>

<div class="row" id="salesAssociation">
    <div class="col-sm-4">
        <div class="form-group">
            <label id="idAvailableLevelAreaListLabel">Available Regions for Employee</label>
            @Html.ListBox("AvailableLevelAreas", new SelectList(new[] { "" }), new { @class = "list-group", @style = "width:435px;height:300px; margin:15px;overflow:scroll;" })
        </div>
    </div>

    <div class="col-sm-1">
        <div class="row" style="margin-top:90px">
            <div class="col-sm-12">
                <div class="form-group">
                    <label>&nbsp;</label>
                    <input type="button" id="btnAdd" value=">>" class="form-control btn-success" />
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-12">
                <div class="form-group">
                    <label>&nbsp;</label>
                    <input type="button" id="btnRemove" value="<<" class="form-control btn-success" />
                </div>
            </div>
        </div>
    </div>

    <div class="col-sm-4">
        <div class="form-group">
            <label id="idAssignedLevelAreaListLabel">Assigned Regions for Employee</label>
            @Html.ListBox("AssignedLevelAreas", new SelectList(new[] { "" }), new { @class = "list-group", @style = "width:435px;height:300px; margin:15px;overflow:scroll;" })
        </div>
    </div>

    <div class="col-sm-2">
        <div class="form-group">
            <label>&nbsp;</label>
            <input type="button" id="btnSave" value="Save" class="form-control btn-success" />
        </div>
    </div>
    <div class="col-sm-2">
        <div class="form-group">
            <label>&nbsp;</label>
            <input type="button" id="btnCancel" value="Cancel" class="form-control btn-danger" />
        </div>
    </div>
</div>

@section scripts{
    <script type="text/javascript" src="/Scripts/date.js"></script>
    <script>
        var isDirty;
        isDirty = 0;

        var searchResultData = {};
        $(document).ready(
            function () {
                $('#idFilterRow').hide();
                $('#dataArea').hide();
                $('#salesAssociation').hide();
                $("#btnSearch").off('click').on('click', btnSearchClicked);
                $("#btnFilter").off('click').on('click', btnFilterClicked);
                $("#btnSave").off('click').on('click', btnSaveClicked);
                $("#btnAdd").off('click').on('click', btnAddClicked);
                $("#btnRemove").off('click').on('click', btnRemoveClicked);
                $("#btnCancel").off('click').on('click', btnCancelClicked);
            });

        function setDirty() {
            isDirty = 1;
        }

        var btnAddClicked = function (event) {
            var itemVal = $('#AvailableLevelAreas').find("option:selected").text();
            if (itemVal == "") {
                alert('Please select Areas from Available Areas');
            }
            else {
                $('#AssignedLevelAreas').append($('#AvailableLevelAreas').find("option:selected").text(itemVal));
                setDirty();
                UpdateListBoxHeader();
            }
        }

        var btnRemoveClicked = function (event) {
            var itemVal = $('#AssignedLevelAreas').find("option:selected").text();
            if (itemVal == "") {
                alert('Please select Areas from Assigned Areas')
            }
            else {
                $('#AvailableLevelAreas').append($('#AssignedLevelAreas').find("option:selected").text(itemVal));
                setDirty();
                UpdateListBoxHeader();
            }
        }

        var btnSaveClicked = function (event) {
            SaveAssignedLevelAreas();
        }

        var btnCancelClicked = function (event) {
            btnSearchClicked();
            EnableSearchCriteria();
        }

        var btnSearchClicked = function (event) {
            isDirty = 0;
            validateSearchCriteria();
        }

        var btnFilterClicked = function (event) {
            RefreshAvailablePersonList();
        }

        function RefreshAvailablePersonList() {
            // pick up filtering text

            var filteringText = $.trim($('#idFilterCriteria').val());

            var clearingFilter = false;
            if (filteringText == '') {
                clearingFilter = true;
            }

            $('#AvailableLevelAreas').empty();

            var showCurrentRow = false;
            var patt = new RegExp(filteringText, "i");

            // get the list of assigned sales person
            var assignedStaffCodes = {};

            $('#AssignedLevelAreas option').each(
                function () {
                    assignedStaffCodes[$(this).val()] = "1";
                });

            for (var i = 0; i < searchResultData.length; i++) {
                // any item that is in assigned person list - is not to be
                // shown in available person list;

                // apply filter to see if it qualifies, on each data item
                var sc = searchResultData[i].Code;

                if (assignedStaffCodes[sc] != "1" &&
                    (
                        clearingFilter ||
                        patt.test(searchResultData[i].CodeName) ||
                        patt.test(searchResultData[i].Code)
                    )) {
                    var opt = new Option(searchResultData[i].CodeName + ' (' + searchResultData[i].Code + ')', searchResultData[i].Code);
                    $('#AvailableLevelAreas').append(opt);
                }
            }

            UpdateListBoxHeader();
        }

        function UpdateListBoxHeader() {
            var itemCount = 0;
            $('#AvailableLevelAreas option').each(
                function () {
                    itemCount++;
                });

            $("#idAvailableLevelAreaListLabel").text('Available Regions for Employee (' + itemCount + ')');

            itemCount = 0;
            $('#AssignedLevelAreas option').each(
                function () {
                    itemCount++;
                });
            $("#idAssignedLevelAreaListLabel").text('Assigned Regions for Employee (' + itemCount + ')');
        }

        function HideSalesAssociationResultDiv() {
            $('#AvailableLevelAreas').empty();
            $('#AssignedLevelAreas').empty();

            $('#dataArea').show();  // please wait area
            $('#idFilterRow').hide();
            $('#idFilterCriteria').val('');
            $('#salesAssociation').hide();
        }

        function ShowSalesAssociationResultDiv() {
            $('#dataArea').hide();  // please wait area
            $('#idFilterRow').show();
            $('#salesAssociation').show();
        }

        function GetLevelAreas(staffCode, level) {

            $.ajax('/Admin/GetAreasforSalesPerson', {
                cache: false,
                type: "Get",
                contentType: "application/json",
                dataType: "json",
                data: { "staffCode": staffCode, "level": level },
                success: function (data, textStatus, jqXHR) {
                    if (data.length > 0) {
                        // save the returned data as we need to apply filter on it later
                        searchResultData = data;

                        for (var i = 0; i < data.length; i++) {
                            if (data[i].IsAssigned != false) {
                                var opt = new Option(data[i].CodeName + ' (' + data[i].Code + ')', data[i].Code);
                                $('#AssignedLevelAreas').append(opt);
                            }
                        }

                        RefreshAvailablePersonList();
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert("An error occured while getting data.")
                }
            });
        }

        function DisableSaveButton() {
            $('#btnSave').hide();
        }

        function EnableSaveButton() {
            $('#btnSave').show();
        }

        function DisableSearchButton() {
            $("#btnSearch").hide();
        }

        function EnableSearchButton() {
            $("#btnSearch").show();
        }

        function SaveAssignedLevelAreas() {
            DisableSearchButton();
            DisableSaveButton();

            var staffCode = $('#selStaffCode').val();;

            var level = $('#selLevel').val();
            var codes = new Array();

            $('#AssignedLevelAreas option').each(
                function () {
                    codes.push($(this).val());
                });

            if (codes == "") {
                alert("Select region from available regions to assign");
            }
            else {
                $.ajax('/Admin/SaveAssignedCodeValuesToSalesPerson', {
                    cache: false,
                    type: "Get",
                    contentType: "application/json",
                    dataType: "json",
                    traditional: true,
                    data: { 'staffCode': staffCode, 'level': level, 'codes': codes },
                    success: function (data, textStatus, jqXHR) {
                        var status = data.StatusCode;
                        if (status > 0) {
                            $('#AssignedLevelAreas').val([]);
                            $('#AvailableLevelAreas').val([]);
                        }
                        alert(data.Content);

                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        alert("An error occured while saving data.")
                    }
                });
            }

            isDirty = 0;
            EnableSaveButton();
            EnableSearchButton();
            EnableSearchCriteria();
        }

        function LoadEmployeeName() {

            var empCode = $('#txtEmployeeCode').val();
            var empName = $('#txtEmployeeName').val();
            var value = '';

            var select = document.getElementById("selStaffCode");

            for (var i = 0; i < select.length; i++) {
                var txt = select.options[i].text;

                if (txt.toLowerCase().includes("select")) {
                    select.options[i].style.display = 'list-item';
                    select.options[i].select = 'true';
                }
                else {
                    if (empCode != "") {
                        var include = txt.toLowerCase().includes(empCode.toLowerCase());
                    }
                    else if (empName != "") {
                        var include = txt.toLowerCase().includes(empName.toLowerCase());
                    }
                    else {
                        var include = txt.toLowerCase().includes(value.toLowerCase());
                    }

                    select.options[i].style.display = include ? 'list-item' : 'none';
                }
            }

            document.getElementById("selStaffCode").value = '0';
        }

        function validateSearchCriteria() {

            staffCode = $('#selStaffCode').val();
            var level = $('#selLevel').val();

            if (staffCode == 0) {
                alert('Select employee from available employees');
            }
            else if (level == 0) {
                alert('Select region');
            }
            else {
                HideSalesAssociationResultDiv();
                DisableSearchButton();
                GetLevelAreas(staffCode, level);
                ShowSalesAssociationResultDiv();
                EnableSearchButton();
                DisableSearchCriteria();
            }
        }

        function DisableSearchCriteria() {
            document.getElementById("selStaffCode").disabled = true;
            document.getElementById("selLevel").disabled = true;
            document.getElementById("btnSearchName").disabled = true;
            document.getElementById("btnSearch").disabled = true;
        }

        function EnableSearchCriteria() {
            document.getElementById("selStaffCode").disabled = false;
            document.getElementById("selLevel").disabled = false;
            document.getElementById("btnSearchName").disabled = false;
            document.getElementById("btnSearch").disabled = false;
        }
    </script>
}


