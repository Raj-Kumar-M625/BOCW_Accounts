@model StockRequestFullModel
@{
    string title = $"Add Stock (Req #: {Model.RequestNumber} | {Html.DisplayFor(model => Model.RequestDate, "DatetimeShort")})";
    IEnumerable<DomainEntities.OfficeHierarchy> officeHierarchy = (IEnumerable<DomainEntities.OfficeHierarchy>)ViewBag.OfficeHierarchy;
    string ZoneName = officeHierarchy.Where(x => x.ZoneCode.Equals(Model.ZoneCode, StringComparison.OrdinalIgnoreCase))
                            .FirstOrDefault()?.ZoneName ?? Model.ZoneCode;

    string AreaName = officeHierarchy.Where(x => x.AreaCode.Equals(Model.AreaCode, StringComparison.OrdinalIgnoreCase))
                            .FirstOrDefault()?.AreaName ?? Model.AreaCode;

    string TerritoryName = officeHierarchy.Where(x => x.TerritoryCode.Equals(Model.TerritoryCode, StringComparison.OrdinalIgnoreCase))
                            .FirstOrDefault()?.TerritoryName ?? Model.TerritoryCode;

    string HQName = officeHierarchy.Where(x => x.HQCode.Equals(Model.HQCode, StringComparison.OrdinalIgnoreCase))
                            .FirstOrDefault()?.HQName ?? Model.HQCode;

    DomainEntities.StockBalance RequesterBalanceRecord = (DomainEntities.StockBalance)ViewBag.RequesterBalanceRecord;
    long stockQtyAvailableAtRequesterEnd = RequesterBalanceRecord?.StockQuantity ?? 0;

    long BalanceRecordId = RequesterBalanceRecord?.Id ?? 0;
    long BalanceRecordCyclicCount = RequesterBalanceRecord?.CyclicCount ?? 0;
}

@using (Html.BeginForm("ConfirmStockItemAdd", "Admin", FormMethod.Post, new { Id = "popupForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <span style="font-size:large;">@title</span>
        <hr />
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.CyclicCount)

        <h5 style="color:darkblue;">Item Details</h5>
        <table class="table table-bordered table-striped table-condensed">
            <thead>
                <tr>
                    <th>@Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label" })</th>
                    <th>@Html.LabelFor(model => model.ItemDesc, htmlAttributes: new { @class = "control-label" })</th>
                    <th>@Html.LabelFor(model => model.Unit, htmlAttributes: new { @class = "control-label" })</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>@Html.DisplayFor(model => model.Category)</td>
                    <td>@Html.DisplayFor(model => model.ItemDesc)</td>
                    <td>@Html.DisplayFor(model => model.Unit)</td>
                </tr>
            </tbody>
        </table>

        @{
            string caption = $"Requested By ( Request to Add Qty. {Model.Quantity} | Qty. in Hand: {stockQtyAvailableAtRequesterEnd} )";
        }
        <h5 style="color:darkblue;">@caption</h5>
        <table class="table table-bordered table-striped table-condensed">
            <thead>
                <tr>
                    <th>@Html.LabelFor(model => model.ZoneCode, htmlAttributes: new { @class = "control-label" })</th>
                    <th>@Html.LabelFor(model => model.AreaCode, htmlAttributes: new { @class = "control-label" })</th>
                    <th>@Html.LabelFor(model => model.TerritoryCode, htmlAttributes: new { @class = "control-label" })</th>
                    <th>@Html.LabelFor(model => model.HQCode, htmlAttributes: new { @class = "control-label" })</th>
                    <th>@Html.LabelFor(model => model.EmployeeName, htmlAttributes: new { @class = "control-label" })</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>@Html.DisplayFor(model => ZoneName)</td>
                    <td>@Html.DisplayFor(model => AreaName)</td>
                    <td>@Html.DisplayFor(model => TerritoryName)</td>
                    <td>@Html.DisplayFor(model => HQName)</td>
                    <td>
                        @Html.DisplayFor(model => Model.StaffCode) &nbsp;
                        @Html.DisplayFor(model => Model.EmployeeName)
                    </td>
                </tr>
            </tbody>
        </table>

        <div class="form-group">
            <div>
                <label class="control-label col-md-2">Notes</label>
                <div class="col-md-6">
                    <textarea name="ReviewNotes" id="idReviewNotes" rows="2" cols="60" maxlength="100" class="form-control" />
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-4 col-md-4">
                <input type="submit" value="Confirm & Save" class="btn btn-success" onclick="submitButtonClicked('submit'); return false;"  title="Approve this request."/>
                <input type="submit" value="Deny" class="btn btn-danger" onclick="submitButtonClicked('deny'); return false;"  title="Deny this request."/>
            </div>
        </div>
    </div>
            }
<div id="resultArea">
    <img id="idWait2" src="/Content/img/pleasewait.gif" style="display:none;" />
</div>

@{
    Html.RenderPartial("_CodeSnippetPopupCancelLink");
    //Html.RenderPartial("_CodeSnippetConfirmBox");
}

<script>
    @Html.Raw("var ItemMasterId = '" + Model.ItemMasterId.ToString() + "';");
    @Html.Raw("var CyclicCount = '" + Model.CyclicCount.ToString() + "';");

    function submitButtonClicked(buttonType) {
        $('input.btn').hide();

        var reviewNotes = $("#idReviewNotes").val().trim();
        var transmitData = {
            StockRequestId: "@Model.Id",
            ItemMasterId: ItemMasterId,
            CyclicCount: CyclicCount,
            BalanceRecordId: "@BalanceRecordId",
            BalanceRecordCyclicCount: "@BalanceRecordCyclicCount",
            Notes: reviewNotes,
            ButtonType: buttonType
        };

        $("#popupForm").hide();
        $("#idWait2").show();
        // remove cancel link container from success message box.

        //alert(JSON.stringify(transmitData));

        $.ajax('/Admin/ConfirmStockItemAdd', {
            type: "POST",
            contentType: "application/json",
            data: JSON.stringify(transmitData),
            success: function (data, textStatus, jqXHR) {

                $('#idCancelLinkContainer').remove();
                $formHtml = $(data); // make it Jquery object
                $("#resultArea").html($formHtml);

                $formContainer = $("div#divOverGlass");

                // attach event on cancel
                $formHtml.find("#popupCancelLink").click(
                    {
                        formContainer: $formContainer,
                        form: $formHtml
                    }, cancelLinkClickOnGlassForm);
            },
            error: function (jqXHR, textStatus, errorThrown) {
                alert("An error occured. Please refresh the page and try again.")
                $formContainer = $("div#divOverGlass");
                HideGlassForm({
                    formContainer: $formContainer
                })
            }
        });
    }
</script>

<script src="~/Scripts/CustomScripts/EpicCrmCustomPopup.js"></script>