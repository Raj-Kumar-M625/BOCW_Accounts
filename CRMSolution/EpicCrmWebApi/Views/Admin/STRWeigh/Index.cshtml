@*@model EpicCrmWebApi.ModelFilter*@
@{
    ViewBag.Title = "Weighment";
    System.Text.StringBuilder sb = new System.Text.StringBuilder();
}

@{
    Html.RenderPartial("_CodeSnippetPageHeader", "Weighment / Silo");
}

<div class="well" id="idSearchWell">

    <div class="row">
        <div class="col-sm-2">
            <div class="form-group">
                <label>STR #</label>
                <input type="text" class="form-control" id="strNumber" />
            </div>
        </div>

        <div class="col-sm-2">
            <div class="form-group">
                <label>From (dd-mm-yyyy)</label>
                <div class="input-append date">
                    <input data-format="dd-MM-yyyy" type="text" class="form-control justDate" id="txtFromDate"  autocomplete="off"/>
                    <span class="add-on">
                        <i data-time-icon="icon-time" data-date-icon="icon-calendar">
                        </i>
                    </span>
                </div>
            </div>
        </div>
        <div class="col-sm-2">
            <div class="form-group">
                <label>To (dd-mm-yyyy)</label>
                <div class="input-append date">
                    <input data-format="dd-MM-yyyy" type="text" class="form-control justDate" id="txtToDate"  autocomplete="off"/>
                    <span class="add-on">
                        <i data-time-icon="icon-time" data-date-icon="icon-calendar">
                        </i>
                    </span>
                </div>
            </div>
        </div>

        <div class="col-sm-2">
            <div class="form-group">
                <label>&nbsp;</label>
                <input type="button" id="btnSearch" value="Search" class="form-control btn-success" />
            </div>
        </div>
    </div>
</div>
<div id="dataArea">
</div>


<script type="text/javascript">

</script>


@section scripts{
<script src="/Scripts/jquery.datetimepicker.js"></script>
    <script>
        $(document).ready(
            function () {
                ShowSearch();
                $("#btnSearch").off('click').on('click', btnSearchClicked);
                $("#showSearch").off('click').on('click', ShowSearch);

                // once user changes selection boxes, clear results area;
                $('Select').change(function () { ClearResults(); });
                $('input').change(function () { ClearResults(); });

                $('.justDate').datetimepicker({ inline: false, format: 'd-m-Y', timepicker: false, yearStart: 2017, yearEnd: 2099 });

                $('.justDate').attr({ 'placeholder': 'dd-mm-yyyy' });

                //var endDate = Date.today();
                //var startDate = Date.today().add(-5).days();
                //$("#txtFromDate").val(startDate.toString('dd-MM-yyyy'));
                //$("#txtToDate").val(endDate.toString('dd-MM-yyyy'));
            });


        // Search button
        var btnSearchClicked = function (event) {
            DisableSearchButton();

            var searchCriteria = CaptureSearchCriteria();

            //alert(JSON.stringify(searchCriteria));
                //$('#dataArea').html('<p>Please wait...</p>');
                $('#dataArea').html(waitImage);
                $.ajax('GetSearchSTRWeigh', {
                    cache: false,
                    type: "Get",
                    contentType: "application/json",
                    data: searchCriteria,
                    success: function (data, textStatus, jqXHR) {

                        $('#dataArea').html(data);

                        if (document.getElementById("downloadLinkArea") != null) {
                            // create link to download the data as excel
                            // do some text replacements - remove links etc.
                            var dataToSave = data.replace(/<a.*\">/g, "").replace(/<\/a>/g, "");
                            // Checked check box to be turned into 'Yes'
                            dataToSave = dataToSave.replace(/<input checked=\"checked\" class=\"check-box\" disabled=\"disabled\" type=\"checkbox\" \/>/g, "Yes");

                            // replace image tag
                            dataToSave = dataToSave.replace(/<img .*png\" \/>/g, "");

                            // now create html and remove header row from downloadable data
                            var $dataAsHtml = $(dataToSave);
                            $dataAsHtml.find("#dataTableHeader").remove();
                            $dataAsHtml.find("h3").remove();
                            $dataAsHtml.find("img").remove();
                            $dataAsHtml.find(".removeFromDownload").remove();

                            // remove all rows that are there to show order details inline
                            // it will be there only for orders;
                            //$dataAsHtml.find(".orderDetailRow").remove();
                            dataToSave = $('<div>').append($dataAsHtml).html();

                            var blob = new Blob([dataToSave], { type: "application/x-msexcel" });
                            var url = URL.createObjectURL(blob);

                            var m = document.createElement('img');
                            m.height = "25";
                            m.width = "25";
                            m.src = "/Content/img/download_3.png";

                            var a = document.createElement('a');
                            a.download = "DownloadReport.xls";
                            a.href = url;
                            a.title = "Download as Excel";
                            a.appendChild(m);
                            
                            //a.textContent = "Download as Excel";
                            //a.textContent = "<img height='15' width='15' src='~/Content/img/download_3.png' />";

                            document.getElementById("downloadLinkArea").appendChild(a);
                        }

                        $(".editInPopup").off('click').on('click', { callback: btnSearchClicked }, editPopupLinkClicked);
                        $(".addInPopup").off('click').on('click', { callback: btnSearchClicked }, addPopupLinkClicked);
                        EnableSearchButton();
                        if ($("#dataTable").length) {
                            HideSearch();
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        alert("An error occured while getting data matching your search criteria.")
                        EnableSearchButton();
                    }
                });
        }

        function CaptureSearchCriteria() {
            var searchCriteria = {};
            searchCriteria.STRNumber = $("#strNumber").val();
            searchCriteria.DateFrom = $("#txtFromDate").val();
            searchCriteria.DateTo = $("#txtToDate").val();

            return searchCriteria;
        }

        function DisableSearchButton() {
            $("#btnSearch").hide();
        }

        function EnableSearchButton() {
            $("#btnSearch").show();
        }

        function HideSearch() {
            $("#idSearchWell").hide();
            $("#showSearch").show();
        }

        function ShowSearch() {
            $("#idSearchWell").show("slow");
            $("#showSearch").hide();
        }

        function ClearResults() {
            $('#dataArea').html('');
        }

        var openAssociationBlocks = {};
        function closeArea(rowGuid)
        {
            $('#' + rowGuid).hide();
            openAssociationBlocks[rowGuid] = '';
        }

        function additionalAnchorClicked(rowGuid, targetGuid, targetGuidHead, Id, displayStringHead) {
            if (openAssociationBlocks[rowGuid] === undefined || openAssociationBlocks[rowGuid] === '') // never opened or closed after open
            {
                openAssociationBlocks[rowGuid] = 'Display';  // first time click
                $('#' + rowGuid).show();

                //var ht = '<a href="" onClick="closeArea(\'' + rowGuid + '\');return false;">Close ' + displayStringHead + ' block</a>';
                //$('#' + targetGuidHead).html(ht);

                $('#' + targetGuid).html('<p>Please wait</p>');
                var uri = '/Admin/Get' + displayStringHead;
                $.ajax(uri, {
                    cache: false,
                    type: "Get",
                    contentType: "application/json",
                    data: { 'Id': Id, 'rowId': rowGuid },
                    success: function (data, textStatus, jqXHR) {
                        $('#' + targetGuid).html(data);
                        // need to add following line, as the returned data may have add/edit links that need to work in popup
                        $(".editInPopup").off('click').on('click', editPopupLinkClicked);
                        $(".addInPopup").off('click').on('click', addPopupLinkClicked);
                        //$('.justDate').datetimepicker({ inline: false, format: 'd-m-Y', timepicker: false, yearStart: 2017, yearEnd: 2099 });
                        //$('.justDate').attr({ 'placeholder': 'dd-mm-yyyy' });
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        alert("An error occured while getting data.");
                    }
                });
            }
            else // already open - close it now;
            {
                closeArea(rowGuid);
                //$('#' + rowGuid).hide();
                //openAssociationBlocks[rowGuid] = '';
            }
        }

        var isProcessing = {};
        function closeImageArea(displayImage, imageDisplayWaitArea, imageDisplayArea)
        {
            $('#' + imageDisplayArea).hide();
            $('#' + imageDisplayWaitArea).hide();
            openAssociationBlocks[displayImage] = '';
        }

        function displayImage(id, imageCount, displayImage, imageDisplayWaitArea, imageDisplayArea) {
            if (openAssociationBlocks[displayImage] === undefined || openAssociationBlocks[displayImage] === '') // never opened or closed after open
            {
                if (isProcessing[displayImage] === 'image' || isProcessing[displayImage] === undefined) {

                    isProcessing[displayImage] = '';

                    var imagesRetrieved = 0;
                    $('#' + imageDisplayArea).show();
                    $('#' + imageDisplayWaitArea).show();
                    $('#' + displayImage).html('<span></span>');

                    for (i = imageCount; i > 0; i--) {
                        var xhr = new XMLHttpRequest();
                        xhr.onreadystatechange = function () {
                            if (this.readyState == 4 && this.status == 200) {
                                var reader = new window.FileReader();
                                reader.readAsDataURL(this.response);
                                reader.onloadend = function () {
                                    imagesRetrieved++;
                                    $('#' + displayImage).append('<img style="margin-left:20px;" height="300px" width="auto" src="' + reader.result + '"/>');
                                    if (imagesRetrieved == imageCount) // last image processed
                                    {
                                        $('#' + imageDisplayArea).show();
                                        isProcessing[displayImage] = 'image';
                                        $('#' + imageDisplayWaitArea).hide();
                                    }
                                }
                            }
                        }
                        xhr.open('GET', '/Admin/STRImageData?Id=' + id + '&imageItem=' + i);
                        xhr.responseType = 'blob';
                        xhr.send();
                    }
                    openAssociationBlocks[displayImage] = 'displaying';
                } else {
                    return;
                }
            } else {
                closeImageArea(displayImage, imageDisplayWaitArea, imageDisplayArea);
                //$('#' + imageDisplayArea).hide();
                //$('#' + imageDisplayWaitArea).hide();
                //openAssociationBlocks[displayImage] = '';
            }
        }

    </script>
}
