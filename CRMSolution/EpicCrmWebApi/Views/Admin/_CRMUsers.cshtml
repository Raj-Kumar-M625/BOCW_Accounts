@model IEnumerable<EpicCrmWebApi.EmployeeRecordModel>

@{ 
    bool ShowAdvancedColumns = (bool)ViewBag.ShowAdvancedColumns;
    bool ShowTerminateAndDeleteLinksOnCrmUsersPage = false;
    int totalUsers = Model.Count();
    int totalActiveUsers = Model.Count(x => x.IsActive);
    string displayString = $"{totalActiveUsers} out of {totalUsers} are active app users.";
    int colCount = (ShowAdvancedColumns) ? 14 : 10;
}

<table class="table">
    <tr>
        <td colspan="@colCount">@displayString</td>
    </tr>
</table>

@if (Model.Count() > 0)
{
    <table class="table" id="dataTable">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.EmployeeId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.EmployeeCode)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Phone)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.IMEI)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.IsActiveInSap)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.OnPhone)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ExecAppAccess)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.OnWebPortal)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.IsActive)
                </th>

                @if (ShowAdvancedColumns)
                {
                    <th>@Html.DisplayNameFor(model => model.SendLogFromPhone)</th>
                    <th>@Html.DisplayNameFor(model => model.AutoUploadFromPhone)</th>
                    <th>@Html.DisplayNameFor(model => model.ActivityPageName)</th>
                    <th>@Html.DisplayNameFor(model => model.LocationFromType)</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                string guid1 = Guid.NewGuid().ToString();
                string guid2 = Guid.NewGuid().ToString();
                string guid3 = Guid.NewGuid().ToString();
                string guid4 = Guid.NewGuid().ToString();
                string guid5 = Guid.NewGuid().ToString();

                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.EmployeeId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                        @if (ShowAdvancedColumns)
                        {
                            @Html.ActionLink(" (Batches)", "ShowSqliteBatches", "SuperAdmin", new { employeeId = item.EmployeeId, batchCount = 50, onlyLockedBatches = false, inRecentBatches = 3000 }, null)
                            @*@Html.ActionLink(" (Phone Log)", "ShowErrorLog", "SuperAdmin", new { startItem = 1, itemCount = 7, processName = "Phone_" + @item.EmployeeId }, null)*@
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EmployeeCode)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Phone, "Phone")
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.IMEI)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.IsActiveInSap)
                    </td>
                    <td>
                        @*https://cpratt.co/html-editorfor-and-htmlattributes/*@
                        @if (item.OnPhone)
                        {
                            @Html.EditorFor(modelItem => item.OnPhone, new { htmlAttributes = new { @class = "OnPhoneCheck", id = @guid1, data_empId = @item.EmployeeId, data_empName = @item.Name, title = $"Disassociate {item.Name} on {item.IMEI} phone" } })
                        }
                        else
                        {
                            @Html.DisplayFor(modelItem => item.OnPhone)
                        }
                    </td>

                    <td>
                        @if (item.OnPhone)
                        {
                            if (item.ExecAppAccess)
                            {
                                @Html.EditorFor(modelItem => item.ExecAppAccess, new { htmlAttributes = new { @class = "OnExecAppCheck", id = @guid5, data_empId = @item.EmployeeId, data_empName = @item.Name, title = $"Remove Exec App Access for {item.Name}" } })
                            }
                            else
                            {
                                @Html.EditorFor(modelItem => item.ExecAppAccess, new { htmlAttributes = new { @class = "OnExecAppCheck", id = @guid5, data_empId = @item.EmployeeId, data_empName = @item.Name, title = $"Allow Exec App Access for {item.Name}" } })
                            }
                        }
                    </td>
                    <td>
                        @if (item.OnWebPortal)
                        {
                            @Html.EditorFor(modelItem => item.OnWebPortal, new { htmlAttributes = new { @class = "OnWebCheck", id = @guid3, data_empId = @item.EmployeeId, data_empName = @item.Name, title = $"Remove web access for {item.Name}" } })
                        }
                        else
                        {
                            @Html.DisplayFor(modelItem => item.OnWebPortal)
                        }
                    </td>
                    <td>
                        @if (item.IsActive && ShowTerminateAndDeleteLinksOnCrmUsersPage)
                        {
                            @Html.EditorFor(modelItem => item.IsActive, new { htmlAttributes = new { @class = "OnJobCheck", id = @guid2, data_empId = @item.EmployeeId, data_empName = @item.Name, title = $"Terminate {item.Name} from Employment" } })
                        }
                        else
                        {
                            @Html.DisplayFor(modelItem => item.IsActive)
                        }
                    </td>

                    @if (ShowAdvancedColumns)
                    {
                        <td>
                            @Html.EditorFor(modelItem => item.SendLogFromPhone, new { htmlAttributes = new { @class = "OnLogCheck", id = @guid4, data_empId = @item.EmployeeId, data_empName = @item.Name, title = $"Toggle Phone Logs for {item.Name}" } })
                        </td>
                        <td>@Html.DisplayFor(modelItem => item.AutoUploadFromPhone)</td>
                        <td>@Html.DisplayFor(modelItem => item.ActivityPageName)</td>
                        <td>@Html.DisplayFor(modelItem => item.LocationFromType)</td>
                    }
                </tr>
            }
        </tbody>
    </table>
}