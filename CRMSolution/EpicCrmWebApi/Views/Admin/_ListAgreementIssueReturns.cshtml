@model ICollection<IssueReturnModel>
@{
    int issueReturnCount = Model.Count;
    int rowsProcessed = 0;
}

@if (issueReturnCount > 0)
{
    decimal balanceAmount = 0;
    decimal totalIssueAmount = 0;
    decimal totalReturnAmount = 0;

    <table class="table table-bordered table-striped table-condensed">
        <tr>
            <th>
                @Html.LabelFor(model => Model.First().SlipNumber)
            </th>
            <th>
                @Html.LabelFor(model => Model.First().TransactionDate)
            </th>
            <th>
                @Html.LabelFor(model => Model.First().AgreementNumber)
            </th>
            <th>@Html.DisplayNameFor(model => Model.First().AppliedItemType)</th>
            <th>@Html.DisplayNameFor(model => Model.First().AppliedItemCode)</th>
            <th>@Html.DisplayNameFor(model => Model.First().AppliedQuantity)</th>
            <th>@Html.DisplayNameFor(model => Model.First().AppliedItemRate)</th>
            <th>Issue Amount (Rs.)</th>
            <th>Return Amount (Rs.)</th>
            <th>@Html.DisplayNameFor(model => Model.First().Status)</th>
        </tr>
        @foreach (var item in Model.OrderBy(x => x.SlipNumber))
        {
            rowsProcessed++;
            string qtyDisplay = $"{item.AppliedQuantity} {item.AppliedItemUnit}";
            decimal itemAmount = item.AppliedItemRate * item.AppliedQuantity;

            if (item.IsIssueItem)
            {
                balanceAmount += itemAmount;
                totalIssueAmount += itemAmount;
            }
            else
            {
                balanceAmount -= itemAmount;
                totalReturnAmount += itemAmount;
            }

            <tr>
                <td>@Html.DisplayFor(modelItem => item.SlipNumber)</td>
                <td>@Html.DisplayFor(modelItem => item.TransactionDate, "DateTimeShort")</td>
                <td>@Html.DisplayFor(modelItem => item.AgreementNumber)</td>
                <td>@Html.DisplayFor(modelItem => item.AppliedItemType)</td>
                <td>@Html.DisplayFor(modelItem => item.AppliedItemCode)</td>
                <td>@qtyDisplay</td>
                <td>@Html.DisplayFor(modelItem => item.AppliedItemRate)</td>

                @if (item.IsIssueItem)
                {
                    <td>@Html.DisplayFor(modelItem => itemAmount)</td>
                    <td>&nbsp;</td>
                }
                else
                {
                    <td>&nbsp;</td>
                    <td>@Html.DisplayFor(modelItem => itemAmount)</td>
                }

                <td>@Html.DisplayFor(modelItem => item.Status)</td>
            </tr>
        }
        <tr>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <th>Totals</th>
            <th>@Html.DisplayFor(modelItem => totalIssueAmount)</th>
            <th>@Html.DisplayFor(modelItem => totalReturnAmount)</th>
            <td>&nbsp;</td>
        </tr>

        <tr>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <th>Net Amt.</th>
            <th>@Html.DisplayFor(modelItem => balanceAmount)</th>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
        </tr>
    </table>
}
else
{
    <div>There are zero items to show here.</div>
}

