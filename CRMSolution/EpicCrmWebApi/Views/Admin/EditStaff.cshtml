@model SalesPersonViewModel
@{
    IEnumerable<DomainEntities.CodeTableEx> headQuarters = ViewBag.HeadQuarters;
    IEnumerable<DomainEntities.CodeTableEx> grades = ViewBag.Grades;
    IEnumerable<DomainEntities.CodeTableEx> departments = ViewBag.Department;
    IEnumerable<DomainEntities.CodeTableEx> designations = ViewBag.Designation;
    IEnumerable<DomainEntities.CodeTableEx> ownership = ViewBag.Ownership;
    IEnumerable<DomainEntities.CodeTableEx> vehicleTypes = ViewBag.VehicleType;
    IEnumerable<DomainEntities.CodeTableEx> fuelTypes = ViewBag.FuelType;
    IEnumerable<DomainEntities.CodeTableEx> businessRoles = ViewBag.BusinessRoles;
    bool gradesEnabled = ViewBag.GradesEnabled;
}


@using (Html.BeginForm("EditStaff", "Admin", FormMethod.Post, new { Id = "popupForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <span style="font-size:large;">Edit</span>

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.StaffCode)

        <div class="form-group">
            <div>
                @Html.LabelFor(model => model.StaffCode, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DisplayFor(model => model.StaffCode, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
            <div>
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div>
                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                </div>
            </div>
            <div>
                @Html.LabelFor(model => model.HQCode, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    <select class="form-control" id="selHq" name="HqCode">
                        @foreach (var o in headQuarters.OrderBy(x => x.CodeName))
                        {
                            if (o.Code.Equals(Model.HQCode, StringComparison.OrdinalIgnoreCase))
                            {
                                <option value="@o.Code" selected>@o.CodeName (@o.Code)</option>
                            }
                            else
                            {
                                <option value="@o.Code">@o.CodeName (@o.Code)</option>
                            }
                        }
                    </select>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div>
                @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    <select class="form-control" id="selDept" name="Department">
                        <option value="">Select Department</option>
                        @foreach (var o in departments.OrderBy(x => x.DisplaySequence))
                        {
                            if (o.Code.Equals(Model.Department, StringComparison.OrdinalIgnoreCase))
                            {
                                <option value="@o.Code" selected>@o.CodeName</option>
                            }
                            else
                            {
                                <option value="@o.Code">@o.CodeName</option>
                            }
                        }
                    </select>
                </div>
            </div>

            <div>
                @Html.LabelFor(model => model.Designation, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    <select class="form-control" id="selDesg" name="Designation">
                        <option value="">Select Designation</option>
                        @foreach (var o in designations.OrderBy(x => x.DisplaySequence))
                        {
                            if (o.Code.Equals(Model.Designation, StringComparison.OrdinalIgnoreCase))
                            {
                                <option value="@o.Code" selected>@o.CodeName</option>
                            }
                            else
                            {
                                <option value="@o.Code">@o.CodeName</option>
                            }
                        }
                    </select>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div>
                @Html.LabelFor(model => model.Ownership, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    <select class="form-control" id="selOwn" name="Ownership">
                        <option value="">Select Ownership</option>
                        @foreach (var o in ownership.OrderBy(x => x.DisplaySequence))
                        {
                            if (o.Code.Equals(Model.Ownership, StringComparison.OrdinalIgnoreCase))
                            {
                                <option value="@o.Code" selected>@o.CodeName</option>
                            }
                            else
                            {
                                <option value="@o.Code">@o.CodeName</option>
                            }
                        }
                    </select>
                </div>
            </div>

            <div>
                @Html.LabelFor(model => model.VehicleType, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    <select class="form-control" id="selVType" name="VehicleType">
                        <option value="">Select Vehicle Type</option>
                        @foreach (var o in vehicleTypes.OrderBy(x => x.DisplaySequence))
                        {
                            if (o.Code.Equals(Model.VehicleType, StringComparison.OrdinalIgnoreCase))
                            {
                                <option value="@o.Code" selected>@o.CodeName</option>
                            }
                            else
                            {
                                <option value="@o.Code">@o.CodeName</option>
                            }
                        }
                    </select>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div>
                @Html.LabelFor(model => model.FuelType, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    <select class="form-control" id="selFType" name="FuelType">
                        <option value="">Select Fuel Type</option>
                        @foreach (var o in fuelTypes.OrderBy(x => x.DisplaySequence))
                        {
                            if (o.Code.Equals(Model.FuelType, StringComparison.OrdinalIgnoreCase))
                            {
                                <option value="@o.Code" selected>@o.CodeName</option>
                            }
                            else
                            {
                                <option value="@o.Code">@o.CodeName</option>
                            }
                        }
                    </select>
                </div>
            </div>

            <div>
                @Html.LabelFor(model => model.VehicleNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.VehicleNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.VehicleNumber, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div>
                @Html.LabelFor(model => model.BusinessRole, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    <select class="form-control" id="selBusinessRole" name="BusinessRole">
                        <option value="">Select Business Role</option>
                        @foreach (var o in businessRoles.OrderBy(x => x.DisplaySequence))
                        {
                            if (o.Code.Equals(Model.BusinessRole, StringComparison.OrdinalIgnoreCase))
                            {
                                <option value="@o.Code" selected>@o.Code</option>
                            }
                            else
                            {
                                <option value="@o.Code">@o.Code</option>
                            }
                        }
                    </select>
                </div>
            </div>

            @if (gradesEnabled)
            {
                <div>
                    @Html.LabelFor(model => model.Grade, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        <select class="form-control" id="selGrade" name="Grade">
                            <option value="">Select Grade</option>
                            @foreach (var o in grades.OrderBy(x => x.DisplaySequence))
                            {
                                if (o.Code.Equals(Model.Grade, StringComparison.OrdinalIgnoreCase))
                                {
                                    <option value="@o.Code" selected>@o.Code</option>
                                }
                                else
                                {
                                    <option value="@o.Code">@o.Code</option>
                                }
                            }
                        </select>
                    </div>
                </div>
            }
        </div>

        <div class="form-group">
            <div>
                @Html.LabelFor(model => model.TwoWheelerRatePerKM, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.TwoWheelerRatePerKM, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TwoWheelerRatePerKM, "", new { @class = "text-danger" })
                </div>
            </div>
            <div>
                @Html.LabelFor(model => model.FourWheelerRatePerKM, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.FourWheelerRatePerKM, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FourWheelerRatePerKM, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        <div class="form-group">
            <div>
                @Html.LabelFor(model => model.OverridePrivateVehicleRatePerKM, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.OverridePrivateVehicleRatePerKM)
                </div>
            </div>

            <div>
                @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.IsActive)
                </div>
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success" id="popupSaveButton" />
            </div>
        </div>
    </div>
}
@{
    Html.RenderPartial("_CodeSnippetPopupCancelLink");
}
