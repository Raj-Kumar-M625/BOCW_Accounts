@model IEnumerable<EpicCrmWebApi.DWSModel>
@{
    IEnumerable<DomainEntities.OfficeHierarchy> officeHierarchy = (IEnumerable<DomainEntities.OfficeHierarchy>)ViewBag.OfficeHierarchy;
    int itemCount = Model.Count();
    string displayString = $"{itemCount} rows displayed.";
}

<div>
    <h3>
        <a href="" title="Refresh Search Result" onclick="btnSearchClicked();return false;">
            <img height="25" width="25" src="~/Content/img/refresh.png" /></a>&nbsp;DWS Details (@Model.Count())
    </h3>
</div>
@if (Model.Count() > 0)
{
    <table class="table table-bordered table-striped" id="dataTable">
        <tr>
            <th style="column-width:45px;" id="downloadLinkArea" class="removeFromDownload">&nbsp;</th>
            <th class="removeFromDownload checkboxCell">All<input class='check-box allRecMark' type='checkbox' /></th>
            <th>@Html.DisplayNameFor(model => model.DWSDate)</th>
            <th>@Html.DisplayNameFor(model => model.STRNumber)</th>
            <th>@Html.DisplayNameFor(model => model.DWSNumber)</th>
            <th>@Html.DisplayNameFor(model => model.Agreement)</th>
            <th>@Html.DisplayNameFor(model => model.TypeName)</th>
            <th>@Html.DisplayNameFor(model => model.EntityName)</th>
            <th>@Html.DisplayNameFor(model => model.BagCount)</th>
            <th>@Html.DisplayNameFor(model => model.GoodsWeight)</th>
            <th>@Html.DisplayNameFor(model => model.SiloDeductWtOverride)</th>
            <th>@Html.DisplayNameFor(model => model.NetPayableWt)</th>

            <th>@Html.DisplayNameFor(model => model.GoodsPrice)</th>
            <th>@Html.DisplayNameFor(model => model.DeductAmount)</th>
            <th>@Html.DisplayNameFor(model => model.NetPayable)</th>

            <th>Zone</th>
            <th>Area</th>
            <th>Territory</th>
            <th>HQ</th>

            <th>@Html.DisplayNameFor(model => model.Comments)</th>
            <th>@Html.DisplayNameFor(model => model.Status)</th>
            <th>@Html.DisplayNameFor(model => model.PaymentReference)</th>

            <th>@Html.DisplayNameFor(model => model.BankAccountName)</th>
            <th>@Html.DisplayNameFor(model => model.BankName)</th>
            <th>@Html.DisplayNameFor(model => model.BankAccount)</th>
            <th>@Html.DisplayNameFor(model => model.BankIFSC)</th>
            <th>@Html.DisplayNameFor(model => model.BankBranch)</th>
        </tr>
        @foreach (var item in Model)
        {
            DomainEntities.OfficeHierarchy ohRec = officeHierarchy?
                            .Where(x => x.HQCode.Equals(item.HQCode, StringComparison.OrdinalIgnoreCase))
                            .FirstOrDefault();

            var zoneName = ohRec?.ZoneName ?? "";
            var areaName = ohRec?.AreaName ?? "";
            var territoryName = ohRec?.TerritoryName ?? "";
            var hqName = ohRec?.HQName ?? "";

            bool IsEditAllowed = item.Status.Equals(DomainEntities.STRDWSStatus.AmountApproved.ToString(), StringComparison.OrdinalIgnoreCase);
            <tr>
                <td class="removeFromDownload">
                </td>

                <td class="removeFromDownload checkboxCell">
                    @if (IsEditAllowed)
                    {
                        <input class='check-box oneRecMark' type='checkbox' data-id="@item.Id"/>
                    }
                </td>

                <td>@Html.DisplayFor(modelItem => item.DWSDate, "DateTimeDate")</td>
                <td>@Html.DisplayFor(modelItem => item.STRNumber)</td>
                <td>@Html.DisplayFor(modelItem => item.DWSNumber)</td>
                <td>@Html.DisplayFor(modelItem => item.Agreement)</td>
                <td>@Html.DisplayFor(modelItem => item.TypeName)</td>
                <td>@Html.DisplayFor(modelItem => item.EntityName)</td>
                <td>@Html.DisplayFor(modelItem => item.BagCount)</td>
                <td>@Html.DisplayFor(modelItem => item.GoodsWeight)</td>
                <td>@Html.DisplayFor(modelItem => item.SiloDeductWtOverride)</td>
                <th>@Html.DisplayFor(modelItem => item.NetPayableWt)</th>

                <td>@Html.DisplayFor(modelItem => item.GoodsPrice)</td>
                <td>@Html.DisplayFor(modelItem => item.DeductAmount)</td>
                <th>@Html.DisplayFor(modelItem => item.NetPayable)</th>

                <td>@Html.DisplayFor(modelItem => zoneName)</td>
                <td>@Html.DisplayFor(modelItem => areaName)</td>
                <td>@Html.DisplayFor(modelItem => territoryName)</td>
                <td>@Html.DisplayFor(modelItem => hqName)</td>

                <td>@Html.DisplayFor(modelItem => item.Comments)</td>
                <td>@Html.DisplayFor(modelItem => item.Status)</td>
                <td>@Html.DisplayFor(modelItem => item.PaymentReference)</td>

                <td>@Html.DisplayFor(model => item.BankAccountName)</td>
                <td>@Html.DisplayFor(model => item.BankName)</td>
                <td>@Html.DisplayFor(model => item.BankAccount)</td>
                <td>@Html.DisplayFor(model => item.BankIFSC)</td>
                <td>@Html.DisplayFor(model => item.BankBranch)</td>
            </tr>
        }

        <tr class="buttonActions">
            <td colspan='23'>
            <input style='width:200px;' type='button' id='btnShowMarked' value='Show Selected' title='Show checked rows' class='form-control btn-warning' />
            <input style='width:200px;' type='button' id='btnShowUnMarked' value='Show Un-selected' title='Show un-selected rows' class='form-control btn-warning' />
            <input style='width:200px;' type='button' id='btnShowAll' value='Show All' title='Show all rows' class='form-control btn-warning' />
            <input style='width:200px;' type='button' id='btnPay' value='Proceed to Payment &gt;&gt;' class='form-control btn-success' />
            <span style="font-size:13px;color:#333;font-family:Arial,sans-serif;">* You can review the payments on next screen, before it's final.</span>
            </td>
        </tr>

    </table>
}
<script>
    // if there are no rows with check box, then hide action button row
    if ($("input.oneRecMark").length == 0)
    {
        $(".buttonActions").hide();
        //$("input.allRecMark").hide();
        $(".checkboxCell").each(function (index, element) {
            $(element).remove();
        });
    }
    else
    {
        $("input.allRecMark").click(function () {
            $("input.oneRecMark").prop('checked', $(this).prop('checked'));
        });
    }

    $('input#btnPay').click(payButtonClicked);
    $('input#btnShowMarked').click(showMarkedRowsClicked);
    $('input#btnShowUnMarked').click(showUnMarkedRowsClicked);
    $('input#btnShowAll').click(showAllRowsClicked);

    $('input#btnPay').css('display', 'inline');
    $('input#btnShowMarked').css('display', 'inline');
    $('input#btnShowUnMarked').css('display', 'inline');
    $('input#btnShowAll').css('display', 'inline');

    function payButtonClicked() {
        $('input#btnPay').hide();
        var selectedDWS = [];

        $("input.oneRecMark").each(function (index, element) {
            if ($(element).is(':checked')) {
                //var v = $(element).parent().parent().find('td:nth-child(' + colNumForDWSNumber + ')').text().trim();

                @*each check box has id stored as data-id attribute*@
                var v = $(element).attr('data-id');
                //alert(v);

                // store in array only if it does not exist
                if (/^[0-9]+$/.test(v) && selectedDWS.indexOf(v) === -1) {
                    selectedDWS.push(v);
                }
            }
        });

        if (selectedDWS.length == 0) {
            alert('Please mark DWS for payment and try again.');
            $('input#btnPay').show();
            return;
        }

        var transmitData = {dwsIds: selectedDWS};
        //transmitData.dwsIds = selectedDWS;

        showGlass();
        showWaitMessage();

        $.ajax('/Admin/MakeDWSPayment', {
            traditional: true,
            cache: false,
            type: "Get",
            contentType: "application/json",
            data: transmitData,
            success: function (data, textStatus, jqXHR) {
                    // clear message and uncheck all check boxes;
                    $("input.allRecMark").prop('checked', false);
                    $("input.oneRecMark").prop('checked', false);

                    SetCallbackFunction(btnSearchClicked);
                    ShowFormOnGlass(data);

                    $('input#btnPay').show();
            },
            error: function (jqXHR, textStatus, errorThrown) {
                alert("An error occured. Please refresh the page and try again.")
                hideGlass();
                $('input#btnPay').show();
            }
        });

        $('input#btnPay').show();
    }

    function showMarkedRowsClicked() {
        $("input.oneRecMark").each(function (index, element) {
            var trow = $(element).parent().parent();
            ($(element).is(':checked')) ? trow.show() : trow.hide();
        });
    }

    function showUnMarkedRowsClicked() {
        $("input.oneRecMark").each(function (index, element) {
            var trow = $(element).parent().parent();
            ($(element).is(':checked')) ? trow.hide() : trow.show();
        });
    }

    function showAllRowsClicked() {
        $("input.oneRecMark").each(function (index, element) {
            var trow = $(element).parent().parent();
            trow.show();
        });
    }

</script>