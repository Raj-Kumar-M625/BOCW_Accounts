@model ProjectViewModel
@{
    IEnumerable<DomainEntities.CodeTableEx> projectCategory = (List<DomainEntities.CodeTableEx>)ViewBag.ProjectCategory;
    IEnumerable<DomainEntities.CodeTableEx> projectStatus = (List<DomainEntities.CodeTableEx>)ViewBag.ProjectStatus;

    string title = "";
    if (Model.Id > 0)
    {
        title = "Edit Project";
    }
    else
    {
        title = "Add Project";
    }
}


@using (Html.BeginForm("EditProject", "Admin", FormMethod.Post, new { Id = "popupForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <span style="font-size:large;">@title</span>
        <hr />
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.ActualStartDate)
        @Html.HiddenFor(model => model.ActualEndDate)
        @Html.HiddenFor(model => model.CyclicCount)

        <div class="form-group">
            <div>
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>
            <div>
                @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    <select class="form-control" id="selProjectCategory" name="Category">
                        <option value="" selected>Select Category</option>
                        @foreach (var o in projectCategory)
                        {
                            if (Model.Category == o.Code)
                            {
                                <option selected value="@o.Code">@o.Code</option>
                            }
                            else
                            {
                                <option value="@o.Code">@o.Code</option>
                            }
                        }
                    </select>
                </div>
            </div>

            @*<div>
                @Html.LabelFor(model => model.STRDateAsText, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    <input data-format="dd-MM-yyyy" type="text" name="STRDateAsText"
                           class="form-control justDate" value="@Model.STRDateAsText" />
                    @Html.ValidationMessageFor(model => model.STRDateAsText, "", new { @class = "text-danger" })
                </div>
            </div>*@
        </div>

        <div class="form-group">
            <div>
                @Html.LabelFor(model => model.PlannedStartDateAsText, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    <input data-format="dd-MM-yyyy" type="text" name="PlannedStartDateAsText"
                           class="form-control justDate" value="@Model.PlannedStartDateAsText" />
                    @Html.ValidationMessageFor(model => model.PlannedStartDateAsText, "", new { @class = "text-danger" })
                </div>
            </div>
            <div>
                @Html.LabelFor(model => model.PlannedEndDateAsText, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    <input data-format="dd-MM-yyyy" type="text" name="PlannedEndDateAsText"
                           class="form-control justDate" value="@Model.PlannedEndDateAsText" />
                    @Html.ValidationMessageFor(model => model.PlannedEndDateAsText, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        <div class="form-group">
            <div>
                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    <select class="form-control" id="selProjectStatus" name="Status">
                        <option value="" selected>Select Status</option>
                        @foreach (var o in projectStatus)
                        {
                            if (Model.Status == o.Code)
                            {
                                <option selected value="@o.Code">@o.Code</option>
                            }
                            else
                            {
                                <option value="@o.Code">@o.Code</option>
                            }
                        }
                    </select>
                </div>
            </div>
            <div>
                @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.IsActive)
                </div>
            </div>
        </div>


        @*<div class="form-group">
            <div>
                @Html.LabelFor(model => model.ExitOdometer, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.ExitOdometer, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ExitOdometer, "", new { @class = "text-danger" })
                </div>
            </div>
            <div>
                @Html.LabelFor(model => model.BagCount, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.BagCount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.BagCount, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>*@


        <div class="form-group">
            <div>
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    <textarea name="Description" rows="4" cols="30" class="form-control">@Model.Description</textarea>
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-5 col-md-4">
               <input type="submit" value="Save" class="btn btn-success" id="popupSaveButton" />
            </div>
        </div>
    </div>
}

@{
    Html.RenderPartial("_CodeSnippetPopupCancelLink");
}
