@model GstRateViewModel


@using (Html.BeginForm("EditGSTRate", "Admin", FormMethod.Post, new { Id = "popupForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <span style="font-size:large;">Edit GST Rate</span>

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.GstCode)
        @Html.HiddenFor(model => model.IsRateEditable)
        @Html.HiddenFor(model => model.IsStartDateEditable)
        @Html.HiddenFor(model => model.IsEndDateEditable)

        <div class="form-group">
            @Html.LabelFor(model => model.GstCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DisplayFor(model => model.GstCode, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GstRate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @if (Model.IsRateEditable)
                {
                    @Html.EditorFor(model => model.GstRate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.GstRate, "", new { @class = "text-danger" })
                }
                else
                {
                    @Html.EditorFor(model => model.GstRate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                }

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EffectiveStartDateAsText, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @if (Model.IsStartDateEditable)
                {
                    <input data-format="dd-MM-yyyy" type="text" name="EffectiveStartDateAsText"
                           class="form-control justDate" value="@Model.EffectiveStartDateAsText" />
                    @Html.ValidationMessageFor(model => model.EffectiveStartDateAsText, "", new { @class = "text-danger" })

                }
                else
                {
                    @Html.EditorFor(model => model.EffectiveStartDateAsText, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EffectiveEndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @if (Model.IsEndDateEditable)
                {
                    <input data-format="dd-MM-yyyy" type="text" name="EffectiveEndDateAsText"
                           class="form-control justDate" value="@Model.EffectiveEndDateAsText" />
                    @Html.ValidationMessageFor(model => model.EffectiveEndDateAsText, "", new { @class = "text-danger" })
                }
                else
                {
                    @Html.EditorFor(model => model.EffectiveEndDateAsText, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                }
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @if (Model.IsEndDateEditable || Model.IsStartDateEditable || Model.IsRateEditable)
                {
                    <input type="submit" value="Save" class="btn btn-success" id="popupSaveButton" />
                }
                else
                {
                    <input type="submit" value="Save" class="btn btn-success" id="popupSaveButton" disabled="disabled" />
                }
            </div>
        </div>
    </div>
}

@{
    Html.RenderPartial("_CodeSnippetPopupCancelLink");
}

