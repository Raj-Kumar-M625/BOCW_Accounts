@{
    ViewBag.Title = "ShowBankAccountDetails";
    IEnumerable<DomainEntities.OfficeHierarchy> officeHierarchy = (IEnumerable<DomainEntities.OfficeHierarchy>)ViewBag.OfficeHierarchy;
    System.Text.StringBuilder sb = new System.Text.StringBuilder();
}

<h2>Bank Accounts</h2>

<div class="well">
    <div class="row">
        <div class="col-sm-2">
            <div class="form-group">
                <label>Area Name</label>
                <select class="form-control" id="AreaName">
                    <option value="0">Select Area</option>
                    @foreach (var o in (IEnumerable<DomainEntities.CodeTableEx>)ViewBag.Areas)
                    {
                        <option value="@o.Code">@o.CodeName</option>
                    }
                </select>
            </div>
        </div>

        <div class="col-sm-2">
            <div class="form-group">
                <label>Bank Name</label>
                <input type="text" class="form-control" id="BankName" />
            </div>
        </div>

        <div class="col-sm-2">
            <div class="form-group">
                <label>&nbsp;</label>
                <input type="button" id="btnSearch" value="Search" class="form-control btn-success" />
            </div>
        </div>
    </div>
</div>

<div id="dataArea">
</div>

<script type="text/javascript">
    // Office Hierarchy object
        @Html.Raw("var OfficeHierarchy =[];")

        @foreach(var oh in officeHierarchy)
        {
            sb.AppendLine("var joh = { };");

            sb.AppendLine($"joh.AreaName = '{oh.AreaName}';");
            sb.AppendLine("OfficeHierarchy.push(joh);");
        }
    @Html.Raw(sb.ToString());


</script>
@section scripts{
    <script>
        $(document).ready(
            function () {
                $("#btnSearch").off('click').on('click', btnSearchClicked);
                 
                // once user changes selection boxes, clear results area;
                $('Select').change(function () { ClearResults(); });
                $('input').change(function () { ClearResults(); });
                $('#AreaName').change(function () { AreaSelectionChanged(); })
            });

        //Search buuton
        var btnSearchClicked = function (event) {
            DisableSearchButton();

            var searchCriteria = CaptureSearchCriteria();
            //alert(JSON.stringify(searchCriteria));

            $('#dataArea').html('<p>Please wait...</p>');
            $.ajax('/Admin/GetBankAccounts', {
                cache: false,
                type: "Get",
                contentType: "application/json",
                data: searchCriteria,
                success: function (data, textStatus, jqXHR) {
                    $('#dataArea').html(data);

                    if (document.getElementById("downloadLinkArea") != null) {
                        // create link to download the data as excel
                        // do some text replacements - remove links etc.
                        var dataToSave = data.replace(/<a.*\">/g, "").replace(/<\/a>/g, "");
                        // Checked check box to be turned into 'Yes'
                        dataToSave = dataToSave.replace(/<input checked=\"checked\" class=\"check-box\" disabled=\"disabled\" type=\"checkbox\" \/>/g, "Yes");

                        // now create html and remove header row from downloadable data
                        var $dataAsHtml = $(dataToSave);
                        $dataAsHtml.find("#dataTableHeader").remove();
                        // remove all rows that are there to show order details inline
                        // it will be there only for orders;
                        // $dataAsHtml.find(".orderDetailRow").remove();
                        dataToSave = $('<div>').append($dataAsHtml).html();

                        var blob = new Blob([dataToSave], { type: "application/x-msexcel" });
                        var url = URL.createObjectURL(blob);

                        var a = document.createElement('a');
                        a.download = "DownloadReport.xls";
                        a.href = url;
                        a.textContent = "Download as Excel";

                        document.getElementById("downloadLinkArea").appendChild(a);
                    }
                    $(".editInPopup").off('click').on('click', editPopupLinkClicked);
                    $(".addInPopup").off('click').on('click', addPopupLinkClicked);

                    EnableSearchButton();
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert("An error occured while getting data matching your search criteria.")
                    EnableSearchButton();
                }
            });
        }

        function CaptureSearchCriteria() {
            var searchCriteria = {}; 
            searchCriteria.AreaCode = $("#AreaName").val();
            searchCriteria.BankName = $("#BankName").val();
            return searchCriteria;
        }

        function DisableSearchButton() {
            $("#btnSearch").hide();
        }

        function EnableSearchButton() {
            $("#btnSearch").show();
        }

        function ClearResults() {
            $('#dataArea').html('');
        }

        function AreaSelectionChanged() {
          
            // get current value of Zone
            var selectedArea = $("#AreaName").val();
        }
    </script>
}