@model IEnumerable<ActivityMapDataModel>

@{
    ViewBag.Title = "Activity";
    var employeeName = ViewBag.EmployeeName;
    var headerString = $"{ViewBag.ActivityDate.ToString("ddd MMM dd, yyyy")}: {ViewBag.EmployeeName}'s activities";

    var mapPoints = Model.Select(x => new MapPointModel()
    {
        Latitude = x.Latitude,
        Longitude = x.Longitude,
        Description = x.ClientName
    }).ToList();

    string googleMapApiKey = CRMUtilities.Utils.GoogleMapApiKey;
}

<h2>@headerString</h2>

<table class="table">
    <tr>
        <th>
            &nbsp;
        </th>
        <th>
            &nbsp;
        </th>
        <th colspan="6" style="border-bottom:1px solid black; text-align:center;">
            Customer Details
        </th>
        <th width="20%">
            &nbsp;
        </th>
        <th>&nbsp;</th>
        <th>&nbsp;</th>
    </tr>

    <tr>
        <th>&nbsp;</th>
        <th>
            @Html.DisplayNameFor(model => model.At)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ClientType)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ActivityType)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ClientName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ClientPhone)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ActivityAmount)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.AtLocation)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Comments)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ImageCount)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ContactCount)
        </th>
    </tr>

    @foreach (var item in Model)
    {
        string guidForAdditionalRow = Guid.NewGuid().ToString();
        string guidForAdditionalCellHead = Guid.NewGuid().ToString();
        string guidForAdditionalCell = Guid.NewGuid().ToString();

        string activityImage = $"ActivityType_{item.ActivityTrackingType:00}.png";

    <tr>
        <td>
            @if (item.ActivityTrackingType > 0)
            {
                <img height="40" width="40" src="~/Content/img/ActivityImages/@activityImage" />
            }
        </td>

        <td>
            @Html.DisplayFor(modelItem => item.At)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ClientType)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ActivityType)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ClientName)
        </td>
        <td>
            @if (!(string.IsNullOrEmpty(item.ClientPhone) || item.ClientPhone == "0"))
            {
            <p>+91 @Html.DisplayFor(modelItem => item.ClientPhone)</p>
            }
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ActivityAmount)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.AtLocation)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Comments)
        </td>
        <td>
            @if (item.ImageCount > 0)
            {
                <a href="" onclick="DisplayImage(@item.ActivityId, @item.ImageCount);return false;">Image</a>
            }
        </td>
        <td>
            @if (item.ContactCount > 0)
            {
                <a href="" title="Show Contacts" onclick="additionalAnchorClicked('@guidForAdditionalRow', '@guidForAdditionalCell', '@guidForAdditionalCellHead', '@item.ActivityId', 'Contacts'); return false;">@item.ContactCount</a>
            }
            else
            {
                @Html.DisplayFor(modelItem => item.ContactCount)
            }
        </td>
    </tr>
        <tr class="customerRow" id="@guidForAdditionalRow" style="display:none;">
            <td style="border-top:none;font-weight:bold;" id="@guidForAdditionalCellHead"></td>
            <td style="border-top:none;" id="@guidForAdditionalCell" colspan="13">&nsbp;</td>
        </tr>
    }
</table>

<div id="imageDisplayArea">
    <hr />
</div>


<div class="well">
    <div class="row">
        <div class="col-sm-2">
            <input type="button" id="btnShowMap" value="Show Map" class="form-control btn-info" />
        </div>
    </div>
</div>

@Html.Partial("_MapPoints", mapPoints)

@section mapScripts{
    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=@googleMapApiKey&sensor=false"></script>
}

@section scripts{
    <script>
        $(document).ready(
            function () {
                $("#imageDisplayArea").hide();
                $("#btnShowMap").off('click').on('click', ShowMapClicked);
            }
        );

        var ShowMapClicked = function (event) {
            $(".well").hide();
            DrawMap();
        }

        var isProcessing = false;
        function DisplayImage(id, imageCount) {
            if (isProcessing) {
                return;
            }
            isProcessing = true;

            var imagesRetrieved = 0;

            $("#imageDisplayArea").show();
            $('#imageDisplayArea').html('<p>Please wait...</p>');

            for (i = imageCount; i > 0; i--) {
                var xhr = new XMLHttpRequest();
                xhr.onreadystatechange = function () {
                    if (this.readyState == 4 && this.status == 200) {
                        var reader = new window.FileReader();
                        reader.readAsDataURL(this.response);
                        reader.onloadend = function () {
                            imagesRetrieved++;
                            $('#imageDisplayArea').append('<img style="margin-left:20px;" height="300px" width="auto" src="' + reader.result + '"/>');
                            if (imagesRetrieved == imageCount) // last image processed
                            {
                                $('#imageDisplayArea p').remove();
                                $('#imageDisplayArea').append('<hr/>');
                                isProcessing = false;
                            }
                        }
                    }
                }
                xhr.open('GET', '/Dashboard/ActivityImage?ActivityId=' + id + '&imageItem=' + i);
                xhr.responseType = 'blob';
                xhr.send();
            }
        }

        var openContactBlocks = {};
        function additionalAnchorClicked(rowGuid, targetGuid, targetGuidHead, activityId, displayStringHead) {
            if (openContactBlocks[rowGuid] === undefined || openContactBlocks[rowGuid] === '') // never opened or closed after open
            {
                openContactBlocks[rowGuid] = displayStringHead;  // first time click
                $('#' + rowGuid).show();
                $('#' + targetGuidHead).html('<p>' + displayStringHead + '</p>');
                $('#' + targetGuid).html('<p>Please wait</p>');
                var uri = '/Dashboard/ShowActivity' + displayStringHead;
                $.ajax(uri, {
                    cache: false,
                    type: "Get",
                    contentType: "application/json",
                    data: { 'activityId': activityId },
                    success: function (data, textStatus, jqXHR) {
                        $('#' + targetGuid).html(data);
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        alert("An error occured while getting Association data.")
                    }
                });
            }
            else // already open - close it now;
            {
                $('#' + rowGuid).hide();
                openContactBlocks[rowGuid] = '';
            }
        }

    </script>
}
