@model IEnumerable<EpicCrmWebApi.IssueReturnModel>

@{
    int itemCount = (Model != null) ? Model.Count() : 0;
}


<table class="table table-bordered table-striped table-condensed" id="dataTable">
    <tr id="dataTableHeader">
        <td colspan="2" id="downloadLinkArea">&nbsp;</td>
        <td colspan="24" style="text-align:left;">
            <a href="" title="Refresh Search Result" onclick="btnSearchClicked();return false;">
                <img height="25" width="25" src="~/Content/img/refresh.png" />
            </a>&nbsp;<strong>
                Total @itemCount Items<a href="/Dashboard/AddIssueReturns" title="Add Issues/Return" class="addInPopup">
                    <img height="15" width="15" src="~/Content/img/Add.png" />
                </a>
            </strong>
        </td>
    </tr>

    <tr>
        <th class="removeFromDownload">&nbsp;</th>
        <th>
            @Html.DisplayNameFor(model => model.TransactionDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.EmployeeCode)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.EmployeeName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Phone)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.WorkflowSeasonName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TypeName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.AgreementNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.EntityType)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.EntityName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SlipNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TransactionType)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ItemType)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ItemCode)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Quantity)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ItemUnit)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ItemRate)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.AppliedTransactionType)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.AppliedItemType)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.AppliedItemCode)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.AppliedQuantity)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.AppliedItemUnit)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.AppliedItemRate)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.Status)
        </th>

        <th>
            Amount (Rs.)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.Comments)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CreatedBy)
        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td class="removeFromDownload">
                @if (item.IsPending)
                {
                    <a href="/Dashboard/EditIssueReturn?issueReturnId=@item.Id" title="Edit" class="editInPopup">
                        <img height="35" width="35" src="~/Content/img/Edit.png" />
                    </a>
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TransactionDate, "DatetimeDate")
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EmployeeCode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EmployeeName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Phone)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.WorkflowSeasonName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TypeName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AgreementNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EntityType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EntityName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SlipNumber)
            </td>
            <td>
                @if (item.ActivityId > 0)
                {
                    @Html.ActionLink(item.TransactionType, "ActivityOne", new { activityId = item.ActivityId }, new { @class = "c_activityLink", target = "_new" })
                }
                else
                {
                    @Html.DisplayFor(modelItem => item.TransactionType)
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ItemType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ItemCode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quantity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ItemUnit)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ItemRate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AppliedTransactionType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AppliedItemType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AppliedItemCode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AppliedQuantity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AppliedItemUnit)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AppliedItemRate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.ItemValue)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.Comments)
            </td>
            <td>
                @if (item.CreatedBy == "ProcessSqliteAgreementData")
                {
                    <p>MyDay User</p>
                }
                else
                {
                    @Html.DisplayFor(modelItem => item.CreatedBy)
                }
            </td>
        </tr>
    }
</table>
