@model TerminateAgreementRequestModel
@{
    IEnumerable<DomainEntities.CodeTableEx> headQuarters = ViewBag.HeadQuarters;
    IEnumerable<DomainEntities.CodeTableEx> redFarmerRequestStatus = ViewBag.RedFarmerRequestStatus;
}

@using (Html.BeginForm("ApproveTerminateAgreementRequest", "Dashboard", FormMethod.Post, new { Id = "popupForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <span style="font-size:large;">Terminate Red Farmer</span>

        <hr />
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.EntityAgreementId)
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.EntityName)
        @Html.HiddenFor(model => model.AgreementNumber)
        @Html.HiddenFor(model => model.Crop)
        @Html.HiddenFor(model => model.RedFarmerReqReason)


        <table class="table table-bordered table-striped table-condensed">
            <thead>
                <tr>
                    <th>@Html.LabelFor(model => model.EntityName, htmlAttributes: new { @class = "control-label col-md-2" })</th>
                    <th>@Html.LabelFor(model => model.AgreementNumber, htmlAttributes: new { @class = "control-label col-md-2" })</th>
                    <th>@Html.LabelFor(model => model.Crop, htmlAttributes: new { @class = "control-label col-md-2" })</th>
                    <th>@Html.LabelFor(model => model.RedFarmerReqReason, htmlAttributes: new { @class = "control-label col-md-2" })</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>@Html.DisplayFor(model => model.EntityName)</td>
                    <td>@Html.DisplayFor(model => model.AgreementNumber)</td>
                    <td>
                        @Html.DisplayFor(model => model.Crop)
                    </td>
                    <td>@Html.DisplayFor(model => model.RedFarmerReqReason)</td>
                </tr>
                <tr>
                    <th>@Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-2" })</th>
                    <td colspan="3">
                        @Html.DisplayFor(model => model.Notes)
                    </td>
                </tr>
            </tbody>
        </table>

        <div class="form-group" style="padding:10px">
            @if (!Model.RedFarmerReqStatus.Equals("approved", StringComparison.OrdinalIgnoreCase))
            {
                <label class="control-label col-md-2">Terminate Red Farmer ?</label>
                <div class="col-md-4">
                    <select class="form-control" id="selStatus" name="RedFarmerReqStatus">
                        @foreach (var o in redFarmerRequestStatus.OrderBy(x => x.DisplaySequence))
                        {
                            <option value="@o.Code">@o.CodeName</option>
                        }
                    </select>
                </div>
            }
            else
            {
                <label class="control-label col-lg-pull-5">Request has been reviewed On </label>
                @Html.DisplayFor(model => model.ReviewDate, new { htmlAttributes = new { @class = "form-control" } })
            }

        </div>

        <div class="form-group">
            <div class="col-md-offset-5 col-md-4">
                <input type="submit" value="Save" class="btn btn-success" id="popupSaveButton" />
            </div>
        </div>
    </div>
}

@{
    Html.RenderPartial("_CodeSnippetPopupCancelLink");
}

