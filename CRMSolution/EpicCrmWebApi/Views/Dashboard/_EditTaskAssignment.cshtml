@model TaskAssignmentModel
@{

    IEnumerable<DomainEntities.SalesPersonModel> salesPersons = (IEnumerable<DomainEntities.SalesPersonModel>)ViewBag.SalesPersons;

    string title = "";
    if (Model.Id > 0)
    {
        title = "Edit Assignment";
        //Model.EmployeeName = Model.EmployeeName + " (" + Model.EmployeeCode + ")";
    }
    else
    {
        title = "Add Assignment";
    }
}


@using (Html.BeginForm("EditTaskAssignment", "Dashboard", FormMethod.Post, new { Id = "popupForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <span style="font-size:large;">@title</span>
        <hr />
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.XRefTaskId)
        @Html.HiddenFor(model => model.IsSelfAssigned)

        <div class="form-group">
            <div>
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @readonly = "true", @id = "idDescription" } })
                </div>
            </div>
            <div>
                @Html.LabelFor(model => model.EmployeeName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    <select class="form-control" id="selEmployeeName" name="EmployeeCode">
                        <option value="" selected>Select Employee</option>
                        @foreach (var o in salesPersons)
                        {
                            if (Model.EmployeeCode == o.StaffCode)
                            {
                                <option selected value="@o.StaffCode">@o.Name (@o.StaffCode)</option>
                            }
                            else
                            {
                                <option value="@o.StaffCode">@o.Name (@o.StaffCode)</option>
                            }
                        }
                    </select>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div>
                @Html.LabelFor(model => model.StartDateAsText, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    <input data-format="dd-MM-yyyy" type="text" name="StartDateAsText"
                           class="form-control justDate" value="@Model.StartDateAsText" />
                    @Html.ValidationMessageFor(model => model.StartDateAsText, "", new { @class = "text-danger" })
                </div>
            </div>
            <div>
                @Html.LabelFor(model => model.EndDateAsText, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    <input data-format="dd-MM-yyyy" type="text" name="EndDateAsText"
                           class="form-control justDate" value="@Model.EndDateAsText" />
                    @Html.ValidationMessageFor(model => model.EndDateAsText, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        <div class="form-group">
            <div>
                @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    <textarea name="Comments" rows="2" cols="60" class="form-control">@Model.Comments</textarea>
                    @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div>
                @Html.LabelFor(model => model.IsAssigned, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.IsAssigned)
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-5 col-md-4">
                <input type="submit" value="Save" class="btn btn-success" id="popupSaveButton" />
            </div>
        </div>
    </div>
}

@{
    Html.RenderPartial("_CodeSnippetPopupCancelLink");
}
