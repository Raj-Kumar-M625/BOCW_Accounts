@model FollowUpTaskEntity
@{
    //IEnumerable<DomainEntities.CodeTableEx> clientType = (List<DomainEntities.CodeTableEx>)ViewBag.ClientType;
    //IEnumerable<DomainEntities.CodeTableEx> headQuarters = ViewBag.HeadQuarters;
    IEnumerable<DomainEntities.Entity> entities = ViewBag.Entities;

    string title = "Select Client";
}


@using (Html.BeginForm("SaveFollowUpTaskEntity", "Dashboard", FormMethod.Post, new { Id = "popupForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <span style="font-size:large;">@title</span>
        <hr />
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.HQCode)
        @Html.HiddenFor(model => model.ClientType)

        <div class="form-group">
            <div>
                @Html.LabelFor(model => model.ClientNameOld, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.ClientNameOld, new { htmlAttributes = new { @class = "form-control", @readonly = "true", @id = "idClientNameOld" } })
                </div>
            </div>
            <div>
                @Html.LabelFor(model => model.ClientCodeOld, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.ClientCodeOld, new { htmlAttributes = new { @class = "form-control", @readonly = "true", @id = "idClientCodeOld" } })
                </div>
            </div>
        </div>


        <div class="form-group">
            <div>
                @Html.LabelFor(model => model.ClientType, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.ClientType, new { htmlAttributes = new { @class = "form-control", @readonly = "true", @id = "idClientType" } })
                </div>
            </div>

            <div>
                @Html.LabelFor(model => model.ClientName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    <select class="form-control"  id="selClientCode" name="ClientCode">
                        @foreach (var o in entities)
                        {
                            if (o.Id.ToString().Equals(Model.ClientCode, StringComparison.OrdinalIgnoreCase))
                            {
                                <option value="@o.Id" selected>@o.EntityName (@o.Id)</option>
                            }
                            else
                            {
                                <option value="@o.Id">@o.EntityName (@o.Id)</option>
                            }
                        }
                    </select>
                </div>
            </div>
        </div>
        
        @*<br />*@

        <div class="form-group">
            <div class="col-md-offset-5 col-md-4">
                <input type="submit" value="Save" class="btn btn-success" id="popupSaveButton" />
            </div>
        </div>
    </div>
}

@{
    Html.RenderPartial("_CodeSnippetPopupCancelLink");
}

