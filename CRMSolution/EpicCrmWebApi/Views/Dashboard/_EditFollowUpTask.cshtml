@model FollowUpTaskViewModel
@{
    //IEnumerable<DomainEntities.CodeTableEx> clientType = (List<DomainEntities.CodeTableEx>)ViewBag.ClientType;
    IEnumerable<DomainEntities.CodeTableEx> activityType = (List<DomainEntities.CodeTableEx>)ViewBag.ActivityType;
    IEnumerable<DomainEntities.CodeTableEx> taskStatus = (List<DomainEntities.CodeTableEx>)ViewBag.TaskStatus;
    IEnumerable<DomainEntities.Projects> projectNames = ViewBag.Projects;

    string title = "";
    if (Model.Id > 0)
    {
        title = "Edit FollowUp/Task";
    }
    else
    {
        title = "Add FollowUp/Task";
    }
}


@using (Html.BeginForm("EditFollowUpTask", "Dashboard", FormMethod.Post, new { Id = "popupForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <span style="font-size:large;">@title</span>
        <hr />
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.ClientType)
        @Html.HiddenFor(model => model.ClientName)
        @Html.HiddenFor(model => model.ClientCode)
        @Html.HiddenFor(model => model.ActualStartDate)
        @Html.HiddenFor(model => model.ActualEndDate)
        @Html.HiddenFor(model => model.CyclicCount)



        <div class="form-group">
            <div>
                @Html.LabelFor(model => model.ProjectName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    <select class="form-control" id="selProjectName" name="XRefProjectId">
                        @*<option value="" selected>Select Project</option>*@
                        @foreach (var o in projectNames)
                        {
                            if (Model.XRefProjectId == o.Id)
                            {
                                <option selected value="@o.Id">@o.Name</option>
                            }
                            else
                            {
                                <option value="@o.Id">@o.Name</option>
                            }
                        }
                    </select>
                </div>
            </div>
            <div>
                @Html.LabelFor(model => model.ActivityType, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    <select class="form-control" id="selActivityType" name="ActivityType">
                        <option value="" selected>Select Activity Type</option>
                        @foreach (var o in activityType)
                        {
                            if (Model.ActivityType == o.Code)
                            {
                                <option selected value="@o.Code">@o.Code</option>
                            }
                            else
                            {
                                <option value="@o.Code">@o.Code</option>
                            }
                        }
                    </select>
                </div>
            </div>
        </div>

        @*<div class="form-group">
            <div>
                @Html.LabelFor(model => model.ClientType, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    <select class="form-control" id="selClientType" name="ClientType">
                        <option value="" selected>Select Client Type</option>
                        @foreach (var o in clientType)
                        {
                            if (Model.ClientType == o.Code)
                            {
                                <option selected value="@o.Code">@o.Code</option>
                            }
                            else
                            {
                                <option value="@o.Code">@o.Code</option>
                            }
                        }
                    </select>
                </div>
            </div>
            <div>
                @Html.LabelFor(model => model.ClientName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.ClientName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ClientName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>*@

        <div class="form-group">
            <div>
                @Html.LabelFor(model => model.PlannedStartDateAsText, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    <input data-format="dd-MM-yyyy" type="text" name="PlannedStartDateAsText"
                           class="form-control justDate" value="@Model.PlannedStartDateAsText" />
                    @Html.ValidationMessageFor(model => model.PlannedStartDateAsText, "", new { @class = "text-danger" })
                </div>
            </div>
            <div>
                @Html.LabelFor(model => model.PlannedEndDateAsText, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    <input data-format="dd-MM-yyyy" type="text" name="PlannedEndDateAsText"
                           class="form-control justDate" value="@Model.PlannedEndDateAsText" />
                    @Html.ValidationMessageFor(model => model.PlannedEndDateAsText, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        <div class="form-group">
            <div>
                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    <select class="form-control" id="selProjectStatus" name="Status">
                        <option value="" selected>Select Status</option>
                        @foreach (var o in taskStatus)
                        {
                            if (Model.Status == o.Code)
                            {
                                <option selected value="@o.Code">@o.Code</option>
                            }
                            else
                            {
                                <option value="@o.Code">@o.Code</option>
                            }
                        }
                    </select>
                </div>
            </div>
            <div>
                @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.IsActive)
                </div>
            </div>
        </div>

        <div class="form-group">
            <div>
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    <textarea name="Description" rows="1" cols="60" class="form-control">@Model.Description</textarea>
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div>
                @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    <textarea name="Comments" rows="2" cols="60" class="form-control">@Model.Comments</textarea>
                    @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-5 col-md-4">
                <input type="submit" value="Save" class="btn btn-success" id="popupSaveButton" />
            </div>
        </div>
    </div>
}

@{
    Html.RenderPartial("_CodeSnippetPopupCancelLink");
}

