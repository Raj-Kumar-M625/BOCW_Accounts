@model IEnumerable<DomainEntities.TrackingRecord>
@using System.Linq
@using System

@{
    ViewBag.Title = "Tracking";
    var employeeName = ViewBag.EmployeeName;
    var totalBingDistance = Model.Where(x=> x.BingMapsDistanceInMeters > 0).Sum(x => x.BingMapsDistanceInMeters);
    var totalGoogleDistance = Model.Where(x=> x.GoogleMapsDistanceInMeters > 0).Sum(x => x.GoogleMapsDistanceInMeters);
    var totalLinearDistance = Model.Sum(x => x.LinearDistanceInMeters);

    var headerString = $"{ViewBag.ActivityDate.ToString("ddd MMM dd, yyyy")}: {ViewBag.EmployeeName}'s tracking.";
    string displayString = "";
    string rowStyle = "";

    var mapPoints = Model
        .Where(x => (x.EndLatitude > 0 && x.EndLongitude > 0))
        .Select(x => new MapPointModel()
    {
        Latitude = x.EndLatitude,
        Longitude = x.EndLongitude,
        Description = $"[{x.At.ToString("hh:mm tt")}] {x.EndLocationName}" // x.EndLatitude.ToString() + "," + x.EndLongitude.ToString()
    }).ToList();

    string googleMapApiKey = CRMUtilities.Utils.GoogleMapApiKey;
}

<h2>@headerString</h2>

<table class="table">
    <tr>
        <th colspan="4">&nbsp;</th>
        <th colspan="2" style="border-bottom:1px solid black; text-align:center;">
            Distance Calculated (Meters)</th>
        <th colspan="3">&nbsp;</th>
    </tr>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.At)
        </th>
        <th>&nbsp;</th>
        <th>
            @Html.DisplayNameFor(model => model.BeginLatitude)
        </th>
        <th>@Html.DisplayNameFor(model => model.EndLatitude)
        </th>
        @*<th>
            @Html.DisplayNameFor(model => model.BingMapsDistanceInMeters)
        </th>*@
        <th>
            @Html.DisplayNameFor(model => model.GoogleMapsDistanceInMeters)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LinearDistanceInMeters)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Id)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DistanceCalculated)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LockTimeStamp)
        </th>
    </tr>

    <tr>
        <th colspan="4">&nbsp;        
        </th>
        @*<th>
            @(String.Format("{0:0.00} km", totalBingDistance / 1000))
        </th>*@
        <th>
            @(String.Format("{0:0.00} km", totalGoogleDistance / 1000))
        </th>
        <th>
            @(String.Format("{0:0.00} km", totalLinearDistance / 1000))
        </th>
        <th colspan="3">
        </th>
    </tr>


@foreach (var item in Model)
{
    if( item.IsStartOfDay || item.IsEndOfDay || item.ActivityId > 0)
    {
        rowStyle = "font-weight:bold;";
        if( item.IsStartOfDay)
        {
            rowStyle += "color:green;";
        }
        else if (item.IsEndOfDay)
        {
            rowStyle += "color:red;";
        }
        else if (item.ActivityId > 0)
        {
            rowStyle += "color:blue;";
        }
    }
    else
    {
        rowStyle = "font-size:x-small;";
    }
    <tr style=@rowStyle>
        <td>
            @Html.DisplayFor(modelItem => @item.At)
        </td>
        <td>
            @if(item.ActivityId > 0)
            {
                @Html.ActionLink(@item.ActivityType, "Activity", new { employeeDayId = ViewBag.EmployeeDayId }, new { @class = "c_activityLink" });
            }
            else if (item.IsStartOfDay)
            {
                @("Start")
            }
            else if (item.IsEndOfDay)
            {
                @("End")
            }
            else
            {
                @("")
            }
        </td>

        <td title="@item.BeginCoorindates">
            @item.BeginLocationName ( @item.BeginCoorindates )
        </td>
        <td title="@item.EndCoorindates">
            @item.EndLocationName ( @item.EndCoorindates )
        </td>
        @*<td>
            @if (item.BingApiErrorId == 0)
            {
                @(String.Format("{0:0.00}", item.BingMapsDistanceInMeters))
            }
            else
            {
                @Html.ActionLink(String.Format("{0:0.00}", item.BingMapsDistanceInMeters), "TrackingLog", new { trackingLogId = item.BingApiErrorId })
            }
        </td>*@
        <td>
            @if (item.GoogleApiErrorId == 0)
            {
                @(String.Format("{0:0.00}", item.GoogleMapsDistanceInMeters))
            }
            else
            {
                displayString = String.Format("{0:0.00}", item.GoogleMapsDistanceInMeters);
                @Html.ActionLink(displayString, "TrackingLog", new { trackingLogId = item.GoogleApiErrorId })
            }
        </td>
        <td>
            @(String.Format("{0:0.00}", item.LinearDistanceInMeters))
        </td>
        <td>
            @item.DisplayRecordId
        </td>
        <td>
            @Html.DisplayFor(modelItem=> item.DistanceCalculated)
        </td>
        <td>
            @item.DisplayLockTime
        </td>
    </tr>
}
</table>

<div class="well">
    <div class="row">
        <div class="col-sm-2">
            <input type="button" id="btnShowMap" value="Show Map" class="form-control btn-info" />
        </div>
    </div>
</div>


@Html.Partial("_ActivityMap", mapPoints)

@section mapScripts{
    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=@googleMapApiKey&sensor=false"></script>
}

@section scripts{
    <script>
        $(document).ready(
            function () {
                $("#btnShowMap").off('click').on('click', ShowMapClicked);
            }
        );

        var ShowMapClicked = function (event) {
            $(".well").hide();
            DrawMap();
        }
    </script>
}
