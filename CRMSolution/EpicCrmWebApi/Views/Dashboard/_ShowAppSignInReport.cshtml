@model AppSignInReportModel  

@{ 
    IEnumerable<AppSignInReportDataModel> reportData = Model.AppSignInReportData
                                                    .Where(x => x.HasSignedUpBeforeReportEndDate);

    IEnumerable<OfficeHierarchyModel> officeHierarchy = Model.OfficeHierarchy;
    OfficeHierarchyModel oh = null;

    long peopleSignedInAtleastOnce = reportData.Count(x => x.DaysActive > 0);
    long inactivePeopleCount = reportData.Count(x => !x.IsActive);
    long activePeopleCount = reportData.Count(x => x.IsActive);

    long totalActivePeopleCount = Model.AppSignInReportData.Count(x => x.IsActive);
    long totalInActivePeopleCount = Model.AppSignInReportData.Count(x => !x.IsActive);
}

<table class="table table-bordered table-striped table-condensed">
    <tr id="dataTableHeader">
        <td colspan="2" id="downloadLinkArea">&nbsp;</td>
        <td colspan="8">Report Period: @peopleSignedInAtleastOnce of @reportData.Count() People signed in |
        @activePeopleCount Active |
        @inactivePeopleCount In-Active
        </td>
        <td colspan="4">
            Present: @totalActivePeopleCount Active |
            @totalInActivePeopleCount In-Active
        </td>
    </tr>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.AppSignInReportData.First().StaffCode)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.AppSignInReportData.First().Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.AppSignInReportData.First().Phone)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.AppSignInReportData.First().DaysActive)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.AppSignInReportData.First().IsActive)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.AppSignInReportData.First().SignupDate)
        </th>

        <th>@Html.DisplayNameFor(model => model.OfficeHierarchy.First().ZoneCode)</th>
        <th>@Html.DisplayNameFor(model => model.OfficeHierarchy.First().ZoneName)</th>
        <th>@Html.DisplayNameFor(model => model.OfficeHierarchy.First().AreaCode)</th>
        <th>@Html.DisplayNameFor(model => model.OfficeHierarchy.First().AreaName)</th>
        <th>@Html.DisplayNameFor(model => model.OfficeHierarchy.First().TerritoryCode)</th>
        <th>@Html.DisplayNameFor(model => model.OfficeHierarchy.First().TerritoryName)</th>
        <th>@Html.DisplayNameFor(model => model.OfficeHierarchy.First().HQCode)</th>
        <th>@Html.DisplayNameFor(model => model.OfficeHierarchy.First().HQName)</th>
    </tr>

@foreach (var item in reportData) {
    oh = officeHierarchy.Where(x => x.HQCode == item.ExpenseHQCode).FirstOrDefault();
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.StaffCode)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Phone, "Phone")
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DaysActive)
        </td>

        <td class="EmployeeStatus_@item.IsActive.ToString()">
            @Html.DisplayFor(modelItem=> item.IsActive)
        </td>

        <td>
            @Html.DisplayFor(modelItem => item.SignupDate, "DateTimeShort")
        </td>

        @if (oh != null)
        {
            <td>@oh.ZoneCode</td>
            <td>@oh.ZoneName</td>
            <td>@oh.AreaCode</td>
            <td>@oh.AreaName</td>
            <td>@oh.TerritoryCode</td>
            <td>@oh.TerritoryName</td>
            <td>@oh.HQCode</td>
            <td>@oh.HQName</td>
        }
        else
        {
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
        }
    </tr>
}
</table>
