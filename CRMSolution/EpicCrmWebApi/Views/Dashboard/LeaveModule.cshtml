  @{
    IEnumerable<DomainEntities.CodeTableEx> leaveTypes = ViewBag.LeaveType;
    IEnumerable<DomainEntities.CodeTableEx> leaveStatus = ViewBag.BankDetailStatus;

    IEnumerable<DomainEntities.OfficeHierarchy> officeHierarchy = (IEnumerable<DomainEntities.OfficeHierarchy>)ViewBag.OfficeHierarchy;
    System.Text.StringBuilder sb = new System.Text.StringBuilder();

}
@{
    Html.RenderPartial("_CodeSnippetPageHeader", "Leaves");
}

<div class="well" id="idSearchWell">
    <div class="row">
        <div class="col-sm-2">
            <div class="form-group">
                <label>Zone</label>
                <select class="form-control" id="selZone">
                    <option value="All">All</option>
                </select>
            </div>
        </div>
        <div class="col-sm-2">
            <div class="form-group">
                <label>Area</label>
                <select class="form-control" id="selArea">
                    <option value="All">All</option>
                </select>
            </div>
        </div>
        <div class="col-sm-2">
            <div class="form-group">
                <label>Territory</label>
                <select class="form-control" id="selTerritory">
                    <option value="All">All</option>
                </select>
            </div>
        </div>
        <div class="col-sm-2">
            <div class="form-group">
                <label>HQ</label>
                <select class="form-control" id="selHQ">
                    <option value="All">All</option>
                </select>
            </div>
        </div>
        <div class="col-sm-2">
            <div class="form-group">
                <label>Leave Type</label>
                <select class="form-control" id="selLeaveType">
                    <option value="All">All</option>
                    @foreach (var o in leaveTypes)
                    {
                        <option value="@o.Code">@o.Code</option>
                    }
                </select>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-2">
            <div class="form-group">
                <label> Leave Duration</label>
                <input type="text" class="form-control" id="leaveDuration" />
            </div>
        </div>
        <div class="col-sm-2">
            <div class="form-group">
                <label>Employee Code</label>
                <input type="text" class="form-control" id="txtEmployeeCode" />
            </div>
        </div>
        <div class="col-sm-2">
            <div class="form-group">
                <label>Employee Name</label>
                <input type="text" class="form-control" id="txtEmployeeName" />
            </div>
        </div>
        <div class="col-sm-2">
            <div class="form-group">
                <label>From (dd-mm-yyyy)</label>
                <div class="input-append date">
                    <input data-format="dd-MM-yyyy" type="text" class="form-control justDate" id="txtFromDate" autocomplete="off" />
                    <span class="add-on">
                        <i data-time-icon="icon-time" data-date-icon="icon-calendar">
                        </i>
                    </span>
                </div>
            </div>
        </div>
        <div class="col-sm-2">
            <div class="form-group">
                <label>To (dd-mm-yyyy)</label>
                <div class="input-append date">
                    <input data-format="dd-MM-yyyy" type="text" class="form-control justDate" id="txtToDate" autocomplete="off" />
                    <span class="add-on">
                        <i data-time-icon="icon-time" data-date-icon="icon-calendar">
                        </i>
                    </span>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-2">
            <div class="form-group">
                <label>Status</label>
                <select class="form-control" id="Status">
                    <option value="0">All</option>
                    @foreach (var o in leaveStatus)
                    {
                        <option value="@o.Code">@o.Code</option>
                    }
                </select>
            </div>
        </div>
        <div class="col-sm-2">
            <div class="form-group">
                <label>&nbsp;</label>
                <input type="button" id="btnSearch" value="Search" class="form-control btn-success" />
            </div>
        </div>
    </div>
</div>
<div id="dataArea">
</div>

<script type="text/javascript">
    // Office Hierarchy object
        @Html.Raw("var OfficeHierarchy =[];")

        @foreach(var oh in officeHierarchy)
        {
            sb.AppendLine("var joh = { };");

            sb.AppendLine($"joh.ZoneCode = '{oh.ZoneCode}';");
            sb.AppendLine($"joh.ZoneName = '{oh.ZoneName}';");
            sb.AppendLine($"joh.AreaCode = '{oh.AreaCode}'; ");
            sb.AppendLine($"joh.AreaName = '{oh.AreaName}';");
            sb.AppendLine($"joh.TerritoryCode = '{oh.TerritoryCode}'; ");
            sb.AppendLine($"joh.TerritoryName = '{oh.TerritoryName}'; ");
            sb.AppendLine($"joh.HQCode = '{oh.HQCode}'; ");
            sb.AppendLine($"joh.HQName = '{oh.HQName}';");
            sb.AppendLine("OfficeHierarchy.push(joh);");
        }
    @Html.Raw(sb.ToString());

</script>

@section scripts{
    <script src="/Scripts/jquery.datetimepicker.js"></script>
    <script>
        $(document).ready(
            function () {
                ShowSearch();
                $("#btnSearch").off('click').on('click', btnSearchClicked);
                $("#showSearch").off('click').on('click', ShowSearch);

                // once user changes selection boxes, clear results area;
                $('Select').change(function () { ClearResults(); });
                $('input').change(function () { ClearResults(); });

                $('.justDate').datetimepicker({ inline: false, format: 'd-m-Y', timepicker: false, yearStart: 2017, yearEnd: 2099 });

                $('.justDate').attr({ 'placeholder': 'dd-mm-yyyy' });

                var endDate = Date.today();
                var startDate = Date.today().add(-5).days();
                $("#txtFromDate").val(startDate.toString('dd-MM-yyyy'));
                $("#txtToDate").val(endDate.toString('dd-MM-yyyy'));
                
                // zone/Area/Territory/HQ changed
                $('#selZone').change(function () { ZonesSelectionChanged(); })
                $('#selArea').change(function () { AreasSelectionChanged(); })
                $('#selTerritory').change(function () { TerritoriesSelectionChanged(); })

                var selectedObj = {};
                for (i = 0; i < OfficeHierarchy.length; i++) {
                    var o = OfficeHierarchy[i];
                    selectedObj[o.ZoneName] = o.ZoneCode;
                }
                Object.keys(selectedObj).sort().forEach(function (element) {
                    var opt = new Option(element, selectedObj[element]);
                    $('#selZone').append(opt);
                });
            });

        // Search button
        var btnSearchClicked = function (event) {
            DisableSearchButton();

            var searchCriteria = CaptureSearchCriteria();

            $('#dataArea').html(waitImage);

            $.ajax('GetDashboardLeaves', {
                cache: false,
                type: "Get",
                contentType: "application/json",
                data: searchCriteria,
                success: function (data, textStatus, jqXHR) {

                    $('#dataArea').html(data);

                    if (document.getElementById("downloadLinkArea") != null) {
                        // create link to download the data as excel
                        // do some text replacements - remove links etc.
                        var dataToSave = data.replace(/<a.*\">/g, "").replace(/<\/a>/g, "");
                        // Checked check box to be turned into 'Yes'
                        dataToSave = dataToSave.replace(/<input checked=\"checked\" class=\"check-box\" disabled=\"disabled\" type=\"checkbox\" \/>/g, "Yes");

                        // replace image tag
                        dataToSave = dataToSave.replace(/<img .*png\" \/>/g, "");

                        // now create html and remove header row from downloadable data
                        var $dataAsHtml = $(dataToSave);
                        $dataAsHtml.find("#dataTableHeader").remove();
                        $dataAsHtml.find("h3").remove();
                        $dataAsHtml.find("img").remove();
                        $dataAsHtml.find(".removeFromDownload").remove();

                        // remove all rows that are there to show order details inline
                        // it will be there only for orders;
                        //$dataAsHtml.find(".orderDetailRow").remove();
                        dataToSave = $('<div>').append($dataAsHtml).html();

                        var blob = new Blob([dataToSave], { type: "application/x-msexcel" });
                        var url = URL.createObjectURL(blob);

                        var m = document.createElement('img');
                        m.height = "25";
                        m.width = "25";
                        m.src = "/Content/img/download_3.png";

                        var a = document.createElement('a');
                        a.download = "DownloadReport.xls";
                        a.href = url;
                        a.title = "Download as Excel";
                        a.appendChild(m);

                        //a.textContent = "Download as Excel";
                        //a.textContent = "<img height='15' width='15' src='~/Content/img/download_3.png' />";

                        document.getElementById("downloadLinkArea").appendChild(a);
                    }

                    $(".editInPopup").off('click').on('click', editPopupLinkClicked);
                    $(".addInPopup").off('click').on('click', addPopupLinkClicked);
                    EnableSearchButton();
                    if ($("#dataTable").length) {
                        HideSearch();
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert("An error occured while getting data matching your search criteria.")
                    EnableSearchButton();
                }
            });
        }

        function CaptureSearchCriteria() {
            var searchCriteria = {};
            searchCriteria.Zone = $("#selZone").val();
            searchCriteria.Area = $("#selArea").val();
            searchCriteria.Territory = $("#selTerritory").val();
            searchCriteria.HQ = $("#selHQ").val();

            searchCriteria.LeaveType = $("#selLeaveType").val();
            searchCriteria.LeaveDuration = $("#leaveDuration").val();

            searchCriteria.EmployeeCode = $("#txtEmployeeCode").val();
            searchCriteria.EmployeeName = $("#txtEmployeeName").val();

            searchCriteria.DateFrom = $("#txtFromDate").val();
            searchCriteria.DateTo = $("#txtToDate").val();

            searchCriteria.LeaveStatus = $("#Status").val();

            return searchCriteria;
        }

        function DisableSearchButton() {
            $("#btnSearch").hide();
        }

        function EnableSearchButton() {
            $("#btnSearch").show();
        }

        function HideSearch() {
            $("#idSearchWell").hide();
            $("#showSearch").show();
        }

        function ShowSearch() {
            $("#idSearchWell").show("slow");
            $("#showSearch").hide();
        }

        function ClearResults() {
            $('#dataArea').html('');
        }

        function ZonesSelectionChanged() {
            $('#selArea option:not(:first-child)').remove();
            $('#selTerritory option:not(:first-child)').remove();
            $('#selHQ option:not(:first-child)').remove();

            // get current value of Zone
            var selectedZone = $("#selZone").val();
            FillAreasForZone(selectedZone);
        }

        function FillAreasForZone(z) {
            var selectedObj = {};
            for (i = 0; i < OfficeHierarchy.length; i++) {
                var o = OfficeHierarchy[i];
                if (o.ZoneCode == z) {
                    // use Area Name as key so we can sort by name
                    selectedObj[o.AreaName] = o.AreaCode;
                }
            }
            Object.keys(selectedObj).sort().forEach(function (element) {
                var opt = new Option(element, selectedObj[element]);
                $('#selArea').append(opt);
            });
        }

        function AreasSelectionChanged() {
            $('#selTerritory option:not(:first-child)').remove();
            $('#selHQ option:not(:first-child)').remove();
            var selectedZone = $("#selZone").val();
            var selectedArea = $("#selArea").val();
            FillTerritories(selectedZone, selectedArea);
        }

        // zone and area
        function FillTerritories(zo, ar) {
            var selectedObj = {};
            for (i = 0; i < OfficeHierarchy.length; i++) {
                var o = OfficeHierarchy[i];
                if (o.ZoneCode == zo && o.AreaCode == ar) {
                    selectedObj[o.TerritoryName] = o.TerritoryCode;
                }
            }
            Object.keys(selectedObj).sort().forEach(function (element) {
                var opt = new Option(element, selectedObj[element]);
                $('#selTerritory').append(opt);
            });
        }

        function TerritoriesSelectionChanged() {
            $('#selHQ option:not(:first-child)').remove();
            var selectedZone = $("#selZone").val();
            var selectedArea = $("#selArea").val();
            var selectedTerritory = $("#selTerritory").val();
            FillHQ(selectedZone, selectedArea, selectedTerritory);
        }

        // zone, area, tr
        function FillHQ(zo, ar, tr) {
            var selectedObj = {};
            for (i = 0; i < OfficeHierarchy.length; i++) {
                var o = OfficeHierarchy[i];
                if (o.ZoneCode == zo && o.AreaCode == ar && o.TerritoryCode == tr) {
                    selectedObj[o.HQName] = o.HQCode;
                }
            }
            Object.keys(selectedObj).sort().forEach(function (element) {
                var opt = new Option(element, selectedObj[element]);
                $('#selHQ').append(opt);
            });
        }

    </script>
}