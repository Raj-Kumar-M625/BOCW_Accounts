//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DBModel
{
    using System;
    using System.Collections.Generic;
    
    public partial class SqliteActionBatch
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public SqliteActionBatch()
        {
            this.SqliteExpenses = new HashSet<SqliteExpense>();
            this.SqliteOrders = new HashSet<SqliteOrder>();
            this.SqlitePayments = new HashSet<SqlitePayment>();
            this.SqliteReturnOrders = new HashSet<SqliteReturnOrder>();
            this.SqliteActions = new HashSet<SqliteAction>();
            this.SqliteCancelledLeaves = new HashSet<SqliteCancelledLeave>();
            this.SqliteDeviceLogs = new HashSet<SqliteDeviceLog>();
            this.SqliteEntityWorkFlowV2 = new HashSet<SqliteEntityWorkFlowV2>();
            this.SqliteAdvanceRequests = new HashSet<SqliteAdvanceRequest>();
            this.SqliteAgreements = new HashSet<SqliteAgreement>();
            this.SqliteIssueReturns = new HashSet<SqliteIssueReturn>();
            this.SqliteTerminateAgreements = new HashSet<SqliteTerminateAgreement>();
            this.SqliteBankDetails = new HashSet<SqliteBankDetail>();
            this.SqliteSTRs = new HashSet<SqliteSTR>();
            this.SqliteSurveys = new HashSet<SqliteSurvey>();
            this.SqliteQuestionnaires = new HashSet<SqliteQuestionnaire>();
            this.SqliteTaskActions = new HashSet<SqliteTaskAction>();
            this.SqliteTasks = new HashSet<SqliteTask>();
            this.SqliteEntities = new HashSet<SqliteEntity>();
            this.SqliteLeaves = new HashSet<SqliteLeave>();
            this.SqliteDayPlanTargets = new HashSet<SqliteDayPlanTarget>();
        }
    
        public long Id { get; set; }
        public long EmployeeId { get; set; }
        public long BatchInputCount { get; set; }
        public long BatchSavedCount { get; set; }
        public System.DateTime At { get; set; }
        public long DuplicateItemCount { get; set; }
        public System.DateTime Timestamp { get; set; }
        public bool BatchProcessed { get; set; }
        public Nullable<System.DateTime> LockTimestamp { get; set; }
        public long ExpenseLineInputCount { get; set; }
        public long ExpenseLineSavedCount { get; set; }
        public long ExpenseLineRejectCount { get; set; }
        public decimal TotalExpenseAmount { get; set; }
        public Nullable<System.DateTime> ExpenseDate { get; set; }
        public long ExpenseId { get; set; }
        public long NumberOfOrders { get; set; }
        public long NumberOfOrderLines { get; set; }
        public decimal TotalOrderAmount { get; set; }
        public long NumberOfOrdersSaved { get; set; }
        public long NumberOfOrderLinesSaved { get; set; }
        public long NumberOfPayments { get; set; }
        public decimal TotalPaymentAmount { get; set; }
        public long NumberOfPaymentsSaved { get; set; }
        public long NumberOfReturns { get; set; }
        public long NumberOfReturnLines { get; set; }
        public decimal TotalReturnAmount { get; set; }
        public long NumberOfReturnsSaved { get; set; }
        public long NumberOfReturnLinesSaved { get; set; }
        public bool UnderConstruction { get; set; }
        public long DuplicateExpenseCount { get; set; }
        public long DuplicateOrderCount { get; set; }
        public long DuplicateReturnCount { get; set; }
        public long DuplicatePaymentCount { get; set; }
        public long NumberOfEntities { get; set; }
        public long NumberOfEntitiesSaved { get; set; }
        public long DuplicateEntityCount { get; set; }
        public long NumberOfLeaves { get; set; }
        public long NumberOfLeavesSaved { get; set; }
        public long NumberOfCancelledLeaves { get; set; }
        public long NumberOfCancelledLeavesSaved { get; set; }
        public long DeviceLogCount { get; set; }
        public long NumberOfIssueReturns { get; set; }
        public long NumberOfIssueReturnsSaved { get; set; }
        public long NumberOfWorkFlow { get; set; }
        public long NumberOfWorkFlowSaved { get; set; }
        public string BatchGuid { get; set; }
        public long NumberOfImages { get; set; }
        public long NumberOfImagesSaved { get; set; }
        public string DataFileName { get; set; }
        public long DataFileSize { get; set; }
        public long Agreements { get; set; }
        public long AgreementsSaved { get; set; }
        public long AdvanceRequests { get; set; }
        public long AdvanceRequestsSaved { get; set; }
        public long TerminateRequests { get; set; }
        public long TerminateRequestsSaved { get; set; }
        public long BankDetails { get; set; }
        public long BankDetailsSaved { get; set; }
        public long STRCount { get; set; }
        public long STRSavedCount { get; set; }
        public long Surveys { get; set; }
        public long SurveysSaved { get; set; }
        public long DayPlanTarget { get; set; }
        public long DayPlanTargetSaved { get; set; }
        public long QuestionnaireTarget { get; set; }
        public long QuestionnaireTargetSaved { get; set; }
        public long Task { get; set; }
        public long TaskSaved { get; set; }
        public long TaskAction { get; set; }
        public long TaskActionSaved { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SqliteExpense> SqliteExpenses { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SqliteOrder> SqliteOrders { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SqlitePayment> SqlitePayments { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SqliteReturnOrder> SqliteReturnOrders { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SqliteAction> SqliteActions { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SqliteCancelledLeave> SqliteCancelledLeaves { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SqliteDeviceLog> SqliteDeviceLogs { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SqliteEntityWorkFlowV2> SqliteEntityWorkFlowV2 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SqliteAdvanceRequest> SqliteAdvanceRequests { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SqliteAgreement> SqliteAgreements { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SqliteIssueReturn> SqliteIssueReturns { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SqliteTerminateAgreement> SqliteTerminateAgreements { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SqliteBankDetail> SqliteBankDetails { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SqliteSTR> SqliteSTRs { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SqliteSurvey> SqliteSurveys { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SqliteQuestionnaire> SqliteQuestionnaires { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SqliteTaskAction> SqliteTaskActions { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SqliteTask> SqliteTasks { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SqliteEntity> SqliteEntities { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SqliteLeave> SqliteLeaves { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SqliteDayPlanTarget> SqliteDayPlanTargets { get; set; }
    }
}
