// <auto-generated />
using System;
using EDCS_TG.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EDCS_TG.API.Migrations
{
    [DbContext(typeof(KarmaniDbContext))]
    partial class KarmaniDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EDCS_TG.API.Data.Models.AdditionalInformation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("CitizensSupport")
                        .HasColumnType("bit");

                    b.Property<bool?>("Contact")
                        .HasColumnType("bit");

                    b.Property<Guid?>("Created_By")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("CulturalFlair")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CulturalFlairOthers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("FamilyAccept")
                        .HasColumnType("bit");

                    b.Property<string>("IfOthers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("KPSandotherdepartment")
                        .HasColumnType("bit");

                    b.Property<bool?>("ManktiProfession")
                        .HasColumnType("bit");

                    b.Property<string>("OrganizationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonalDetailsId")
                        .HasColumnType("int");

                    b.Property<string>("SexWorkProfession")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("WorkingTransgender")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("AdditionalInformation");
                });

            modelBuilder.Entity("EDCS_TG.API.Data.Models.CodeTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Created_By")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DisplaySequence")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Locale")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("CodeTable");
                });

            modelBuilder.Entity("EDCS_TG.API.Data.Models.Education", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Created_By")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DiscriminatedSchool")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("EducationOtherSpecify")
                        .HasColumnType("bit");

                    b.Property<string>("EducationalQualification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HouseDependent")
                        .HasColumnType("int");

                    b.Property<int?>("InformalEducation")
                        .HasColumnType("int");

                    b.Property<bool?>("InformalIfOthersSpecify")
                        .HasColumnType("bit");

                    b.Property<bool?>("InformalIfYesSpecify")
                        .HasColumnType("bit");

                    b.Property<string>("LikeToContinueEducation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonalDetailsId")
                        .HasColumnType("int");

                    b.Property<int?>("PresentlyStudying")
                        .HasColumnType("int");

                    b.Property<bool?>("PushedOutDueToIdentity")
                        .HasColumnType("bit");

                    b.Property<string>("ReadLanguages")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReadOthersSpecify")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReceivedTrainingSkills")
                        .HasColumnType("int");

                    b.Property<string>("Skill")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("SkillToAcquire")
                        .HasColumnType("bit");

                    b.Property<string>("SpeakLanguages")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpeakOthersSpecify")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("StudySchool")
                        .HasColumnType("bit");

                    b.Property<string>("StudySchoolIfOther")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudyingPeople")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("SubjectedVoilence")
                        .HasColumnType("bit");

                    b.Property<bool?>("SupportForEducation")
                        .HasColumnType("bit");

                    b.Property<string>("SupportNeeded")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrainingYears")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("WhatClass")
                        .HasColumnType("bit");

                    b.Property<string>("WhereSkill")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhichClass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WriteLanguages")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("WriteOthersSpecify")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Education");
                });

            modelBuilder.Entity("EDCS_TG.API.Data.Models.Employment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Accounts")
                        .HasColumnType("bit");

                    b.Property<int?>("AccountsOthers")
                        .HasColumnType("int");

                    b.Property<string>("AnnualIncome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Created_By")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmploymentCardMembership")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmploymentCardMembershipOthers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmploymentStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmploymentStatusIfothers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ExistingLoans")
                        .HasColumnType("bit");

                    b.Property<string>("HavePositionofOrganization")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Income")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Loans")
                        .HasColumnType("bit");

                    b.Property<string>("MoneySavingInvestments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NatureOfEmploymentOthers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OthersSpecify")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonalDetailsId")
                        .HasColumnType("int");

                    b.Property<bool?>("PositionofOrganization")
                        .HasColumnType("bit");

                    b.Property<string>("PrimarySourceofIncome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegisteredEmploymentAgency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RegisteredEmploymentAgencyWhich")
                        .HasColumnType("bit");

                    b.Property<string>("SecondarySourceWork")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondarySourceofIncome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Wheredoyouwork")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employment");
                });

            modelBuilder.Entity("EDCS_TG.API.Data.Models.Health", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("AffirmationSurgery")
                        .HasColumnType("bit");

                    b.Property<string>("Affordable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnyDisability")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommonHealthIssues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommonHealthIssuesOthers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConversionTerapy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("CostDetailsOfGas")
                        .HasColumnType("bit");

                    b.Property<bool?>("CostPerMonth")
                        .HasColumnType("bit");

                    b.Property<bool?>("CostPrice")
                        .HasColumnType("bit");

                    b.Property<Guid?>("Created_By")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("HormoneReplaceTherapy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HormoneReplacementTherapy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hospital")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IfYesWhatKind")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MedicalCostForMonth")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("MedicalEmegencyInYear")
                        .HasColumnType("bit");

                    b.Property<bool?>("MentalHealthDiagnosis")
                        .HasColumnType("bit");

                    b.Property<bool?>("MentalHealthSupport")
                        .HasColumnType("bit");

                    b.Property<bool?>("MonetarySupport")
                        .HasColumnType("bit");

                    b.Property<string>("MonetarySupportPlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("MonthlyMedicalExpenses")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("NeedsMedicalCare")
                        .HasColumnType("datetime2");

                    b.Property<string>("OtherDisability")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonalDetailsId")
                        .HasColumnType("int");

                    b.Property<string>("PhysicalDisability")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceofSurgery")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ReaminingSurgery")
                        .HasColumnType("bit");

                    b.Property<bool?>("SensitiveMentalHealth")
                        .HasColumnType("bit");

                    b.Property<bool?>("SideEffectOfHRT")
                        .HasColumnType("bit");

                    b.Property<string>("SideEffectOfHRTOthers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("SuccessfulSurgery")
                        .HasColumnType("bit");

                    b.Property<string>("SufferingHealthIssues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SufferingHealthIssuesOthers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("SurgeryReDone")
                        .HasColumnType("bit");

                    b.Property<string>("TreatmentIssue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WhichHospitalSurgery")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Health");
                });

            modelBuilder.Entity("EDCS_TG.API.Data.Models.Housing", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AgliculturallandPlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Agliculturallandtype")
                        .HasColumnType("bit");

                    b.Property<string>("AreaOfResidence")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AreaOfResidenceOthers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("AssetsYouHave")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AssetsYouHaveOthers")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ChosenGender")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Created_By")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Elecrticity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ElecrticityOthers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HouseOwnership")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HouseOwnershipIfothers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("HousingSchemes")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LiveInCommunityHome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("LiveInCommunityHomeIfothers")
                        .HasColumnType("bit");

                    b.Property<string>("LiveStock")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("LiveStockType")
                        .HasColumnType("bit");

                    b.Property<Guid?>("NeedOldAgeHomes")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OwnPropertyFromParents")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnSite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ownland")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonalDetailsId")
                        .HasColumnType("int");

                    b.Property<Guid?>("ShareOfProperty")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ShelterSpaceOthers")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ShelterSpaceRequired")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Toilet")
                        .HasColumnType("bit");

                    b.Property<string>("ToiletIfothers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("TotalAgliculturalland")
                        .HasColumnType("bit");

                    b.Property<string>("TypeOfHouse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfHouseIfothers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfLand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfRoof")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfRoofIfothers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WaterFecility")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WaterFecilityOthers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("WhichScheme")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("commercial")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Housing");
                });

            modelBuilder.Entity("EDCS_TG.API.Data.Models.PersonalDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AadharNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("AttireWear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Caste")
                        .HasColumnType("bit");

                    b.Property<string>("ChosenGender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClothesSenseGender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Created_By")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrentAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentDistrict")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CurrentHobli")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CurrentPinCode")
                        .HasColumnType("int");

                    b.Property<string>("CurrentTaluk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentVillage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DependentOnSomeone")
                        .HasColumnType("bit");

                    b.Property<bool?>("Dependents")
                        .HasColumnType("bit");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FamilyAccepted")
                        .HasColumnType("bit");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntersexVariation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LiveSingle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("LiveWithCommunity")
                        .HasColumnType("bit");

                    b.Property<string>("LiveWithParents")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Married")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Migration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MigrationYears")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MotherTongue")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PeopleLiveInHouse")
                        .HasColumnType("bit");

                    b.Property<int?>("PhoneNumber")
                        .HasColumnType("int");

                    b.Property<string>("PlaceofBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Religion")
                        .HasColumnType("bit");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SurveyTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TransgenderCommunity")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("WorkingInHouse")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("PersonalDetails");
                });

            modelBuilder.Entity("EDCS_TG.API.Data.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Role", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = "10",
                            Name = "Admin",
                            NormalizedName = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = "11",
                            Name = "Surveyor",
                            NormalizedName = "Surveyor"
                        });
                });

            modelBuilder.Entity("EDCS_TG.API.Data.Models.RoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaim", (string)null);
                });

            modelBuilder.Entity("EDCS_TG.API.Data.Models.ServeyType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Created_By")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ServeyType");
                });

            modelBuilder.Entity("EDCS_TG.API.Data.Models.SocialSecurity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AvailGovernmentSchemeName")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AvailGovernmentSchemeType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("BusinessSupport")
                        .HasColumnType("bit");

                    b.Property<string>("BusinessSupportScheme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("CardType")
                        .HasColumnType("bit");

                    b.Property<bool?>("CardTypeOthers")
                        .HasColumnType("bit");

                    b.Property<bool?>("CasteCertificate")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ChangeGenderNotarizedAffidavit")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Created_By")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("EducationSupport")
                        .HasColumnType("bit");

                    b.Property<string>("EducationSupportScheme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("GetPension")
                        .HasColumnType("bit");

                    b.Property<string>("GetRation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentifyDocument")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentifyDocumentOthers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IncomeCertificate")
                        .HasColumnType("bit");

                    b.Property<bool?>("InsuranceCertificate")
                        .HasColumnType("bit");

                    b.Property<string>("InsuranceTypes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InsuranceTypesOthers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("OtherPensionScheme")
                        .HasColumnType("bit");

                    b.Property<string>("OtherRationScheme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PensionScheme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonalDetailsId")
                        .HasColumnType("int");

                    b.Property<string>("ProtectionAct")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("RationScheme")
                        .HasColumnType("bit");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("SocialSecurity");
                });

            modelBuilder.Entity("EDCS_TG.API.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("OTP")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OTPValidity")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("PhoneNumber")
                        .IsUnique()
                        .HasFilter("[PhoneNumber] IS NOT NULL");

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6a36ca5a-5b47-4966-81ab-2bbc4fbe8fa1",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "Admin User",
                            OTP = 1234,
                            OTPValidity = new DateTime(2022, 10, 21, 16, 44, 27, 160, DateTimeKind.Local).AddTicks(6183),
                            PhoneNumber = "9999999910",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "171c9497-82c0-49d5-a89b-91de7f20fb91",
                            TwoFactorEnabled = false,
                            UserName = "Admin User"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "aa2735af-78a9-4be0-8ea0-2b19303d1ffe",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "Surveyor User",
                            OTP = 1234,
                            OTPValidity = new DateTime(2022, 10, 21, 16, 44, 27, 160, DateTimeKind.Local).AddTicks(6205),
                            PhoneNumber = "9999999999",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "97f818be-f619-4bc1-ac3a-e592abec1289",
                            TwoFactorEnabled = false,
                            UserName = "Surveyor User"
                        });
                });

            modelBuilder.Entity("EDCS_TG.API.Data.Models.UserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaim", (string)null);
                });

            modelBuilder.Entity("EDCS_TG.API.Data.Models.UserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogin", (string)null);
                });

            modelBuilder.Entity("EDCS_TG.API.Data.Models.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRole", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("EDCS_TG.API.Data.Models.UserToken", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserToken", (string)null);
                });

            modelBuilder.Entity("EDCS_TG.API.Data.Models.RoleClaim", b =>
                {
                    b.HasOne("EDCS_TG.API.Data.Models.Role", "Role")
                        .WithMany("RoleClaims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("EDCS_TG.API.Data.Models.UserClaim", b =>
                {
                    b.HasOne("EDCS_TG.API.Data.Models.User", "User")
                        .WithMany("Claims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EDCS_TG.API.Data.Models.UserLogin", b =>
                {
                    b.HasOne("EDCS_TG.API.Data.Models.User", "User")
                        .WithMany("Logins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EDCS_TG.API.Data.Models.UserRole", b =>
                {
                    b.HasOne("EDCS_TG.API.Data.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDCS_TG.API.Data.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EDCS_TG.API.Data.Models.UserToken", b =>
                {
                    b.HasOne("EDCS_TG.API.Data.Models.User", "User")
                        .WithMany("Tokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EDCS_TG.API.Data.Models.Role", b =>
                {
                    b.Navigation("RoleClaims");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("EDCS_TG.API.Data.Models.User", b =>
                {
                    b.Navigation("Claims");

                    b.Navigation("Logins");

                    b.Navigation("Tokens");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
